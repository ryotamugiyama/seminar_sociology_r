[["index.html", "Rによる社会調査データ分析の手引き まえがき", " Rによる社会調査データ分析の手引き 麦山 亮太（学習院大学法学部政治学科）/ Ryota Mugiyama (Department of Political Studies, Gakushuin University) Last update: 2025-05-20 まえがき 本資料は麦山が担当する学習院大学法学部政治学科「社会学演習（社会的不平等に関する実証研究）」、同大学院政治学研究科「統計解析I」「社会階層論（社会調査データの計量分析）」の授業で使用する資料です。その他の授業でも活用することがあります。授業では適宜口頭で説明を補いながら使うことを想定しているため説明を簡単に済ませているところもありますが、どなたでも参照できるかと思います。分かりやすさを重視しているため、厳密性には欠けるところがあるかもしれません。 タイトルに示されているとおり、本資料の目的はとくに社会調査の個票データを分析するうえで必要となるR/RStudioの使い方、そしてその前後に研究計画の立て方と論文のまとめかたを置き、一通り社会調査データの分析のための作法を整理して記したものです。扱っている内容は左記の目次のとおりです。スマートフォンで見ている場合には上部にある4本線のアイコンをクリックすることで目次をみることができます。 本資料は、麦山の専門分野である社会学、とりわけ社会階層研究を念頭に置き、かつ既存の社会調査データを利用することを念頭において作成しています。そのため、分野が異なる、扱うデータの形式が異なるといった場合には適宜距離を取って参照してください。 本資料はいつまでもベータ版で、今後授業などを通じて少しずつアップデートしていく予定です。アップデートは予告なしに行いますのでご了承ください。 "],["plan.html", "Chapter 1 研究計画を立てる 1.1 研究計画とは 1.2 研究計画の構成 1.3 使用する調査データの選定 1.4 先行研究を探す", " Chapter 1 研究計画を立てる 本章では、データ分析に着手し、論文をまとめるための大前提となる研究計画の立て方を説明する。 1.1 研究計画とは データ分析を始める前には、まずどのような研究をしようとするのか、という計画を考える必要がある。何も考えずにただデータを分析し始めても、よい論文を書くのは難しい。実際にデータを開いて分析を始める前に十分に計画を練っておくことで、有意義な論文を書くことにつながる。そこで、個人／グループごとに研究計画書を作成する。分量としてはだいたい3–5ページくらい（参考文献リスト含む）を目安とする。ここで書いた研究計画書を最初のたたき台として、データ分析を行い、期末レポートを執筆する。 研究計画に書いた内容は、たんに計画を立てるというだけでなく、これを土台にして（膨らませて）論文にしていくものでもある。研究計画は次のような役割を果たす： 何を明らかにするのか（問い）を明確にする：問いは、何をどのように分析するのかについての指針を与えてくれる。問いが明確であるほど、やるべきことはクリアになる。逆に、問いがあいまいだと、分析の方向性もあいまいになり、何をすればいいのかがわからなくなってしまう。 先行研究で解かれていない謎を明確にする：もちろん、はじめに持った自分の「問題意識」は重要である（それがなければ研究は始まらない！）。ただし、その問題意識はたいていぼんやりとしているし、またぼんやりとした問題意識から導かれた問いは、すでに他の研究によって明らかになっていることかもしれない。ぼんやりとした問題意識を明確にするためには、先行研究を整理し、どのようなことがわかっているのか、あるいはどのようなことがわかっていないのか、あるいは先行研究で解決されていない点や矛盾している点を見つける必要がある。その部分こそが、研究を通じて貢献できる問いにつながる部分になる。 問いがなぜ重要なのかを明確にする：先行研究で解かれていないことやまだ明らかになっていないことがあるのは、もしかするとそれらがあまり重要ではないからかもしれない。問いがなぜ重要なのか、何が問うに値する重要な問いなのか、この問いを明らかにすることにどのような意義があるのか。こうした点をあらかじめきちんと考えることで、あまり重要ではない問いに時間を浪費せずにすむだろう。 よく練られた研究計画であればあるほど、論文を書くときの苦労は少なくなり、よい論文につながる可能性は高くなる。たとえば自分で調査をしたり実験をしたりしてデータを集めるときに、研究計画が重要であることは言うまでもない。しかしながら、たとえこの授業のように自分でデータを集めない（他の人が実施した調査データを分析する）のだとしても、上記の効用はとても大きく、研究計画の作成には時間をかける価値がある。 1.2 研究計画の構成 研究計画は、以下の4つの要素からなる。 研究背景 研究目的・問い 方法 参考文献 1.2.1 研究背景 研究背景は、研究で扱いたい問題が重要な問題であり、この問題についてどのようなことがわかっていないのかを提示することで、問いへとつなげる部分である。文章にする場合には、次の2–4段落からなる。 1.2.1.1 問題背景（1段落程度） 研究で扱いたい問題が社会問題としてand/or社会学的に重要であることを述べる。 社会問題として重要、というのは、平等、人権、健康、持続可能性などなど、人間社会において重要とされている価値に照らして、その重要性を主張するものである。一見個人的な問題であっても社会問題と関わりをもつことは多いので1、必ずしも世の中で「社会問題」だと言われている必要はない。どのようなトピックであっても、それがなぜ社会問題として重要であるのかを考える必要がある。また、その問題の重要性や規模感を示す根拠として公的統計の値などを提示することもある。 社会学的に重要、というのは、社会学で伝統的に扱われてきた問題に照らして、その重要性を主張するものである。不平等に関係する社会学の伝統的な問題としては、世代間社会移動、教育機会の不平等、労働市場におけるジェンダー不平等、家族形成のパターン、夫婦間の無償労働の分担（権力関係）などが挙げられる。伝統的に扱われてきた問題はそれだけその重要性が認められており、したがって扱うトピックが重要であることを示す根拠にもなる。 もちろん、「自分が関心を持った」というのは最初のモチベーションとして大事だが、「自分が関心をもった」というだけでは、他の人にとっては説得的ではない。他の人にも関心をもってもらえるように、その重要性を述べることが大事である。 1.2.1.2 先行研究の整理（1–3段落程度） 先に述べた問題に関連して、先行研究がこれまでに何を明らかにし、何を明らかにしていないのか、あるいは先行研究に存在する限界点を提示する。ここでは、調べた先行研究を1つひとつ羅列するわけではなく、それらをまとめた全体像を示す必要がある。 先行研究の整理は、たんに調べた内容を示すわけではなく、先行研究の整理を通じて、（重要であるにもかかわらず）明らかになっていないこと・課題が何かを示すことこそが本丸となる。この箇所こそが、自分たちの研究で解く「問い」になる。先行研究が適切に整理されていなければ、自分たちの研究がオリジナリティのあるものなのか、またそのオリジナリティが何であるのかもわからない。研究のオリジナリティを示すためには、十分に先行研究を読み込んで、整理しなければならない。 先行研究と比べたオリジナリティの出し方には色々ある。最も典型的なものは、先行研究がそもそも分析していない問いがある、というものである。もちろんこの場合も、その問いがなぜ重要なのかを説明する必要があることは言うまでもない。 それ以外にも様々なパターンがある。一例を挙げると： 先行研究はある社会（たとえば、アメリカ）について扱っているが、別の社会（たとえば、日本）でも同じような結果が得られるとは限らない。このような場合には、別の社会では、ある社会と同様の関係が成り立つとは限らないのではないか、という根拠を説明する必要がある（どの社会でも同様に成り立つと考えるのならば、わざわざ別の社会で検証する意義はあまりない）。 同じ社会を扱っていたとしても、先行研究の結果は、別の集団（異なる階層、異なる性別、異なる年齢層）には当てはまらないかもしれない、もしくは、集団によって結果が異なるかもしれない。このような場合には、なぜ集団によって結果が異なる可能性があると考えられるのか、その根拠を説明する必要がある（どんな集団でも同様に成り立つと考えるのならば、わざわざ集団間の違いを検証する意義はあまりない）。 同じ社会を扱っていたとしても、先行研究が扱っている時代（データ）が古い場合には、その結果は現代においては当てはまらないかもしれない。このような場合には、なぜ過去と現代では違った結果になる可能性があると考えられるのか、その根拠が必要となる（いつの時代も成り立つと考えるのならば、わざわざ改めて検証する意義はあまりない）。 ちなみに、先行研究が乏しいからといって、必ずしもそのテーマが「悪い」テーマであるということではない。重要であるにもかかわらず、これまで注目されてこなかったり、利用可能なデータが限られていたりするために十分に扱われていないテーマは少なくない。しかし、あまり扱う意義がない（社会問題として and/or 社会学的に重要性が低い）から先行研究が少ないという場合なら、そのテーマを選ぶのはあまり良い選択ではないだろう。両者の違いがよくわからないという場合は、教員に相談するとよい。 なお、先行研究といっても、特定の課題について論じているものはなんでもかんでも先行研究になるのかというと、そうではない。この点については「先行研究を探す」の節でさらにくわしく説明する。 1.2.2 研究目的・問い 研究目的・問いは、自分たちの研究の目的（明らかにしたいこと）・問いを提示する部分である。文章にする場合には、次の1–3段落程度からなる。 1.2.2.1 研究目的・問い（1–2段落程度） 研究目的（問い）を提示する。ここでの研究目的（問い）は、「xxxを明らかにする」「どの程度yyyなのか？」など、何をやるのかが明確な問いを提示する。社会調査データを使った分析で取り組まれる問いには、大きく分けて2種類の問いがある。 記述的問い：実態を明らかにすることを目的とする問い。すでに明らかになっている実態をさらに掘り下げてみていくことも含まれる。 説明的問い：実態が明らかになっていることを（ある程度）前提として、それがなぜ生じるのかを明らかにすることを目的とする問い。 問いを立てるときには、先行研究をよく読んで、問いを「絞る」ことが大切になる。たとえば、「なぜジェンダー格差があるのか？」というのは、問いの形ではあるけれども、それだけではあまりに大きすぎ、かつ漠然としているため、到底1つの論文で答えることはできないし、分析の焦点もぼやけてしまう。そこで、答えることができる問いへと焦点を絞っていくことが大事になる。 問いを絞るときには、次のような要素を考えるとよい。 誰を対象とするのか？：国、時代、年齢、就業状態、など どのような集団どうしを比較するのか？：男性と女性、ひとり親世帯出身者とふたり親世帯出身者、大卒者と非大卒者、既婚者と未婚者、時代、など 何の変数を比較するのか？：教育達成、賃金、幸福度、友人の有無、など また、問いを立てるときには、実際にデータによって検証可能な問いにする必要がある。社会問題として and/or 社会学的に重要な問いはいくらでもあるが、問いに答えるのに十分な情報を収集したデータがなければ、検証することはできない。そのような場合には、類似する検証可能な問いに変換したり、別の問いを探したりする必要がある。完璧なデータというのは存在しない以上、問いをずらして検証可能なようにするというのはよく行われることである。 たいていの場合、問いは「大きすぎる」ことが多い。問いを絞れているというのはつまり、それだけ先行研究をチェックして、何がわかっていないのかを特定できているということであるから、問いは小さくても構わないどころか、むしろ小さい方がよいといえる（ただし、あまりに小さすぎて意義がほとんどないというのはよくない）。どんなに小さくても、明確な問いを立ててそれを検証することができれば、それによってこれまでわかっていなかったことを明らかにするという貢献につながる。 1.2.2.2 仮説（1段落程度、あれば） 上記の問いに対する仮説を提示する。1つでもよいし、複数（最大で4つほど）あってもよい。このとき、ただ仮説だけを書くのではなく、そのような仮説が導かれる根拠（なぜそのように考えられるのか？）についても書く。仮説を導くときには、理論（的に考えること）がしばしば有効である。 仮説は、「男性は女性と比べて近所との付き合いが少ない」「所得が高いほど、政府による所得の再分配に反対しやすい」といったように、比較の視点が入っており、かつ、検証可能なものであるとよい。 1.2.3 方法 1.2.3.1 データ 何の調査データを使用するのかを書く。またその調査データがどのような人を対象としており、いつ、どのような方法で調査が実施されたのか、どのような質問項目を聴取しているのかについて書く。 1.2.3.2 分析対象 実際に分析する対象（母集団）について書く。たいていの社会調査データは広い母集団を対象としているので、そこから分析対象を絞ることが多い。何歳から何歳までか。男性も女性も含むか、どちらかだけか。働いている人か、働いていない人も含むか、結婚している人か、など。 データや分析対象が先に設定した問いときちんと対応しているかをよく確認する。たとえば、「親の労働時間が長いと子どものメンタルヘルスは悪化するのではないか？」という問いを立てたとする。このような場合であれば、子どもを分析対象とする必要があり、大人（成人）を対象とした調査では答えることが難しい。また、子どもを対象とした調査だとしても、親の労働時間を尋ねていない調査であったとしたら、やはりこの問いには答えることができない。 1.2.3.3 使用する変数 従属変数、独立変数、あるいは統制変数について、使用予定の変数を書く。また、変数の名前だけでなく、どのように値を加工するかについても書くと良い。たとえばJGSSの場合は次のように書く。 子どもへの教育費支出（SZEXED：世帯支出 - 教育費）。回答区間の中央値をとって、連続変数に変換する。 本人の最終学歴（XXLSTSCH：最終学校（本人））。中学、高校、短大高専、大学の4カテゴリにまとめる。 1.2.3.4 分析方法 クロス集計、散布図、平均値の比較、回帰分析、など、使用予定の分析手法について書く。また、どのように分析するのか（何の変数と何の変数のクロス集計を作成するのか？など）についても書けるとよい。 1.2.4 参考文献 研究計画書で引用した文献（書籍、論文、ウェブサイト等）について書く。読んだけれども引用はしていない文献は含めない。書籍・論文を含め少なくとも10本以上は引用するのが望ましい。実際には読んだけれど引用しないという文献もあるので、数十本は目を通すことになる。 後で述べるとおり文献の質は玉石混交であり、また研究には「流れ」があるため、手当り次第にインターネットを検索して文献を羅列してもあまりよい先行研究のサーベイにはならない。先行研究の探し方については後述する。 1.3 使用する調査データの選定 1.3.1 個票データとは何か たとえば「学歴が高い人ほど平均年収が高い」といった仮説や、「学歴が高い人ほど子どもがいる割合が高い」といった仮説を検証したいとする。このような仮説を検証する場合には、一人ひとりについて（1）学歴、（2）年収、そして（3）子どもがいるかどうか、についての情報を得ることが必要である。このように、一人ひとりについてさまざまな情報を（アンケートなどによって）聴取し、その回答を集めたデータを個票データと呼ぶ。たとえば今回の場合は、以下の［A］のような回答を格納した個票データが得られたとしよう。 ［A］個票データ ID 最終学歴 個人年収 子どもの有無 1 大学 500 1（あり） 2 中学 300 1（あり） 3 高校 500 0（なし） ︙ ︙ ︙ ︙ 99 大学 700 1（あり） 100 高校 400 0（なし） たんに個票データをじっと眺めてみても、それだけでは傾向は見えてこない（おもしろいかもしれないが）。このような個票データから先に立てた問いに答えるためには、学歴ごとに、年収の平均値や、子どもがいる人の割合を計算する必要がある。このように計算を行って得られたのが、以下の［B］の集計データである。研究者はこのような個票データをもとにさまざまな集計を行って、属性間の傾向の違いを検討したりしており、実際に論文に示されたり、政府の白書などで示されたり、e-Statに掲載されたりしているのは、［B］のように加工されたあとの結果である。 ［B］集計データ 最終学歴 個人年収の平均 子どもがいる割合 中学 319 0.8 高校 424 0.85 大学 566 0.91 自分の関心にもとづいて、先行研究ではまだわかっていない独自の仮説を検証したいとき、多くの場合は［A］の個票データを手に入れる必要がある。もちろん、このような個票データを取得することは簡単ではない。そのへんを歩いている人にアンケートを配ってみたり、SNSでGoogleFormに回答するよう呼びかけて集めたとしても、知りたい対象からランダムに選ばれたデータになるとは到底言えないし、回答する人も大変である。 そこで、過去の研究者や研究機関などが実施した質の高い調査を二次利用することで、新しく調査を行ったり、回答の負担をかけることなく、自分独自の問いに答え、社会の実態を明らかにすることができる。 1.3.2 JGSS まずは、大阪商業大学JGSS研究センターが実施している、日本版総合的社会調査（Japan General Social Survey, JGSS）のデータを見てみよう。JGSSでは調査年ごとに非常に多様な質問項目が設けられているので、大抵の問題関心に沿った分析が可能である。 まず、どのような調査がされているのかを確認してみよう。調査対象者は？調査の形式は？どのような調査票？調査の詳細は、こちらに記されている。 次に、関心に合う項目を探してみよう。項目はこちらから調べることができる。 関心に合う項目を見つけたら、その項目が何年の調査で尋ねられているか確認しよう。2025/4/27時点では2000–2022年のデータが使用できる。 JGSSは20–89歳という幅広い年齢層を対象としているため、たとえば5000人の有効回答があったとしても、分析対象者を限定していくと、対象人数は少なくなり、分析が難しいことがある。このような場合には、複数時点の調査データを合併して分析する（もしくは後述のように別のデータを使う）という方法がある2。ただし、関心のある変数がどの時点にも含まれているかどうかをよく確認すること。 居住都道府県に関する情報は2006年まで、地域ブロック（北海道・東北、関東、中部、近畿、中国・四国、九州の6区分）に関する情報は2010年までのデータにしか含まれていないことに注意。詳しくはこちらを参照のこと。 1.3.3 JGSS以外の日本の社会調査 より具体的に関心が固まってくると、多くの場合はJGSSでは必ずしも自分たちの関心に十分に答えられないということが出てくる。こうしたときは、別のデータの使用を考えてみよう。東京大学社会科学研究所附属社会調査・データアーカイブ研究センターが提供するデータアーカイブでは、研究用に個票データを貸し出している。 実際にデータを探してみよう。データを探すから、データ検索システムにアクセスする。「教育目的利用」の欄を「利用可」に設定する。そして、適当な単語などを入れて検索すると、条件に該当する調査データの一覧が表示される3。 非常にたくさんの調査データが利用可能だが、調査の質はさまざまなので注意したい。気になるデータがあれば、教員に聞くこと。個人的におすすめできる調査データ、および過去のゼミで使われた実績のある調査データの一例を挙げておく。 調査名 実施者 実施年 社会階層と社会移動全国調査（SSM調査） SSM調査管理委員会 1955年から10年ごと 全国家族調査（NFRJ） 日本家族社会学会 1998, 2001, 2003, 2008, 2018年 東大社研・若年壮年パネル調査（JLPS） 東京大学社会科学研究所 2007年から毎年 全国就業実態パネル調査（JPSED） リクルートワークス研究所 2016年から毎年 子どもの生活と学びに関する親子調査（JLSCP） ベネッセ教育総合研究所 2015年から毎年 日本人の意識調査 NHK放送文化研究所世論調査部 1973年から5年ごと 親と子の生活意識に関する調査 内閣府子ども若者・子育て施策総合推進室 2011年 そのほか、上記のページから入手することはできないが利用可能でかつ定評のある調査データもある。いくつか上げておく。ただし、いずれもパネル調査データ4なので、分析にはそれなりのスキルが必要になる。 調査名 実施者 実施年 消費生活に関するパネル調査（JPSC） 慶應義塾大学パネルデータ設計・解析センター 1993年から毎年 日本家計パネル調査（JHPS/KHPS） 同上 2004年から毎年 日本子どもパネル調査 同上 2010年から2014年まで毎年、以降2年に一度 1.3.4 日本以外の社会調査データ もちろん、日本以外の国を対象とした調査データを分析してもよい。中国・韓国・台湾であれば、JGSS同様、大阪商業大学JGSS研究センターが実施しているEast Asian Social Survey（EASS）を使うことを考えてみるとよい。数年に一度、テーマを変えながら毎年実施されている。 その他の国であれば、たとえばICPSRやGESISといった国際的なデータアーカイブから調査データを探すことができる。ICPSRのデータであれば、学部生でも、学内のネットワークからアクセスできる。 また、OECDが実施しているPISA（Programme for International Student Assessment）やPIAAC（Programme for the International Assessment of Adult Competencies）といった国際比較調査も、誰でも利用可能なようにデータが公開されている。本資料でもPIAACの日本版データを例として使用している。 残念ながら、既存の調査で尋ねられていない項目や、既存の調査で尋ねられているものの、それと組み合わせるための項目が尋ねられていないような問いの場合は、研究することができない。たとえば、「性別適合手術を受けて身体の性別を男性から女性に変えた人は、手術前と比べて賃金が低下するのか？」という問い5を立てたとする。しかしながら、管見の限り日本でこの問いを検証可能なデータは存在しないため、この授業では検証することはできない。このように、データによって検証不可能な場合は、それと関連する別の問いへと問いを「ずらす」ことで、検証可能な問いを立てる必要がある。 1.4 先行研究を探す 先行研究とは、自分の扱うテーマについて扱った研究成果を指す。研究成果は、主として学術書や論文として出版されている。 研究計画を立てるうえでは、たくさんの先行研究を読み、先行研究で何が明らかになっていないのかを明確にすることが不可欠である。研究では、たんに疑問に対して答えを出すだけではなく、その疑問がまだ解かれていないものであることを説明し、そして、その疑問がなぜ重要なのか（明らかにするに値する問いなのか）を説明する必要がある。これらを説明するためには、これまでに何が分かっているのか・分かっていないのかを知ることが必要である。 先行研究を読んで問いを洗練させていけばいくほど、何をすべきかが明確になり、分析や論文執筆はスムーズに進むようになる。研究の質は、実は分析内容それ自体だけではなく、先行研究との違いを正確に見出しているかどうかに大きく左右される（研究者はしばしばこのことを問題をいかに位置づけるか = フレーミングするかが重要だ、という）。したがって、先行研究を探すことはとても重要である。もちろん、こうした作業はデータ分析を始めてからもさらに進めていくことになる。 とはいえ、ただたんにGoogleで検索にかけてても、良い論文にたどり着くことは難しい。たとえばGoogle Scholarを使って論文を探すというのは基礎演習などで教わったかもしれない。しかし、世の中には数え切れないくらいたくさんの論文や書籍があり、かつ、論文の質も玉石混交である。また、手当たり次第に羅列すればよいというものでもなく、研究の「流れ」を掴んで、貢献すべき先行研究群（literature）を設定することが必要となる。 そこで、文献を探し先行研究群を設定するにあたって、一般的な方針をいくつか紹介しておく。 1.4.1 論文 学術雑誌に掲載された論文のうち、専門家による査読を経たものを査読つき論文という。査読とは、論文が掲載される前に匿名の審査員によって審査し、修正を要求することを指す。査読を通っていることは、その論文が一定以上の質が担保されている確率が高いことを意味する。研究者が「先行研究」というときはまずこれを指すことが多く、最も重要である。まずは、査読付きの学術雑誌に掲載された論文を優先的に探して読むとよい。 他方で、学術雑誌に掲載された論文のうち、専門家による査読を経ていないものを査読なし論文と言う。学術雑誌で特集を組まれたりする場合には「特集論文」などと呼ばれたりもする。また、いろいろな大学では『◯◯大学法学部紀要』のようなかたちで、紀要論文というのを発行している。これも基本的には査読を経ていないものがほとんどである。 雑誌というからには紙面をイメージするが、現代では基本的にこうした論文にはインターネットを通じてアクセスする。 1.4.1.1 日本語の査読つき学術雑誌 日本語で書かれた、社会学に関連する査読付き論文を掲載している学術雑誌のうち、とくに教員の専門に近い分野（不平等、労働、家族、教育、等）の雑誌としては、たとえば以下のようなものがある6。 社会学評論 家族社会学研究 教育社会学研究 日本労働研究雑誌 理論と方法 人口学研究 ソシオロジ フォーラム現代社会学 年報社会学論集 社会学年報 1.4.1.2 英文の学術雑誌 英語が読める（読もうという意欲がある）のであれば、英語論文も探せるととてもよい。競争率は高く、査読も厳しいため、日本語論文よりも内容的に優れたものに出会える可能性がはるかに高い。同じテーマであっても、日本国内の数倍〜数十倍は蓄積があることがほとんどである英語論文については、大学内のネットワークからアクセスできる。 英語論文を探す場合には、学習院大学だと、学内のネットワークにつないだ状態で学習院大学Discovery Serviceにアクセスするとよい。本文が利用可能な場合は、論文ファイルをダウンロードできる。 社会学における代表的な英文雑誌、とくに麦山の専門と近いものには以下のようなものがある。 一般誌（社会学一般、とくに定量的な研究が多いもの） American Sociological Review American Journal of Sociology Social Forces European Sociological Review Social Science Research Sociological Science 領域誌（社会階層、労働、家族、人口、教育など） Demography Journal of Marriage and Family Research in Social Stratification and Mobility Work, Employment and Society Work and Occupations Sociology of Education Population and Development Review レビュー雑誌 Annual Review of Sociology7 最近では、かなり質の高い翻訳をしてくれるサービス（e.g. DeepLや、それを活用して英語論文をレイアウトを保ったまま日本語訳してくれる便利なウェブページ（e.g. Readable）、あるいはウェブページ上で（pdf形式ではなく）本文を読める場合にはGoogle翻訳するといったように、英語を楽に読むためのさまざまな手段がある。英語だからといって最初から読まないよりは、たとえ機械翻訳であったとしても読むほうがいいに決まっているので、積極的にチャレンジしてみるとよい。 1.4.2 書籍 1.4.2.1 学術書 研究者が一人で、または複数人で、自身の研究成果を記した書籍を学術書という。学術書は、先行研究になりうる。学術書は、次のような特徴を持つ。 末尾に参考文献表や索引が記載されており、少なくない参考文献が記載されている（最重要！） 大学図書館や学内の書店の書棚に置かれている 学術出版社（◯◯大学出版会、など）から出版されている ハードカバー（硬い表紙）のことが多い。ほとんどはA5またはB6サイズ 先に述べたような査読付き論文で引用されている 先行研究となる学術書を見分けるためには多少の経験が必要だが、以上のような条件を満たしていれば、おおむね学術書籍といえるだろう。 一人の著者がその書籍のすべてを執筆している場合を、単著（本）という。たとえば次のような場合である： 豊永耕平，2023，『学歴獲得の不平等：親子の進路選択と社会階層』勁草書房. 岩間暁子，2008，『女性の就業と家族のゆくえ：格差社会のなかの変容』東京大学出版会． Putnam, Robert D. 2015. Our Kids: The American Dream in Crisis. Simon &amp; Schuster. （柴内康文訳，2017，『われらの子ども:米国における機会格差の拡大』創元社.） Goldin, Claudia. 2021. Career and Family: Women’s Century-Long Journey toward Equity. Princeton University Press.（鹿田昌美訳，2023，『なぜ男女の賃金に格差があるのか：女性の生き方の経済学』慶應義塾出版会．） これに対して、複数の著者が集まって、それぞれ別々の章を分担して執筆して、一つの書籍としている場合を、編著という。編著の場合は、その編著全体を引用するというよりは、個別の章を引用することが多い。たとえば次のような場合である： 石田浩，2021，「世代間階層移動と教育の趨勢」中村高康・三輪哲・石田浩編『シリーズ少子高齢社会の階層構造1 人生初期の階層構造』東京大学出版会，xx–xx． 1.4.2.2 新書 岩波新書、中公新書、ちくま新書、など、小さいサイズで一つのテーマについて扱った書籍である。新書には、研究者が自身の研究成果を一般向けにわかりやすく書いたものと、研究者ではない一般の著作家が一般向けに書いたものの両方が含まれる。見た目の特徴として次のようなことが上げられる。 文庫本よりも縦長 高くても1000円程度 一般の書店にも売られている 「◯◯新書」と書かれている 新書は一般的には学術的な先行研究とはみなされない。ただし、少数だが多くの先行研究にもとづいて、ほとんど学術的な成果として書かれているものがあり、そのような場合は先行研究として扱うことがある。これも見分けるのには多少の経験が必要だが、先に学術書のところで述べたような基準を使うことができる（たとえば、末尾に参考文献の一覧表が挙げられているかどうか）。 新書の例 松岡亮二，2019，『教育格差：階層・地域・学歴』ちくま新書. 三谷はるよ，2023，『ACEサバイバー：子ども期の逆境に苦しむ人々』ちくま新書. 牧野百恵，2023，『ジェンダー格差：実証経済学は何を語るか』中公新書. メアリー・C・ブリントン，池村千秋訳，2022，『縛られる日本人:人口減少をもたらす 「規範」を打ち破れるか』中公新書． 1.4.2.3 教科書 分野で明らかになっている事実や、分析の方法などについて紹介・解説しているものを教科書という。教科書は一般的には先行研究にはならないが、専門書や論文を探す用途で使うことができる。また、方法に関する教科書の場合は、自分の論文で使う統計分析の方法の解説を紹介したりする際に参考文献として引用することが多い。 分野に関する教科書の例 平沢和司，2021，『格差の社会学入門：学歴と階層から考える［第2版］』北海道大学出版会． 数理社会学会監修，筒井淳也・神林博史・長松奈美江・渡邉大輔・藤原翔編，2015，『計量社会学入門：社会をデータで読む』世界思想社． 方法に関する教科書の例 浅野正彦・矢内勇生,2018,『Rによる計量政治学』オーム社. Llaudet, Elene and Kosuke Imai. 2022. Data Analysis for Social Science: A Friendly and Practical Introduction. Princeton University Press. 1.4.2.4 一般書 小説（文庫本）、漫画、ビジネス書、自己啓発書、資格試験のテキストなど、さまざまなジャンルがある。用途はさまざまで、人生の役に立つものもあれば、娯楽になるものもある。とはいえ、通常、先行研究にはならない。 1.4.3 報告書 たとえば公的機関（官公庁など）が調査結果や統計情報などをまとめて発行しているものを報告書という。とくに、中央省庁の刊行物のなかでも出版が法律で義務付けられている、政治社会経済の実態を知らせることを目的としたものを「白書」という。これらは先行研究にはならないが、議論の導入として公的な統計情報を参照したり、レポートのテーマを探したりするときに使える。 厚生労働省，2023，「令和5年版 労働経済の分析」https://www.mhlw.go.jp/stf/wp/hakusyo/roudou/23/23-1.html 内閣府男女共同参画局，2021，「男女共同参画白書 令和3年版」https://www.gender.go.jp/about_danjo/whitepaper/r03/zentai/index.html（2024年5月12日閲覧．） 1.4.4 研究の流れをつかむ ある程度論文を集めたら、次はその論文で参考文献として引用されている論文、もしくはその論文を参考文献として引用している論文（被引用論文、という）を読んでいくことをおすすめする。ある論文が参考にしている論文は当然重要な論文である可能性が高い。また読んだ論文にその後インパクトがあったのであれば、別の論文にも引用されているはずである。被引用論文は論文それ自体にはもちろん書いていないが、Google Scholarで探すことができる。 このように、ある論文の参考文献と被引用論文を示した一例が次の図である。この図はConnected papersというページで作ることができる。図の真ん中にあるTorche, 2011は、それ以前の多くの先行研究を引用している（主に左側に配置）。そしてその後多くの研究がTorche, 2011を引用していることがわかる（主に右側に配置）。このように、ある研究から影響のある論文へとたどっていくことで、研究の流れが見えるようになってくる。このような研究の流れのなかに自分の研究を位置づけることができたならば、その研究のインパクトはますます大きくなる。 Torche, Florencia. 2011. “Is a College Degree Still the Great Equalizer? Intergenerational Mobility across Levels of Schooling in the United States.” American Journal of Sociology 117(3):763–807. の引用ネットワーク 出所）https://www.connectedpapers.com/ （2022年2月1日作成） 分野がある程度発展している場合には、レビュー論文といって、当該領域に関する論文をまとめて、何がわかっていて何がわかってないのかを示した論文がある場合がある8。こうしたレビュー論文は、先行研究を探したりテーマを絞り込んだりするのに役に立つ。 Mills, C. Wright. 1959. The Sociological Imagination. Oxford University Press.↩︎ 日本の社会調査データを合併して分析している例としてたとえば Mugiyama, Ryota &amp; Kohei Toyonaga. 2022. “Role of Cohort Size in Trends in Class and Occupational Returns to Education at First Job: The Case of Japan.” European Sociological Review. 38(2): 269–285.、打越文弥，2016，「学歴同類婚の世代間連鎖とその趨勢：大規模調査データの統合による計量分析」『家族社会学研究』28(2): 136–147．など。↩︎ 大学院生の場合は教育目的利用不可のデータであっても、研究目的でデータの利用申請を行うことができる。ただし、利用申請を行う前に必ず指導教員の了解を得ること。↩︎ パネル調査では、同じ個人を複数回にわたって繰り返し調査する。これによって、同じ個人がどのように変化していくのかを追跡して、個人の変化に関する分析（たとえば、結婚の前後でどのように仕事が変わるのか、収入がどのように変化していくのか、など）を行うことができる。↩︎ Schilt, Kristen, and Matthew Wiswall. 2008. “Before and After:Gender Transitions, Human Capital, and Workplace Experiences.” The B.E.Journal of Economic Analysis &amp; Policy 8(1).↩︎ ただし日本の学術雑誌の場合はいろいろな事情から査読付きの投稿論文ではなく特集論文や書評などがかなりの紙幅を占めていることが多い。↩︎ レビュー論文のみを掲載している雑誌である。噂によるとこの雑誌を購読している大学は日本だとかなり少ないようである。おそらく本学も購読していない。。↩︎ たとえば日本語のレビュー論文の典型的な例としては以下のような論文がある： 平沢和司・古田和久・藤原翔，2013，「社会階層と教育研究の動向と課題：高学歴化社会における格差の構造」『教育社会学研究』93: 151–91． 後述するように、Annual Review of Sociologyというレビュー論文だけを掲載した学術雑誌もある。↩︎ "],["preparation.html", "Chapter 2 RとRStudioの下準備 2.1 RとRStudioのインストール方法 2.2 データ分析のワークフロー 2.3 プロジェクトの作成 2.4 基本的な操作 2.5 その他の設定 2.6 Rの基礎 2.7 エラーが出たときに確認する箇所", " Chapter 2 RとRStudioの下準備 2.1 RとRStudioのインストール方法 矢内勇生先生のページを参照して、RおよびRStudioをインストールしてください。体感では、お使いのPCの環境的な問題によりインストールでつまづく人が10人に1–2人くらいの割合でいるので、つまづくのはよくあることです。なので、つまづいたら教員に質問しましょう。 Macの人は38ページまで、Windowsの人は102ページまでやれば準備完了です。 MacとWindowsの人どちらも：「RStudioのカスタマイズ」（Macの人は39ページ以降、Windowsの人は103ページ以降）は、やらなくても問題ありません。 Windowsの人向け：p.27–35の「対処法その3」は（よっぽどパソコンに詳しい人でない限り）危険な操作なのでおすすめしません。 Windowsの人向け：p.58–66の「プログラミング用フォントのインストール」は飛ばしても問題ありません。 基本的には上記の資料のとおりにやればうまくいくと思いますが、何やらエラーが出る場合には2020年の別の授業経験をもとに書いた以下の記事が参考になるかもしれません。 2.2 データ分析のワークフロー データ分析のワークフローをおおまかに示すと、次のようなものになる。 プロジェクトフォルダを作成する（この章で解説） データを取得する（→データの読み込み） データを開く（→データの読み込み） データを加工する（→データの加工） 変数の作成 サンプルの限定 加工したデータの保存 データを分析する 基礎集計（→1変量の集計） 2変量の関連分析（→2変量の集計、回帰分析の基礎） 他の要因を統制した分析（→回帰分析の活用） 分析結果を出力する 誤りや改善点、アイデアを見つけ、再度データを加工する（4に戻る、4から7をn回繰り返す） 最終的な分析結果を論文にまとめる 出版された論文を読むと、エレガントな分析結果がはじめからスムーズに提示されているような印象を受けるかもしれない。しかしながら、実際はそのようにスムーズに分析が進むことはない。舞台裏では（必ずしもきれいとはいえない）データを加工し、分析し、間違いをみつけては再度データを加工して分析し、他の人からコメントをもらったりして再度データを加工したり分析して……といったふうに何度もPDCAが行われている。なので、データ分析の過程で行きつ戻りつすることはむしろふつうのことだと思ったほうがよい。 PDCAの過程では、「研究計画を立てる」で作成したような研究計画を修正したりすることがある。それ自体は必ずしも悪いことではない。しかし、計画なしに手当たり次第に分析してしまっては、自分が何をやっているのかわからなくなってしまう。自分が何をしたいのか、自分が今何をしているのか（上記のどの段階にいるのか）を意識しながら、データを加工したり分析したりすることが重要になる。 2.3 プロジェクトの作成 2.3.1 RStudioを開いてみよう RStudioを開いたときの見た目 特に設定を変えていないならば、はじめてRStudioを開くと次のような画面になっている。それぞれ以下のように対応している。 左のウインドウ：コマンドを入力して、結果が出力されるウインドウ 右上のウインドウ：読み込まれているオブジェクトを表示するウインドウ 右下のウインドウ：ファイルの一覧をみたり、グラフが表示されたり、ヘルプファイルを表示されたりするウインドウ 2.3.2 授業用のフォルダを作ろう この授業のために使う資料やコードなどをまとめておくためのフォルダを作っておくとよい。適宜、自分のわかりやすい箇所を選ぶとよい。 Windowsの場合：「OneDrive」→「ドキュメント」の下などに作成すると、自動でバックアップを取ってくれるのでおすすめ。 Macの場合：「iCloud Drive」→「書類」の下などがおすすめ。 いずれも、Cloudの容量の上限に達しているとエラーが出るので注意。写真や動画ファイルなどは容量が大きいのでCloudの容量を拡張したり別のサービスを使って、そちらに移しておくとよい。 2.3.3 ファイルパスと作業ディレクトリ コンピュータ上のさまざまなファイルを置いた場所を指してフォルダ、あるいはディレクトリという。コンピュータ上のファイルは基本的にフォルダの中に入れて管理する。 このフォルダにはそれぞれ住所がついている。この住所を指して、ファイルパス、またはたんにパスという。たとえば自分がこの資料を作成しているフォルダのファイルパスは、“User/mugi/…（中略）…/seminar_sociology_r”である。 ファイルパスというのが何かをつかむため、現実世界の住所について考えてみよう。たとえば、学習院大学目白キャンパスの住所は「東京都豊島区目白1-5-1」である。この住所は、前から順番に読んでいって、より小さい単位を指す（東京都のなかにある豊島区、豊島区のなかにある目白、目白のなかにある1丁目……というふうに）。ファイルパスはまさにこの「東京都豊島区目白1-5-1」のような住所であり、フォルダのありかを示す役割を果たす。 RStudioが作業場所だと認識している場所を指して、作業ディレクトリという。この作業ディレクトリのファイルパスは、左下の画面の上部に記載されている。分析などを行う際には、このファイルパスが自分の意図している場所と一致しているかどうかを確認する必要がある。 2.3.4 プロジェクト作成の手順 先ほど作成した授業用フォルダのなかに、データを置いたりコードを置いたりするためのフォルダを作って、そこが作業ディレクトリだとRStudioに教えてあげたい。このようなときに便利な機能が、「プロジェクト」である。この機能を利用することで、プロジェクトを作成した場所が作業ディレクトリであることをRに教えることができる。新たな研究をはじめるときには、必ずプロジェクトを作成するようにする。 プロジェクトの新規作成手順は次のとおり。 “File” &gt; “New Project”、または右上の”Project”の箱を選択 &gt; “New Project” “New Directory”を選択 “New Project”を選択 Directory nameに作業ディレクトリの名前をつけて（ここでは「seminar_sociology_r」とする）、“Browse”から新しいフォルダを作る場所（先ほどの授業用フォルダ）を選択 指定した場所に、“seminar_sociology_r.Rproj”というファイルが入ったフォルダができる 右上の表示が（まだ何もプロジェクトを開いていない場合には）「Project: None」から「seminar_sociology_r」に変わっていることを確認する。 すでに作成済みのフォルダを作業用フォルダとして指定したい場合には、次のような手順で行う。 “File” &gt; “New Project”、または右上の”Project” &gt; “New Project” “Existing Directory”を選択 “New Project”を選択 “Browse”から作業用フォルダとして指定したいフォルダを選択 右上の表示が（まだ何もプロジェクトを開いていない場合には）「Project: None」から作業用フォルダとして指定したフォルダの名前に変わっていることを確認する。 Project: (None)の状態 Projectを開いた状態 フォルダ内に作成されるRprojファイル 2.4 基本的な操作 RStudioを開いたときの見た目（再掲） プロジェクトが作成できたら、ためしに左のウインドウに以下のコードを書いて、Enterを押してみよう。計算結果が表示される。 1 + 2 ## [1] 3 2.4.1 スクリプトファイル 実際には上記のような1行ですむコードを書くわけではもちろんなく、色々とコードを書いて、データを加工したり分析をしたりしていく。そうなってくると、コードはコードとしてまとめて書くことのできる場所があると嬉しいだろう。このような用途で使うのが、スクリプトファイルである。以下の手順で新規のスクリプトファイルを開くことができる。 左上の白い四角にプラス（+）マークのついたアイコンをクリック 「R script」を選択 すると、RStudioの左上に次のような場所が現れる： この左上のスクリプトファイルにコードを書き、実行したい行にカーソルを合わせて、スクリプト右上の「Run」をクリックすると、命令が実行され、結果が左下のConsoleに出力される。実行したい箇所をドラッグした状態で実行すれば、複数の命令をまとめて実行することもできる。 「Run」は頻繁に使う。毎回クリックするのは面倒なので、ショートカットキーを覚えよう。実行には以下のショートカットキーを使う。 Windows: ctrl + enter Mac: command + enter 以下のコードを実行してみよう： 1 + 2 ## [1] 3 8 - 3 ## [1] 5 10 * 8 ## [1] 80 4 / 15 ## [1] 0.2666667 2.4.2 スクリプトファイルを保存する 上記のようにスクリプトを書いて実行していくわけだが、スクリプトを書いた変更が保存されていない状態だと、スクリプトの上部が赤く表示される。 このスクリプトを保存する場合には、上記のフロッピーディスク（今どきの大学生は見たことも聞いたこともないと思いますが……）のアイコンをクリックすると、変更を保存することができる。フロッピーディスクが1枚のアイコンは「上書き保存」、2枚重なったアイコンは「現在開いているスクリプトファイルをまとめてすべて保存」を表している。 スクリプトを保存すると、赤い文字列は黒い表示になり、無事保存されたことがわかる。保存したファイルは「xxxxx.R」というファイルとして、現在開いているプロジェクトフォルダに保存される。後日作業を再開するときには、再度当該ファイルを開けばよい。 データ分析を行う場合には、分析結果を保存すること以上に、スクリプトファイルを保存することが重要になる。というのも、スクリプトファイルを保存しておけば、同じ命令を実行すれば、再び同じ分析結果を出力することが可能だからである。一方、分析結果だけを保存しておいたとしても、元のスクリプトファイルがなければ、その結果を改めて出力することはできなくなってしまう。 上記から分かるように、スクリプトファイルは日を改めたりして何度も開いて実行していって少しずつ変更したりしていくものである。そのため、毎回忘れずに保存し、かつ、コードを書く際には、後から見直して何をやっていたのかが分かるようにきれいにまとめておくことが望ましい。 2.4.3 パッケージのインストール install.packages()はゲームソフトを購入（無料ですが）するようなもの。実際にそのソフトに入っているコンテンツを使うためには、毎回RStudioを立ち上げるために、ゲームソフトをセットしないといけない。その際には、library()を用いる。 本資料では以下のパッケージを使用する。今のうちにまとめてインストールしておこう。 install.packages(&quot;tidyverse&quot;) install.packages(&quot;haven&quot;) install.packages(&quot;readxl&quot;) install.packages(&quot;gtsummary&quot;) install.packages(&quot;modelsummary&quot;) install.packages(&quot;pandoc&quot;) install.packages(&quot;flextable&quot;) install.packages(&quot;estimatr&quot;) install.packages(&quot;broom&quot;) install.packages(&quot;ggeffects&quot;) install.packages(&quot;effects&quot;) install.packages(&quot;margins&quot;) とくに重要なのがtidyverseパッケージ。以下の8つのパッケージをまとめたパッケージ群であり、どれもよく使うものなので、何らかの分析をする際にはほとんど常にlibrary(tidyverse)を実行しておくことになる。 ggplot2 tibble tidyr readr purrr dplyr stringr forcats 2.5 その他の設定 2.5.1 RStudioを閉じる際のWorkspace保存の警告を削除 画面上部のTools &gt; Global Options をクリックして、以下の画面を開く。 真ん中あたりにある「Workspace」の下、「Restore .RData into workspace at startup」のチェックを外し（デフォルトではチェックが入っている）、「Save workspace to .RData on exit:」を「Never」に変更する（デフォルトではAskになっている）。 以上は、一度変更したらその後は変更する必要はない9。 2.5.2 グラフの日本語表示 ついで、グラフの表示にかかわるオプションを変更しておこう。先ほどと同様、画面上部のTools &gt; Global Options をクリックして、General &gt; Graphicsを選択する。 ここで、「Backend」を以下のように「(Default)」から「AGG」に変更する。PCの環境によって異なるが、Backendが(Default)のままだと、日本語が表示されないことがある。このような場合、「AGG」に設定すると、日本語が含まれるグラフが正しく表示されるようになる。 2.6 Rの基礎 これについてはたくさんの素晴らしい解説が世の中にあふれているのでここでは扱わない。一例として以下の箇所などを参照のこと。以下の箇所で扱われている程度の基礎的な知識を次章以降では前提とする。 Llaudet, Elene and Kosuke Imai. 2022. Data Analysis for Social Science: A Friendly and Practical Introduction. Princeton University Press.（原田勝孝訳，2025，『新・社会科学のためのデータ分析入門：導入編』岩波書店）より第1章「イントロダクション」 浅野正彦・矢内勇生，2018，『Rによる計量政治学』オーム社より「4.2 Rの基本操作」. 安井翔太・株式会社ホクソエム，2020，『効果検証入門：正しい比較のための因果推論／計量経済学の基礎』技術評論社より「付録 RとRStudioの基礎」 Imai, Kosuke. 2018. Quantitative Social Science: An Introduction.Princeton University Press. （粕谷祐子・原田勝孝・久保浩樹訳，『社会科学のためのデータ分析入門』岩波書店．）より”1.3 Introduction to R”（「1.3 Rの基礎」） 太郎丸博，2021，「データを読み込む前に知っておきたいRの基礎」（太郎丸博先生の授業関連ページ→「R入門（2021年社会学実習 G科目）」にアップロードされている資料です） 2.7 エラーが出たときに確認する箇所 エラーが出たときは、以下の点を確認してみよう。 Projectフォルダ（RStudio右上の箱のマーク）が正しく設定されているか？ 関数のつづりが間違っていないか（たとえば、meanがmaenになっていないだろうか）？ 変数のつづりが間違っていないか（たとえば、educationがeduactionになっていないだろうか）？ 半角文字とすべきところを全角文字にしていないか？ 全角スペースが入っていないか？（入っているとエラーが生じることが多い） 正しいデータフレームを参照しているか？ 長いコードの場合は、一つひとつの作業に分割して、どこまではエラーなく実行でき、どこでエラーになるのかを確認したか？ エラーメッセージを読んだか？ 何らかのパッケージを使用する際、そのパッケージはすでにinstall.packages()でインストール済か？そのうえで、あらかじめlibrary()で読み込んでいるか？ 自分ですぐに解決できない場合は、経験豊富な教員や先輩に聞くと、あっという間に解決することも多い。 この設定をしない場合、RStudioを閉じるたびにworkspaceを保存するかどうか尋ねられることになる。これは一見便利に見えるが、以前に読み込んだパッケージなどの情報が保存されてしまうため、意図せずして異なるパッケージどうしで関数名がバッティングしてしまい、エラーの原因となる（参考：関数名の衝突を避ける（R））。またこれは再現可能性の点でも悪手である。アプリケーションを閉じようとするときに「保存せずに消しますか？」と言われると、なんとなく保存したくなってしまうのが人情なので、先手を打ってそのように聞かれないように対策をしておいたほうがよい。↩︎ "],["import.html", "Chapter 3 データの読み込み 3.1 Rのサンプルデータの読み込み 3.2 作業ディレクトリ上のデータの読み込み 3.3 ウェブ上のデータの読み込み", " Chapter 3 データの読み込み 本章では、Rを使ってデータを読み込む方法を説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 本章では以下の3つのパッケージを使用するので、あらかじめ以下のコードを実行して、パッケージを読み込んでおこう。 library(tidyverse) library(readxl) library(haven) 3.1 Rのサンプルデータの読み込み Rにはいくつかのサンプルデータがあらかじめ入っており、これを読み込んで試しに分析することもできる。ここでは例としてAnscombe’s Quartetのデータをみてみよう： anscombe ## x1 x2 x3 x4 y1 y2 y3 y4 ## 1 10 10 10 8 8.04 9.14 7.46 6.58 ## 2 8 8 8 8 6.95 8.14 6.77 5.76 ## 3 13 13 13 8 7.58 8.74 12.74 7.71 ## 4 9 9 9 8 8.81 8.77 7.11 8.84 ## 5 11 11 11 8 8.33 9.26 7.81 8.47 ## 6 14 14 14 8 9.96 8.10 8.84 7.04 ## 7 6 6 6 8 7.24 6.13 6.08 5.25 ## 8 4 4 4 19 4.26 3.10 5.39 12.50 ## 9 12 12 12 8 10.84 9.13 8.15 5.56 ## 10 7 7 7 8 4.82 7.26 6.42 7.91 ## 11 5 5 5 8 5.68 4.74 5.73 6.89 このデータにansという名前をつけて格納する。 ans &lt;- anscombe このようにデータフレームをオブジェクトに入れると、右上の「Environment」のウインドウに次のような表示が現れる。 11 obs. of 8 variablesと書かれている。11 obs.というのは、「このデータフレームは全部で11行ありますよ」ということを示しており、8 variablesというのは、「このデータフレームには8つの列がありますよ」ということを示している。実際にどのようなデータが読み込まれているかは、上記画像のansあたりをクリックするか、次のコードを実行すると新しいタブが開き、そこにデータの中身が表示される。 view(ans) このようなデータが読み込まれているはずだ。 その他にも、データのうち一部を表示したり、変数の一覧を表示したりするコマンドがある。ここではコードを紹介するにとどめるので、各自で実行してみてほしい。 head(ans) colnames(ans) glimpse(ans) 3.2 作業ディレクトリ上のデータの読み込み 3.2.1 データを置く場所を作る 前章ではプロジェクトを作成して、Rに作業を行う場所（作業ディレクトリ, working directory）を教えてあげた。この場所に、データを置くためのフォルダを別途作成しておくとよい。作成する方法は以下の2つである。 作業ディレクトリとして設定したフォルダを開き、右クリック→「新規フォルダ」（Mac）または「新規作成」→「フォルダ」を選択（Windows）。フォルダの名前は「data」としよう。 以下のコードを実行する。 dir.create(&quot;data&quot;) いま、フォルダの状態は次のようになっているはずだ： フォルダのなかみ フォルダを作ったら、下記のコードを実行して練習用のデータをダウンロードしよう（コピー&amp;ペーストでよい）。コードを実行すると、先ほど作った「data」フォルダにダウンロードしたデータが入っていることを確認しよう。 download.file(&quot;https://github.com/mugiyama/seminar_sociology_r/raw/master/data/census_pop.csv&quot;, destfile = &quot;data/census_pop.csv&quot;) download.file(&quot;https://github.com/mugiyama/seminar_sociology_r/raw/master/data/census_pop.xlsx&quot;, destfile = &quot;data/census_pop.xlsx&quot;) download.file(&quot;https://github.com/mugiyama/seminar_sociology_r/raw/master/data/census_pop.rds&quot;, destfile = &quot;data/census_pop.rds&quot;) download.file(&quot;https://github.com/mugiyama/seminar_sociology_r/raw/master/data/census_pop.sav&quot;, destfile = &quot;data/census_pop.sav&quot;) download.file(&quot;https://github.com/mugiyama/seminar_sociology_r/raw/master/data/census_pop.dta&quot;, destfile = &quot;data/census_pop.dta&quot;) 3.2.2 csv形式のファイル example.csvというふうに、末尾に.csvとついているのはcsv形式といって、一つひとつの値をカンマで区切った形式である。readr::read_csv()でcsv形式のファイルを読み込むことができる。readrというのはtidyverseパッケージを読み込むと読み込まれるパッケージの一つである。 df &lt;- read_csv(&quot;data/census_pop.csv&quot;) 3.2.3 xlsx形式のファイル census_pop.xlsxというふうに、末尾に.xlsxとついている（古いExcel形式だと.xls）のはMicrosoft Excelのデータ形式である。readxl::read_excel()でxlsx形式のファイルを読み込むことができる。readxlは冒頭で読み込んだパッケージである。 df &lt;- read_excel(&quot;data/census_pop.xlsx&quot;) 3.2.4 rds形式のファイル census_pop.rdsというふうに、末尾に.rdsとついているのはRのデータ形式である。rds形式で保存されたデータは、Rで読み込むうえではもっとも便利な形式である（が、rds形式で社会調査の個票データが提供されることはまれ）。readr::read_rds()でrds形式のファイルを読み込むことができる。 df &lt;- read_rds(&quot;data/census_pop.rds&quot;) 3.2.5 sav形式のファイル census_pop.savというふうに、末尾に.savとついているのはSPSSという統計ソフトのデータ形式である。SSJDAなどからデータを借りた場合にはSPSS形式であることがほとんどである。haven::read_sav()でsav形式のファイルを読み込むことができる。havenは冒頭で読み込んだパッケージである。 df &lt;- read_sav(&quot;data/census_pop.sav&quot;) 3.2.6 dta形式のファイル example.dtaというふうに、末尾に.dtaとついているのはStataという統計ソフトのデータ形式である。haven::read_dta()でdta形式のファイルを読み込むことができる。 df &lt;- read_dta(&quot;data/census_pop.dta&quot;) 3.2.7 文字コードに関わる問題 ファイルを読み込む際に、ファイルのなかに日本語が含まれていたりすると、エラーが起こることがある。このあたりの問題への詳しい対処は土井翔平先生のページに記載されているので、参考にするとよい。 3.3 ウェブ上のデータの読み込み ウェブサイト上にExcel形式のファイルやcsv形式のファイルがアップロードされている場合、それを直接読み込んでくることができる。たとえば、e-Stat上にアップロードされている国勢調査の主要時系列データのうち、「年齢（５歳階級），男女別人口－全国（大正９年～平成27年）」のデータを読み込んでみよう。先ほどの文字コード絡みの問題があるため、read_csv()に少しくふうを加えている。 file_url &lt;- &quot;https://www.e-stat.go.jp/stat-search/file-download?statInfId=000031524030&amp;fileKind=1&quot; df &lt;- read_csv(file_url, locale = locale(encoding = &quot;shift-jis&quot;)) ## Rows: 406 Columns: 7 ## ── Column specification ────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): 元号, 年齢5歳階級 ## dbl (5): 和暦（年）, 西暦（年）, 人口（総数）, 人口（男）, 人口（女） ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. Windowsユーザーの場合は以下で大丈夫かもしれない（未確認）。 df &lt;- read_csv(file_url) ただし、何度もアクセスするのは当該ウェブサイトのサーバーに負荷をかけてしまう。頻繁に更新されるようなファイルでなければ、自分のパソコン上にダウンロードしたほうがよいだろう。download.file()でファイルをダウンロードできる。 download.file(url = file_url, destfile = &quot;data/census_pop_original.csv&quot;) ダウンロードしたデータは、これまでと同じように、csvやexcelなどの形式に対応するかたちで読み込んでやればよい。 df &lt;- read_csv(&quot;data/census_pop_original.csv&quot;, locale = locale(encoding = &quot;shift-jis&quot;)) ## Rows: 406 Columns: 7 ## ── Column specification ────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): 元号, 年齢5歳階級 ## dbl (5): 和暦（年）, 西暦（年）, 人口（総数）, 人口（男）, 人口（女） ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. Windowsユーザーの場合は以下で大丈夫かもしれない（未確認）。 df &lt;- read_csv(file_url) なお、先ほど紹介した各種形式の「census_pop」のデータは、今ダウンロードしてきたデータに少し手を加えて麦山が作成した練習用データである。 "],["handling.html", "Chapter 4 データの加工 4.1 本資料で用いるデータ 4.2 パイプ演算子：%&gt;%または|&gt; 4.3 データ加工のステップ 4.4 変数の作成 4.5 変数の作成についてのtips 4.6 %&gt;%をつなげてコマンドをまとめる 4.7 サンプルの限定 4.8 【発展】データの追加", " Chapter 4 データの加工 この章ではデータの加工方法について説明する。 内容に入る前にいくつか確認しておこう。 第1に、右上のプロジェクトのボックスの横が、第2章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 第2に、第3章で確認したとおり、データを格納するためのフォルダがプロジェクトフォルダ内に準備されていることを確認しよう。作っていない場合には、データを置く場所を作るを確認し、作成しておこう。 第3に、上記の準備をすませたうえで、以下のとおりtidyverseパッケージを読み込もう。 library(tidyverse) 4.1 本資料で用いるデータ 本資料では基本的に、OECDが実施している国際成人力調査Programme for the International Assessment of Adult Competencies, PIAACの1st Cycle（2013年実施）の日本版データをサンプルデータとして使用する。 ダウンロード手順は以下のとおり。 PIAAC 1st Cycle Databaseのページにアクセス 少し下にある”Download the datasets (Public Use Files)”をクリック 規約を読み、ページ下部のNextをクリック 「Name」「Institution/Organization」「Email Address」を入力し、「You acknowledge reading the Data Protection Notice and agreeing to comply with the Terms of Use」をクリック。 左列（“Cycle 1”）にあるJapanの”CSV”のリンクをクリックして、ファイルをダウンロードする ダウンロードしたファイルを自分のPCの「data」のフォルダに入れる 「data」のフォルダに入っていることを確認して、データを読み込む。このデータは少し特殊で、数値のほかに文字列などが入っている。そのため、すこしだけ特殊な処理をほどこしてデータを読み込むことにする。 piaac &lt;- read_csv(&quot;data/prgjpnp1.csv&quot;) %&gt;% mutate_if(is.character, as.numeric) %&gt;% #すべての文字列変数を小文字に変換 rename_all(.funs = tolower) #すべての大文字を小文字に変換 ## Rows: 5278 Columns: 1328 ## ── Column specification ────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (470): DISP_MAIN, B_Q01a3, B_Q01a3_C, B_Q01b, B_Q01c1, B_Q01c1_C, B_Q01c... ## dbl (656): CNTRYID, CNTRYID_E, SEQID, AGE_R, GENDER_R, DISP_CIBQ, A_N01_T, B... ## lgl (202): DISP_MAINWRC, D_Q16b_T, P901002R, P901002S, P904012R, P904012S, P... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. 通常、SSJDAなどの機関を通して社会調査データをダウンロードしたときに文字列が入っていることはまれなので、あまり心配しなくてよい。 4.2 パイプ演算子：%&gt;%または|&gt; 本章以降は、tidyverseというパッケージに組み込まれたさまざまな関数を活用する。tidyverseの特徴の一つは、パイプ演算子（%&gt;%）を使って命令を書くという点である。 たとえば、読み込んだデータ（piaacとする）の中身を確認するview()コマンドを実行したい場合であれば、次のように書く。 view(piaac) # piaacデータの中身を確認する piaac %&gt;% view() # 上記と同じ意味 %&gt;% 演算子を改行して書いてもよい。 piaac %&gt;% # piaacデータフレームに対して、 view() # viewを実行する データの上からいくつかの行を見るhead()コマンドであれば、次のように書くことができる： piaac %&gt;% # piaacデータフレームに対して、 head() # headを実行 ## # A tibble: 6 × 1,328 ## cntryid cntryid_e seqid age_r gender_r disp_cibq disp_main disp_mainwrc ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 392 392 1 45 2 1 1 NA ## 2 392 392 2 48 1 1 1 NA ## 3 392 392 3 47 1 1 1 NA ## 4 392 392 4 58 1 1 1 NA ## 5 392 392 5 29 2 1 1 NA ## 6 392 392 6 35 2 1 1 NA ## # ℹ 1,320 more variables: a_n01_t &lt;dbl&gt;, b_q01a &lt;dbl&gt;, b_q01a_t &lt;dbl&gt;, ## # b_q01a3 &lt;dbl&gt;, b_q01a3_c &lt;dbl&gt;, b_q01b &lt;dbl&gt;, b_q01c1 &lt;dbl&gt;, ## # b_q01c1_c &lt;dbl&gt;, b_q01c1_t &lt;dbl&gt;, b_q01c2 &lt;dbl&gt;, b_q01d &lt;dbl&gt;, ## # b_d01d &lt;dbl&gt;, b_d01d_c &lt;dbl&gt;, b_q02a &lt;dbl&gt;, b_q02a_t1 &lt;dbl&gt;, ## # b_q02a_t2 &lt;dbl&gt;, b_q02b &lt;dbl&gt;, b_q02b_c &lt;dbl&gt;, b_q02c &lt;dbl&gt;, b_q03a &lt;dbl&gt;, ## # b_q03b &lt;dbl&gt;, b_q03b_c &lt;dbl&gt;, b_q03c1 &lt;dbl&gt;, b_q03c1_c &lt;dbl&gt;, ## # b_q03c2 &lt;dbl&gt;, b_q03d &lt;dbl&gt;, b_d03d &lt;dbl&gt;, b_d03d_c &lt;dbl&gt;, b_q04a &lt;dbl&gt;, … piaac %&gt;% head(n = 3) # 上から3行のみ表示 ## # A tibble: 3 × 1,328 ## cntryid cntryid_e seqid age_r gender_r disp_cibq disp_main disp_mainwrc ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 392 392 1 45 2 1 1 NA ## 2 392 392 2 48 1 1 1 NA ## 3 392 392 3 47 1 1 1 NA ## # ℹ 1,320 more variables: a_n01_t &lt;dbl&gt;, b_q01a &lt;dbl&gt;, b_q01a_t &lt;dbl&gt;, ## # b_q01a3 &lt;dbl&gt;, b_q01a3_c &lt;dbl&gt;, b_q01b &lt;dbl&gt;, b_q01c1 &lt;dbl&gt;, ## # b_q01c1_c &lt;dbl&gt;, b_q01c1_t &lt;dbl&gt;, b_q01c2 &lt;dbl&gt;, b_q01d &lt;dbl&gt;, ## # b_d01d &lt;dbl&gt;, b_d01d_c &lt;dbl&gt;, b_q02a &lt;dbl&gt;, b_q02a_t1 &lt;dbl&gt;, ## # b_q02a_t2 &lt;dbl&gt;, b_q02b &lt;dbl&gt;, b_q02b_c &lt;dbl&gt;, b_q02c &lt;dbl&gt;, b_q03a &lt;dbl&gt;, ## # b_q03b &lt;dbl&gt;, b_q03b_c &lt;dbl&gt;, b_q03c1 &lt;dbl&gt;, b_q03c1_c &lt;dbl&gt;, ## # b_q03c2 &lt;dbl&gt;, b_q03d &lt;dbl&gt;, b_d03d &lt;dbl&gt;, b_d03d_c &lt;dbl&gt;, b_q04a &lt;dbl&gt;, … ちなみに、MacであればControl + Shift + mで、WindowsであればCtrl + Shift + mでパイプ演算子を出力することができる。パイプ演算子は多用するので、ショートカットキーは覚えておくとよい。 ちなみに、最近RStudioを新しくインストールした場合だと、上記のショートカットキーを入力すると|&gt;というコマンドが出力されるかもしれない。ふつうに使う分だと、どちらを使ってもとくに支障は生じない。試しに以下の2種類を実行して、どちらも同じものが出力されることを確かめてみよう。 piaac |&gt; head(n = 3) ## # A tibble: 3 × 1,328 ## cntryid cntryid_e seqid age_r gender_r disp_cibq disp_main disp_mainwrc ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 392 392 1 45 2 1 1 NA ## 2 392 392 2 48 1 1 1 NA ## 3 392 392 3 47 1 1 1 NA ## # ℹ 1,320 more variables: a_n01_t &lt;dbl&gt;, b_q01a &lt;dbl&gt;, b_q01a_t &lt;dbl&gt;, ## # b_q01a3 &lt;dbl&gt;, b_q01a3_c &lt;dbl&gt;, b_q01b &lt;dbl&gt;, b_q01c1 &lt;dbl&gt;, ## # b_q01c1_c &lt;dbl&gt;, b_q01c1_t &lt;dbl&gt;, b_q01c2 &lt;dbl&gt;, b_q01d &lt;dbl&gt;, ## # b_d01d &lt;dbl&gt;, b_d01d_c &lt;dbl&gt;, b_q02a &lt;dbl&gt;, b_q02a_t1 &lt;dbl&gt;, ## # b_q02a_t2 &lt;dbl&gt;, b_q02b &lt;dbl&gt;, b_q02b_c &lt;dbl&gt;, b_q02c &lt;dbl&gt;, b_q03a &lt;dbl&gt;, ## # b_q03b &lt;dbl&gt;, b_q03b_c &lt;dbl&gt;, b_q03c1 &lt;dbl&gt;, b_q03c1_c &lt;dbl&gt;, ## # b_q03c2 &lt;dbl&gt;, b_q03d &lt;dbl&gt;, b_d03d &lt;dbl&gt;, b_d03d_c &lt;dbl&gt;, b_q04a &lt;dbl&gt;, … piaac %&gt;% head(n = 3) ## # A tibble: 3 × 1,328 ## cntryid cntryid_e seqid age_r gender_r disp_cibq disp_main disp_mainwrc ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 392 392 1 45 2 1 1 NA ## 2 392 392 2 48 1 1 1 NA ## 3 392 392 3 47 1 1 1 NA ## # ℹ 1,320 more variables: a_n01_t &lt;dbl&gt;, b_q01a &lt;dbl&gt;, b_q01a_t &lt;dbl&gt;, ## # b_q01a3 &lt;dbl&gt;, b_q01a3_c &lt;dbl&gt;, b_q01b &lt;dbl&gt;, b_q01c1 &lt;dbl&gt;, ## # b_q01c1_c &lt;dbl&gt;, b_q01c1_t &lt;dbl&gt;, b_q01c2 &lt;dbl&gt;, b_q01d &lt;dbl&gt;, ## # b_d01d &lt;dbl&gt;, b_d01d_c &lt;dbl&gt;, b_q02a &lt;dbl&gt;, b_q02a_t1 &lt;dbl&gt;, ## # b_q02a_t2 &lt;dbl&gt;, b_q02b &lt;dbl&gt;, b_q02b_c &lt;dbl&gt;, b_q02c &lt;dbl&gt;, b_q03a &lt;dbl&gt;, ## # b_q03b &lt;dbl&gt;, b_q03b_c &lt;dbl&gt;, b_q03c1 &lt;dbl&gt;, b_q03c1_c &lt;dbl&gt;, ## # b_q03c2 &lt;dbl&gt;, b_q03d &lt;dbl&gt;, b_d03d &lt;dbl&gt;, b_d03d_c &lt;dbl&gt;, b_q04a &lt;dbl&gt;, … どちらを使うかは（ほぼ）好みの問題である10。本資料では、たんに麦山が慣れているというきわめて個人的な理由で、%&gt;%を使うことにする。 デフォルトでショートカットキーで入力したときに%&gt;%と|&gt;のどちらが表示されるかは設定で変更することができる。具体的には次のようにする：Edit→Preferences…（ない場合は、Tools→Global options…）を選択する。以下の画面が開いたら、Codeを選択して、以下の「Use native pipe operator, |&gt; (requires R 4.1+)」のチェックを外すと、上記ショートカットキーを入力したときに%&gt;%が表示されるようになる。 4.3 データ加工のステップ いざデータを手に入れて読み込むことができたとしても、そこから分析に至るまでにはデータを加工して、分析の準備をしなくてはならない。このデータ加工は、大きく分けて以下の2つ（3つ）のステップからなる。 変数の作成 サンプルの限定 データの追加（該当者のみ。たとえばパネルデータを作ったり、複数時点や複数の国のデータを合併して分析する場合。） データの加工を行う際には、書いているコードがそれぞれ上記3つの作業のうちどの作業に該当するのかを混同しないように注意する。 変数の作成とサンプルの限定とはそれぞれ次のような操作を指す。たとえば、以下のようなデータがあるとする。 ## # A tibble: 6 × 3 ## id x1 x2 ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 5 1 ## 2 2 8 1 ## 3 3 2 1 ## 4 4 0 2 ## 5 5 6 2 ## 6 6 1 2 「変数の作成」は、この元データを加工して、次のような列を追加する作業にあたる。 ## # A tibble: 6 × 5 ## id x1 x2 x3 x4 ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 5 1 500 男性 ## 2 2 8 1 800 男性 ## 3 3 2 1 200 男性 ## 4 4 0 2 0 女性 ## 5 5 6 2 600 女性 ## 6 6 1 2 100 女性 「サンプルの限定」は、データから一部の対象者だけを選ぶ、言い換えれば行を削除する作業にあたる。 ## # A tibble: 3 × 5 ## id x1 x2 x3 x4 ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 5 1 500 男性 ## 2 2 8 1 800 男性 ## 3 5 6 2 600 女性 4.4 変数の作成 データを読み込んだとしても、調査で尋ねられた回答（列）をそのまま使えることはまれで、無回答を示す番号（9など）が含まれていたり、数値が意図しているならびと逆向きになっていたりと、そのままでは使えないことが多い。このような場合には、回答を記録した列を加工して、自分で意図した変数へと変換していく必要がある。社会調査データの分析を行う場合、かなり多くの作業がこの「変数の作成」に使われることになる。 4.4.1 変数の型（カテゴリ変数と連続変数） 変数は、その種類によって（大きく）カテゴリ変数（categorical variable）と連続変数（continuous variable）に分けることができる11。 カテゴリ変数の例 Rで扱うときの型 カテゴリ変数 性別、居住地域、職業など factor 連続変数 所得、幸福度など numeric カテゴリ変数は、グループや属性といったように、足し算や引き算をしたり、平均値を取ったりといった操作に意味のない変数を指す。たとえば居住地域の場合は、「東京都」「京都府」といったふうな値が入っているだろう。この値の平均値というのは、そもそも定義することができない。 連続変数は、足し算や引き算をしたり平均値を取ったりといった操作に意味がある。たとえば所得の場合は、個々人は300万円だったり700万円だったりといった値を取るわけだが、平均値を取れば平均所得という意味のある値になる。 ものによっては、カテゴリ変数とも連続変数ともとれる変数もある。たとえば学歴は、「中学」「高校」「専門」「短大」「高専」「大学」「大学院」と分けるのであればカテゴリ変数であるが、教育年数（何年学校に通ったか）で測定する場合には、9, 12, 14, 16, 18などの値を取る連続変数とみなすことができる。カテゴリ変数とみなすべきか、連続変数とみなすべきかは先行研究での扱いや、問題関心に依存する。くわしくは「変数の作成についてのtips」を参照。 多くの場合、社会調査データの個票でははじめからこれらカテゴリ変数と連続変数が区別されているわけではない。たとえば性別であれば、「男性」であれば1、「女性」であれば2というふうな値が入っている。あるいは所得であれば、「0万円」であれば1、「0〜25万円」であれば2、というふうな値が入っている。また、質問に対する回答であれば、「そう思う」「どちらかといえばそう思う」「どちらかといえばそう思わない」「そう思わない」という選択肢にそれぞれ1、2、3、4、という値が割り当てられている。このように、便宜的に値が振られているさまざまな項目を、自分の目的に照らして適切な型や値へと加工していくことによって、分析に使えるようにしていく必要がある。 4.4.2 新たな変数をつくる：mutate() データ加工の基本は、すでにある変数を書き換えたりして、自分の関心に即した新しい変数を作ることである。このときに使用するのがmutate()である。変数の加工を行うときには、ほとんどの場合このmutate()を使うことになる。以下に、いくつか簡単な例を挙げる。 4.4.2.1 例1: もとの変数の内容をそのままコピーする PIAACには、ボーナスの額を含めて、対象者の給与を時給換算したearnhrbonusという変数が含まれている。この変数をそのままコピーして、時給換算した賃金を表す変数wageを作成する。 piaac %&gt;% mutate(wage = earnhrbonus) このコードは、「piaacというデータフレームにwageという列を追加してね、ちなみにその列には（既存の列である）earnhrbonusの値を入れてね」という命令を表している。 ただしこれだけだと新たに列を追加した結果だけが表示されて、データフレームそのものは更新されることはない。そこで、次のようにして、列を追加した結果を新たなデータフレームに格納してみる。 piaac_new &lt;- piaac %&gt;% mutate(wage = earnhrbonus) すると、右側のEnvironmentのウインドウに新たに「piaac_new」というデータフレームが追加される。 piaac_new というのが、新たに1つ列を追加したデータフレームである。 もしくは、次のように同じデータフレームに格納してもよい。 piaac &lt;- piaac %&gt;% mutate(wage = earnhrbonus) 先ほどpiaac_new というデータフレームに格納したのが「名前をつけて保存」に当たるとしたら、これは「上書き保存」に当たるようなイメージである。どちらでも、個人の好みに応じて使い分けるとよいだろう。 さて、上記の処理を行った結果、piaacというデータフレームには、earnhrbonusとまったく同じ値が含まれるwageという列が作られたことがわかる。 piaac %&gt;% select(earnhrbonus, wage) %&gt;% # select()についてはこのあと解説があります head() ## # A tibble: 6 × 2 ## earnhrbonus wage ## &lt;dbl&gt; &lt;dbl&gt; ## 1 793. 793. ## 2 1763. 1763. ## 3 2692. 2692. ## 4 2312. 2312. ## 5 NA NA ## 6 5192. 5192. もとの変数を何ら加工せずにそのまま使うとしても、元々の変数の名前がわかりやすいとはいえない名前になっていることはよくある（たとえば、q31_3、など）。このような場合には、今行ったように、その列が何の変数であるかがすぐに分かるように新たに名前を付けた列を作成すると、後から間違いが少なくなる。 4.4.2.2 例2: もとの変数に何らかの計算を施す たとえば、1週間の労働時間を尋ねた変数d_q10を5で割って、平日1日あたりの労働時間に変換した列を作りたいというときがあるだろう。このような場合には次のように計算する。 piaac &lt;- piaac %&gt;% mutate(workhour = d_q10 / 5) 新しく作った列workhourは、たしかにもともとの変数を5で割った値になっていることがわかる。 piaac %&gt;% select(d_q10, workhour) %&gt;% head() ## # A tibble: 6 × 2 ## d_q10 workhour ## &lt;dbl&gt; &lt;dbl&gt; ## 1 48 9.6 ## 2 60 12 ## 3 50 10 ## 4 60 12 ## 5 NA NA ## 6 40 8 調査時点での就業状態（働いているか否か）を尋ねた項目c_q01aでは、働いていれば1、そうでなければ2という値が入っている。これを変換して、働いていれば1、そうでなければ0となるような変数workを作ってみよう。 piaac &lt;- piaac %&gt;% mutate(work = 2 - c_q01a) 新しく作った列workは、確かにもともとの変数の値が1であれば1、2であれば0となっていることがわかる。 piaac %&gt;% select(c_q01a, work) %&gt;% head() ## # A tibble: 6 × 2 ## c_q01a work ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 ## 2 1 1 ## 3 1 1 ## 4 1 1 ## 5 2 0 ## 6 1 1 4.4.2.3 例3: もとの変数と関係なく、まったく新しい変数を作成する たとえば、以下のように1ずつ増える変数を作成することもできる。この変数を分析に直接使用するということはないが、通し番号が振ってあると何かと便利なことが多い。 piaac &lt;- piaac %&gt;% mutate(id = 1:n()) n() はデータフレーム内の行数を返す関数。上記3つの例で作成した変数を並べてみよう： piaac %&gt;% select(id, wage, workhour) %&gt;% head() ## # A tibble: 6 × 3 ## id wage workhour ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 793. 9.6 ## 2 2 1763. 12 ## 3 3 2692. 10 ## 4 4 2312. 12 ## 5 5 NA NA ## 6 6 5192. 8 4.4.3 条件の指定：if_else() 実際にmutate()で既存の変数の値を書き換えたりする場合には、カテゴリをまとめたり、複数の変数を組み合わせて新しい変数を作成したりすることが多い。そこでよく使う関数がif_else()、case_when()、factor()の3つである。 4.4.3.1 if_else()の説明 if_else()は、条件を指定し、その条件に合う場合と合わない場合の値を返す関数。if_else(条件, 条件に合う場合の値, 条件に合わない場合の値)、というふうに使う。 piaac &lt;- piaac %&gt;% mutate(gender = if_else(gender_r == 1, &quot;男性&quot;, &quot;女性&quot;)) 上記は、genderという列に対して、gender_rの列の値が1ならば”男性”、そうでないならば”女性”という文字列を入れてね、という命令である。 新しく変数を作ったときには、きちんとできているかどうかを逐一確認するのがよい。たとえば以下のように、古い変数と新しい変数のクロス集計表を作ってみるのが良い方法だろう。 piaac %&gt;% with(table(gender_r, gender)) ## gender ## gender_r 女性 男性 ## 1 0 2517 ## 2 2761 0 4.4.3.2 論理演算子の説明 上記の例のように、条件を指定するときには論理演算子というのを使用する。よく使う論理演算子の意味は次の通り。 条件記号 意味 コード例 コード例の意味 == 等しい age == 25 年齢が25に等しい != ではない age != 25 年齢が25ではない &gt; より大きい age &gt; 25 年齢が25より大きい &lt; より小さい age &lt; 25 年齢が25より小さい &gt;= 以上 age &gt;= 25 年齢が25以上（25を含む） &lt;= 以下 age &lt;= 25 年齢が25以下（25を含む） &amp; かつ age &gt;= 25 &amp; age &lt;= 54 年齢が25以上54以下 | または age &lt; 35 | age &gt; 54 年齢が35より小さいまたは54より大きい 以上、以下のときの不等号の位置（どちらも左側！）、等しいときには=ではなく==、などは間違えやすいので注意しよう。 4.4.4 複数条件の指定：case_when() if_else()の場合は条件節は一つだが、複数の条件を指定して、それぞれの条件に対応するときに特定の値を入れたい、というような時がある。このときには、複数条件を指定して値を書き換えるコマンドである、case_when()をつかうとよい。 piaac &lt;- piaac %&gt;% mutate(agegroup = case_when( 25 &lt;= age_r &amp; age_r &lt;= 34 ~ &quot;25-34歳&quot;, 35 &lt;= age_r &amp; age_r &lt;= 44 ~ &quot;35-44歳&quot;, 45 &lt;= age_r &amp; age_r &lt;= 54 ~ &quot;45-54歳&quot;, 55 &lt;= age_r &amp; age_r &lt;= 64 ~ &quot;55-64歳&quot; )) ちゃんとできたかを確認しよう。 piaac %&gt;% with(table(age_r, agegroup)) ## agegroup ## age_r 25-34歳 35-44歳 45-54歳 55-64歳 ## 16 0 0 0 0 ## 17 0 0 0 0 ## 18 0 0 0 0 ## 19 0 0 0 0 ## 20 0 0 0 0 ## 21 0 0 0 0 ## 22 0 0 0 0 ## 23 0 0 0 0 ## 24 0 0 0 0 ## 25 70 0 0 0 ## 26 86 0 0 0 ## 27 83 0 0 0 ## 28 77 0 0 0 ## 29 104 0 0 0 ## 30 86 0 0 0 ## 31 105 0 0 0 ## 32 106 0 0 0 ## 33 106 0 0 0 ## 34 110 0 0 0 ## 35 0 126 0 0 ## 36 0 124 0 0 ## 37 0 123 0 0 ## 38 0 144 0 0 ## 39 0 133 0 0 ## 40 0 128 0 0 ## 41 0 110 0 0 ## 42 0 116 0 0 ## 43 0 127 0 0 ## 44 0 111 0 0 ## 45 0 0 93 0 ## 46 0 0 119 0 ## 47 0 0 114 0 ## 48 0 0 110 0 ## 49 0 0 109 0 ## 50 0 0 85 0 ## 51 0 0 97 0 ## 52 0 0 102 0 ## 53 0 0 110 0 ## 54 0 0 98 0 ## 55 0 0 0 103 ## 56 0 0 0 95 ## 57 0 0 0 88 ## 58 0 0 0 133 ## 59 0 0 0 98 ## 60 0 0 0 136 ## 61 0 0 0 138 ## 62 0 0 0 132 ## 63 0 0 0 143 ## 64 0 0 0 145 ## 65 0 0 0 0 もともとのデータには年齢が16歳から65歳の人が含まれているが、先ほどのコードでは16歳から24歳、65歳の人が条件に含まれていなかったので、新しく作成した列であるagegroupには該当するものがないという結果になっている。このようなケースにはNAが与えられる。 実際、NAが与えられているかどうかを確認してみよう。以下のようにwith(table())にオプションuseNA = \"always\"を指定することで、NAについても集計することができる。 piaac %&gt;% with(table(age_r, agegroup, useNA = &quot;always&quot;)) ## agegroup ## age_r 25-34歳 35-44歳 45-54歳 55-64歳 &lt;NA&gt; ## 16 0 0 0 0 114 ## 17 0 0 0 0 90 ## 18 0 0 0 0 96 ## 19 0 0 0 0 76 ## 20 0 0 0 0 90 ## 21 0 0 0 0 75 ## 22 0 0 0 0 72 ## 23 0 0 0 0 88 ## 24 0 0 0 0 84 ## 25 70 0 0 0 0 ## 26 86 0 0 0 0 ## 27 83 0 0 0 0 ## 28 77 0 0 0 0 ## 29 104 0 0 0 0 ## 30 86 0 0 0 0 ## 31 105 0 0 0 0 ## 32 106 0 0 0 0 ## 33 106 0 0 0 0 ## 34 110 0 0 0 0 ## 35 0 126 0 0 0 ## 36 0 124 0 0 0 ## 37 0 123 0 0 0 ## 38 0 144 0 0 0 ## 39 0 133 0 0 0 ## 40 0 128 0 0 0 ## 41 0 110 0 0 0 ## 42 0 116 0 0 0 ## 43 0 127 0 0 0 ## 44 0 111 0 0 0 ## 45 0 0 93 0 0 ## 46 0 0 119 0 0 ## 47 0 0 114 0 0 ## 48 0 0 110 0 0 ## 49 0 0 109 0 0 ## 50 0 0 85 0 0 ## 51 0 0 97 0 0 ## 52 0 0 102 0 0 ## 53 0 0 110 0 0 ## 54 0 0 98 0 0 ## 55 0 0 0 103 0 ## 56 0 0 0 95 0 ## 57 0 0 0 88 0 ## 58 0 0 0 133 0 ## 59 0 0 0 98 0 ## 60 0 0 0 136 0 ## 61 0 0 0 138 0 ## 62 0 0 0 132 0 ## 63 0 0 0 143 0 ## 64 0 0 0 145 0 ## 65 0 0 0 0 70 ## &lt;NA&gt; 0 0 0 0 0 4.4.5 カテゴリ変数へ変換：factor() PIAACには次のように、母親の最終学歴を尋ねた質問項目（j_q06b）がある。 選択肢 調査票の番号 小学校・中学校 1 高校（旧制の中学校、高校を含む） 2 専門学校、高等専門学校、短大、大学以上 3 piaac %&gt;% with(table(j_q06b)) ## j_q06b ## 1 2 3 ## 1553 2303 1098 この数値だけでは、何番が何を指しているのかよくわからない。そこで、この変数の値にそれぞれ名前を付けてカテゴリ変数（factor型）へと変換した変数mothereducを作成する。 piaac &lt;- piaac %&gt;% mutate(mothereduc = factor(j_q06b, levels = 1:3, labels = c(&quot;初等教育&quot;, &quot;中等教育&quot;, &quot;高等教育&quot;))) 結果を確認： piaac %&gt;% with(table(j_q06b, mothereduc)) ## mothereduc ## j_q06b 初等教育 中等教育 高等教育 ## 1 1553 0 0 ## 2 0 2303 0 ## 3 0 0 1098 if_else()やcase_when()を使って新しくカテゴリ変数を作るとき、カテゴリの順序が意図していたものとは違う順序になってしまうことがある。これは、文字列の場合はアルファベット順、日本語の場合はshift-jis順で並んでしまうことによる。 たとえば、1週間の労働時間（d_q10）に関する変数をもとに、次のように労働時間の長さ別に分けたカテゴリ変数を作成したいと思ったとする。 d_q10 workhour_fct 35時間より短い 35時間未満 35時間以上49時間以下 35-49時間 50時間以上59時間以下 50-59時間 60時間以上 60時間以上 case_when() を使って作成すると、意図していた順序とは違ったバラバラの順番になってしまう。 piaac &lt;- piaac %&gt;% mutate(workhour_fct = case_when( d_q10 &lt; 35 ~ &quot;35時間未満&quot;, d_q10 &gt;= 35 &amp; d_q10 &lt;= 49 ~ &quot;35-49時間&quot;, d_q10 &gt;= 50 &amp; d_q10 &lt;= 59 ~ &quot;50-59時間&quot;, d_q10 &gt;= 60 ~ &quot;60時間以上&quot; )) piaac %&gt;% with(table(workhour_fct)) ## workhour_fct ## 35-49時間 35時間未満 50-59時間 60時間以上 ## 1848 960 648 396 このような場合には、以下の2つの方法で順序を制御することができる。どちらを使っても良い。 4.4.5.1 一度数値変数に変換し、数値変数をカテゴリ変数に変換 いったん数値の変数を挟んでからfactor() を使って変数を作成することで、順番がばらばらになってしまうのを防ぐことができる。 # 方法1 piaac &lt;- piaac %&gt;% mutate(workhour_fct = case_when( d_q10 &lt; 35 ~ 1, d_q10 &gt;= 35 &amp; d_q10 &lt;= 49 ~ 2, d_q10 &gt;= 50 &amp; d_q10 &lt;= 59 ~ 3, d_q10 &gt;= 60 ~ 4 )) %&gt;% mutate(workhour_fct = factor(workhour_fct, levels = 1:4, labels = c(&quot;35時間未満&quot;, &quot;35-49時間&quot;, &quot;50-59時間&quot;, &quot;60時間以上&quot;))) piaac %&gt;% with(table(workhour_fct)) # 確認 ## workhour_fct ## 35時間未満 35-49時間 50-59時間 60時間以上 ## 960 1848 648 396 4.4.5.2 fct_relevel()を使う fct_relevel()は、文字列変数の値の順序を任意の順序に並び替えるコマンドである。fct_relevel(変数, \"値\", \"値\",...)のようなコードとなる。 piaac &lt;- piaac %&gt;% mutate(workhour_fct = case_when( d_q10 &lt; 35 ~ &quot;35時間未満&quot;, d_q10 &gt;= 35 &amp; d_q10 &lt;= 49 ~ &quot;35-49時間&quot;, d_q10 &gt;= 50 &amp; d_q10 &lt;= 59 ~ &quot;50-59時間&quot;, d_q10 &gt;= 60 ~ &quot;60時間以上&quot; )) piaac %&gt;% with(table(workhour_fct)) # 意図した順番とは違い、「35-49時間」が前に来てしまっている。。 ## workhour_fct ## 35-49時間 35時間未満 50-59時間 60時間以上 ## 1848 960 648 396 piaac &lt;- piaac %&gt;% mutate(workhour_fct = fct_relevel(workhour_fct, &quot;35時間未満&quot;, &quot;35-49時間&quot;, &quot;50-59時間&quot;, &quot;60時間以上&quot;)) piaac %&gt;% with(table(workhour_fct)) # 確認。確かに並びがかわっている。 ## workhour_fct ## 35時間未満 35-49時間 50-59時間 60時間以上 ## 960 1848 648 396 4.4.6 必要な列のみ抽出：select() このコマンドは「変数の作成」の節で扱ったコマンドと比べるとやや特殊で、列を追加するのではなく、列を削除するという操作を行う。普通に分析をする限りは列を削除する必要はないが、一部の列だけを取り出してどのようになっているのかを確認したりしたいときなどに使う。 このときに使うコマンドがselect()である。 piaac_sub &lt;- piaac %&gt;% select(gender, wage) #gender, wageの列を抽出 piaac_sub &lt;- piaac %&gt;% select(-gender, -wage) #gender, wage「以外」の列を抽出 4.5 変数の作成についてのtips 4.5.1 カテゴリをまとめる たとえば、親の職業（階級）によって、対象者の学歴がどの程度異なるのかを知りたいとする。このとき、学歴を「中学」「高校」「短大高専」「大学大学院」という4つのカテゴリで定義しているとする。この場合には、たとえば「大学大学院」を1、それ以外を0とすることで、大学以上か大学未満か、という2値のカテゴリにする。 一つひとつのカテゴリに該当する人数が少ないときや、議論を単純化したいときに有効な方法といえる。 4.5.2 複数の変数を組み合わせた変数を作る PIAACでは、父親および母親の学歴を「初等教育」「中等教育」「高等教育」の3つの選択肢から選ぶ形式で尋ねている。この項目をもとに、父親と母親のうちどちらか高い方のの学歴を採用して、親学歴に関する変数を作りたいとする。ただし、どちらかが欠損の場合には、わかっているほうの学歴を採用することとする。この場合の対応表は以下のとおり： 父親学歴と母親学歴のうち高いほうをとって親学歴を作成する 母親学歴 父親学歴 1（初等教育） 2（中等教育） 3（高等教育） NA 1（初等教育） 初等教育 中等教育 高等教育 初等教育 2（中等教育） 中等教育 中等教育 高等教育 中等教育 3（高等教育） 高等教育 高等教育 高等教育 高等教育 NA 初等教育 中等教育 高等教育 NA このようにやや複雑な変換に対してもcase_when() が利用可能である。具体的には、以下のようにする。また、作成した変数にはやはりfactor()をつかってカテゴリ変数（factor型）へ変換し、ラベルを付けておこう。 piaac &lt;- piaac %&gt;% mutate(parenteduc = case_when( j_q07b &gt;= j_q06b ~ j_q07b, j_q07b &lt; j_q06b ~ j_q06b, is.na(j_q07b) == TRUE &amp; is.na(j_q06b) == FALSE ~ j_q06b, is.na(j_q06b) == TRUE &amp; is.na(j_q07b) == FALSE ~ j_q07b )) %&gt;% mutate(parenteduc = factor(parenteduc, levels = 1:3, labels = c(&quot;初等教育&quot;, &quot;中等教育&quot;, &quot;高等教育&quot;))) 4.5.3 均等な順序を仮定して連続変数とする ある程度均等な順序があると仮定できるならば、数値として扱うことを考えてみるとよい。JGSSでは、「現在の仕事にどの程度満足していますか」という質問（ST5JOB）で、仕事への満足度が尋ねられている。選択肢は「満足している」「どちらかといえば満足している」「どちらともいえない」「どちらかといえば不満である」「不満である」という5つから1つを選択する形式である（わからないや無回答もあるが（後述）、ここでは省略する）。このようなときには、以下のように数値を割り当てることで、値が高いほど満足していることを表す連続変数に見立てることができる。もちろん、選択肢間の間隔がどれも同じ1であるというのはあくまで仮定であり本当は違うかもしれないということには注意が必要だが、解釈はわかりやすくなるというメリットがある。 選択肢 調査票上の番号 数値化例 満足している 1 5 どちらかといえば満足している 2 4 どちらでもない 3 3 どちらかといえば不満である 4 2 不満である 5 1 jgss #元のデータ（架空例） ## # A tibble: 6 × 1 ## ST5JOB ## &lt;dbl&gt; ## 1 1 ## 2 5 ## 3 4 ## 4 2 ## 5 1 ## 6 3 以下のようにして値を変えた変数を作成する。 jgss &lt;- jgss %&gt;% mutate(jobsatis = 6 - ST5JOB) jgss ## # A tibble: 6 × 2 ## ST5JOB jobsatis ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 5 ## 2 5 1 ## 3 4 2 ## 4 2 4 ## 5 1 5 ## 6 3 3 なお、こうした扱いが認められるかどうかは扱う変数によって異なるので、先行研究での定義を参考にするとよい。たとえば今回のような仕事への満足度についてはおおむねこのような処理は認められているが、「中学」に1、「高校」に2、「短大高専」に3、「大学大学院」に4を振る、というような処理はあまり認められていない。しかしながら、受けた教育年数として、「中学」に9、「高校」に12、「短大高専」に14、「大学」に16、「大学院」に18（など）といった値を振ることはある程度認められている。このあたりは先行研究の操作化を参考にしつつ、最終的には自分たちの関心によって決めるとよいだろう。 4.5.4 無回答、非該当、「わからない」などをNAに JGSSでは「夫は外で働き、妻は家庭を守るべきだ」という意見に対して賛成か反対かを4つの選択肢を設けて尋ねている。ただし、この質問に（何らかの理由で）回答していない者もおり、そのような場合には9という値が便宜的に振られている。 この質問に対する回答を連続値とみなして集計したりしたいとする。このような場合、無回答の9という値は計算から除外したいので、9という値ではなくNAとしたい。 jgss #元のデータ（架空例） ## # A tibble: 6 × 1 ## Q4WWHHX ## &lt;dbl&gt; ## 1 1 ## 2 9 ## 3 4 ## 4 3 ## 5 2 ## 6 1 以下のようにして9をNAに置き換えた変数を作成する。 jgss &lt;- jgss %&gt;% mutate(genderrole = if_else(Q4WWHHX == 9, NA, Q4WWHHX)) # 9をNAに置換 jgss #変換後のデータ ## # A tibble: 6 × 2 ## Q4WWHHX genderrole ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 ## 2 9 NA ## 3 4 4 ## 4 3 3 ## 5 2 2 ## 6 1 1 調査によってはこのように無回答やあるいは「わからない」という選択肢に対して便宜的に99という数字が振られていたり、非該当（たとえば結婚している人に対してのみ尋ねる質問の場合、結婚していない人はその質問に回答しない。このような場合には、回答対象ではないという意味で、非該当とされる）のケースに対して便宜的に8888や9999といったような数字が振られていることがある。このような場合にも同じようにNAに変換する。この作業を忘れて平均値などを計算するととんでもない間違いを犯してしまうことになるため、忘れないようにしっかりチェックしておきたい12。 それぞれの値がそれぞれどのような意味に対応しているかは、社会調査データを取得した際に合わせて配布される対応表（コードブック、値ラベルなどともいう）を参照する。分析に用いる変数については平均値だけではなく、分布や実際の値、調査票の文言などをきちんとチェックしておき、ミスが起こらないようにしたい。 4.5.5 カテゴリ変数の区間の中点をとって連続変数とする なんらかの区間をとって尋ねられている場合、その区間の中点をとって、連続変数とみなす。たとえば、日本家族社会学会が行っている2008年全国家族調査（NFRJ08）では、「あなたご自身…は、次にあげる…家事を現在どのくらいの頻度で行っていますか」という質問項目で、たとえば「食事の用意」について、以下のような選択肢で家事頻度を尋ねている。 選択肢 調査票上の番号 数値化例 ほぼ毎日（週6〜7回） 1 6.5 1週間に4〜5回 2 4.5 1週間に2〜3回 3 2.5 1週間に1回くらい 4 1 ほとんど行わない 5 0 このような場合、週6〜7回という区間の中点をとって6.5、週4〜5回という区間の中点をとって4.5、、etcとすることで、1週間当たりの家事頻度を表す連続変数と見立てることができる。 こうした扱いがどの程度許容されるかについては、先行研究での定義を参照するとよい。 年収などもこうした区間で扱われることがあるが、この場合は中点を定義できない選択肢が設けられていることがある（例：2050万円以上）。こうした場合の扱いについては諸説あり、こちらにも少しそのことを記載している。 4.6 %&gt;%をつなげてコマンドをまとめる 変数を作成する過程では、正しく変数を作れているかどうかを一つひとつ確認しながら進めていくことが必須である。しかし、正しく作成できたことが確認できたら、with(table())などを使って確認するコードは必ずしもスクリプトに残しておく必要はない。分析に使う変数が固まってきたら、変数を作成するためのコードを（ある程度）まとめておくと、コードがシンプルになってよいだろう。このようなときに、パイプ演算子を使った記法は有用である。 上記で作成した変数も含めて、本資料で使う変数をまとめて作成するためのコードを以下に記した。 piaac &lt;- piaac %&gt;% mutate(id = 1:n()) %&gt;% mutate(wage = earnhrbonus) %&gt;% mutate(logwage = log(wage)) %&gt;% mutate(gender = factor(gender_r, level = 2:1, label = c(&quot;女性&quot;,&quot;男性&quot;))) %&gt;% mutate(age = age_r) %&gt;% mutate(work = 2 - c_q01a) %&gt;% mutate(workhour = d_q10 / 5) %&gt;% mutate(workhour_fct = case_when( d_q10 &lt; 35 ~ 1, d_q10 &gt;= 35 &amp; d_q10 &lt;= 49 ~ 2, d_q10 &gt;= 50 &amp; d_q10 &lt;= 59 ~ 3, d_q10 &gt;= 60 ~ 4 )) %&gt;% mutate(workhour_fct = factor(workhour_fct, levels = 1:4, labels = c(&quot;35時間未満&quot;, &quot;35-49時間&quot;, &quot;50-59時間&quot;, &quot;60時間以上&quot;))) %&gt;% mutate(educ = case_when( edcat8 == 1 | edcat8 == 2 ~ 1, edcat8 == 3 ~ 2, edcat8 == 4 | edcat8 == 5 ~ 3, edcat8 == 6 | edcat8 == 7 | edcat8 == 8 ~ 4)) %&gt;% mutate(educ = factor(educ, levels = 1:4, labels = c(&quot;中学&quot;, &quot;高校&quot;, &quot;短大高専&quot;, &quot;大学大学院&quot;))) %&gt;% mutate(mothereduc = factor(j_q06b, levels = 1:3, labels = c(&quot;初等教育&quot;, &quot;中等教育&quot;, &quot;高等教育&quot;))) %&gt;% mutate(fathereduc = factor(j_q07b, levels = 1:3, labels = c(&quot;初等教育&quot;, &quot;中等教育&quot;, &quot;高等教育&quot;))) %&gt;% mutate(parenteduc = case_when( j_q07b &gt;= j_q06b ~ j_q07b, j_q07b &lt; j_q06b ~ j_q06b, is.na(j_q07b) == TRUE &amp; is.na(j_q06b) == FALSE ~ j_q06b, is.na(j_q06b) == TRUE &amp; is.na(j_q07b) == FALSE ~ j_q07b )) %&gt;% mutate(parenteduc = factor(parenteduc, levels = 1:3, labels = c(&quot;初等教育&quot;, &quot;中等教育&quot;, &quot;高等教育&quot;))) %&gt;% mutate(occupation = factor(isco1c, levels = 1:9, labels = c(&quot;管理職&quot;,&quot;専門職&quot;,&quot;技術職・准専門職&quot;,&quot;事務補助&quot;,&quot;サービス・販売&quot;,&quot;農林漁業&quot;,&quot;技能工&quot;,&quot;設備・機械運転・組立&quot;,&quot;単純作業&quot;) )) %&gt;% mutate(numeracy = pvnum1) %&gt;% mutate(ojt = 2 - b_q12c) %&gt;% mutate(health = 6 - i_q08) %&gt;% mutate(learning = i_q04d) %&gt;% mutate(readwork = readwork) %&gt;% mutate(numwork = numwork) このようにして作成した変数のみを残したデータに、piaac_variableという名前をつけて、別途データフレームとして残しておこう。 piaac_variable &lt;- piaac %&gt;% select(id, wage, logwage, gender, age, work, workhour, workhour_fct, educ, mothereduc, fathereduc, parenteduc, occupation, numeracy, ojt, health, learning, readwork, numwork) 4.7 サンプルの限定 社会調査データを分析する場合、調査対象者をすべて分析対象に含めるわけではなく、年齢を限定したり、働いている人だけに限定したりといったふうに、分析対象を一部に限定することが多い。このときに使うコードや注意点について記す。 4.7.1 該当するケースだけを残す：filter() 関心によっては、若年の人だけ分析したいとか、高齢の人だけ分析したいとか、女性（男性）だけ分析したいというときがある。それ以外にも、使う変数にNAが含まれているケースをあらかじめ除外するということはふつうにある。このようなときには、filter()を使う。 性別（gender）が男性のケースのみを抽出し、抽出したデータに新しい名前（piaac_male）をつける場合には次のようにする。 piaac_male &lt;- piaac_variable %&gt;% filter(gender == &quot;男性&quot;) 年齢が25歳以上34歳以下のケースのみを抽出し、抽出したデータに新しい名前（piaac_young）をつける。 piaac_young &lt;- piaac_variable %&gt;% filter(age &gt;= 25 &amp; age &lt;= 34) 今回の資料では、「25歳以上64歳以下の有業者」に対象を限定する。そのため、次のように条件を指定する。作成したデータフレームは別途piaac_sampleという名前をつけて保存しておくことにしよう。 piaac_sample &lt;- piaac_variable %&gt;% filter(25 &lt;= age &amp; age &lt;= 64) %&gt;% # 25歳以上64歳以下の個人を抽出 filter(work == 1) # 働いている人をチュ出 4.7.2 欠損値の扱い さて、上記のように分析対象を限定した。このデータに含まれる人数を確認してみる。nrow()を使うと、データフレーム（あるいはベクトル）の長さを調べることができる。 piaac_sample %&gt;% nrow() ## [1] 3330 このように、3330行からなるデータであることがわかる。しかしながら、回答者がすべての質問について回答しているわけではなく、回答を拒否したり、当該質問項目の対象者に当てはまらない（非該当）ために、値が入っていない（NAとなっている）場合がある。今回の資料で用いる変数について、NAとなっている回答がどの程度あるかをみてみよう。 piaac_sample %&gt;% summary() ## id wage logwage gender ## Min. : 1 Min. : 0.06 Min. :-2.851 女性:1508 ## 1st Qu.:1310 1st Qu.: 937.50 1st Qu.: 6.843 男性:1822 ## Median :2654 Median : 1445.09 Median : 7.276 ## Mean :2650 Mean : 2027.32 Mean : 7.311 ## 3rd Qu.:4008 3rd Qu.: 2224.38 3rd Qu.: 7.707 ## Max. :5278 Max. :266666.67 Max. :12.494 ## NA&#39;s :464 NA&#39;s :464 ## age work workhour workhour_fct ## Min. :25.00 Min. :1 Min. : 0.200 35時間未満: 721 ## 1st Qu.:36.00 1st Qu.:1 1st Qu.: 7.000 35-49時間 :1643 ## Median :44.00 Median :1 Median : 8.000 50-59時間 : 590 ## Mean :44.66 Mean :1 Mean : 8.272 60時間以上: 368 ## 3rd Qu.:54.00 3rd Qu.:1 3rd Qu.:10.000 NA&#39;s : 8 ## Max. :64.00 Max. :1 Max. :22.400 ## NA&#39;s :8 ## educ mothereduc fathereduc parenteduc ## 中学 : 305 初等教育:1112 初等教育:1110 初等教育: 853 ## 高校 :1187 中等教育:1504 中等教育:1305 中等教育:1411 ## 短大高専 : 793 高等教育: 583 高等教育: 760 高等教育: 977 ## 大学大学院:1044 NA&#39;s : 131 NA&#39;s : 155 NA&#39;s : 89 ## NA&#39;s : 1 ## ## ## occupation numeracy ojt health ## サービス・販売 :712 Min. :103.4 Min. :0.0000 Min. :1.000 ## 技術職・准専門職:532 1st Qu.:266.6 1st Qu.:0.0000 1st Qu.:2.000 ## 専門職 :512 Median :296.3 Median :0.0000 Median :3.000 ## 事務補助 :491 Mean :293.6 Mean :0.3459 Mean :3.038 ## 技能工 :349 3rd Qu.:323.2 3rd Qu.:1.0000 3rd Qu.:4.000 ## (Other) :713 Max. :440.9 Max. :1.0000 Max. :5.000 ## NA&#39;s : 21 ## learning readwork numwork ## Min. :1.000 Min. :-0.9555 Min. :-0.0902 ## 1st Qu.:3.000 1st Qu.: 1.6390 1st Qu.: 1.2468 ## Median :3.000 Median : 2.1992 Median : 1.7690 ## Mean :3.323 Mean : 2.2236 Mean : 1.9018 ## 3rd Qu.:4.000 3rd Qu.: 2.7557 3rd Qu.: 2.3693 ## Max. :5.000 Max. : 7.0208 Max. : 6.0499 ## NA&#39;s :1 NA&#39;s :174 NA&#39;s :420 NA'sと書かれているのが、各変数でNAとなっている行の数である。項目によってはNAがない変数もあるし、たくさんNAがある変数もある。 NAが含まれている変数は分析の際に集計が面倒だったりして、色々と取り扱いが難しい。そこで、分析に使う変数にNAが含まれている行はサンプルから除外しておくと集計が楽になる。filter()を使って、educ, parenteduc, occupation, wageの4つの変数についてNAが含まれている行を除外したデータフレームを作成しよう。 piaac_sample_nona &lt;- piaac_sample %&gt;% filter(is.na(educ) == FALSE) %&gt;% filter(is.na(parenteduc) == FALSE) %&gt;% filter(is.na(occupation) == FALSE) %&gt;% filter(is.na(wage) == FALSE) is.na()は値がNAであればTRUE、NAでなければFALSEを返す関数である。filter(is.na(educ) == FALSE)とすると、educがNAではないケースだけを残してね、という命令になる。上記のコードを実行したあとの回答を再度チェックしてみよう： piaac_sample_nona %&gt;% nrow() ## [1] 2783 piaac_sample_nona %&gt;% summary() ## id wage logwage gender ## Min. : 1 Min. : 0.06 Min. :-2.851 女性:1309 ## 1st Qu.:1306 1st Qu.: 940.00 1st Qu.: 6.846 男性:1474 ## Median :2663 Median : 1445.09 Median : 7.276 ## Mean :2653 Mean : 2040.36 Mean : 7.315 ## 3rd Qu.:3987 3rd Qu.: 2240.80 3rd Qu.: 7.715 ## Max. :5278 Max. :266666.67 Max. :12.494 ## ## age work workhour workhour_fct ## Min. :25.00 Min. :1 Min. : 0.200 35時間未満: 610 ## 1st Qu.:35.00 1st Qu.:1 1st Qu.: 7.000 35-49時間 :1419 ## Median :43.00 Median :1 Median : 8.000 50-59時間 : 490 ## Mean :43.95 Mean :1 Mean : 8.189 60時間以上: 264 ## 3rd Qu.:53.00 3rd Qu.:1 3rd Qu.:10.000 ## Max. :64.00 Max. :1 Max. :21.600 ## ## educ mothereduc fathereduc parenteduc ## 中学 :230 初等教育: 931 初等教育: 931 初等教育: 711 ## 高校 :972 中等教育:1305 中等教育:1141 中等教育:1228 ## 短大高専 :690 高等教育: 511 高等教育: 653 高等教育: 844 ## 大学大学院:891 NA&#39;s : 36 NA&#39;s : 58 ## ## ## ## occupation numeracy ojt health ## サービス・販売 :587 Min. :127.3 Min. :0.0000 Min. :1.000 ## 事務補助 :450 1st Qu.:267.7 1st Qu.:0.0000 1st Qu.:2.000 ## 技術職・准専門職:445 Median :297.2 Median :0.0000 Median :3.000 ## 専門職 :425 Mean :294.7 Mean :0.3672 Mean :3.046 ## 技能工 :272 3rd Qu.:324.0 3rd Qu.:1.0000 3rd Qu.:4.000 ## 管理職 :227 Max. :440.9 Max. :1.0000 Max. :5.000 ## (Other) :377 ## learning readwork numwork ## Min. :1.000 Min. :-0.9555 Min. :-0.0902 ## 1st Qu.:3.000 1st Qu.: 1.6240 1st Qu.: 1.2244 ## Median :3.000 Median : 2.1789 Median : 1.7651 ## Mean :3.312 Mean : 2.1966 Mean : 1.9057 ## 3rd Qu.:4.000 3rd Qu.: 2.7169 3rd Qu.: 2.3798 ## Max. :5.000 Max. : 7.0208 Max. : 6.0499 ## NA&#39;s :149 NA&#39;s :365 データの行数は先ほどよりも減っており、またwage, educ, occupationに含まれていたNA’sの表記が消えていることがわかる。 このように、変数に欠損が含まれるケースを除外するような処理の仕方をさして、リストワイズ削除 listwise delitionという。 なお、欠損値があまりに多い場合には、何らかのデータ操作のミス、調査のうえでの何らかの問題、そのほかの理由が考えられる。欠損の数がどれくらいあるのか（filterで限定する前と後とではどれくらいデータに含まれる人数が減るのか）は、注意深く見ておくとよいだろう。 4.7.3 外れ値の扱い 上記のように欠損値を除いたサンプルを作成したあと、さらに考慮すべきは、外れ値の問題である。連続変数を分析に用いる場合、このような外れ値が結果に大きな影響をおよぼす場合がある。その一例として、時給換算した賃金について考えてみよう。この変数の分布をみると、常識的には理解しがたい高い値、あるいは低い値をとっているケースが存在することがわかる（ggplotの使い方については第5章で解説する）。たとえば以下のように、時間あたり賃金が極端に低かったり（300円未満など）、逆に極端に高かったり（20000円以上など）するケースが存在している。 piaac_sample_nona %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) + xlim(0, 800) piaac_sample_nona %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) + xlim(5000, 100000) このようなケースが発生する理由はいくつかあるのだが、分析上は、たとえば平均値を計算したりする場合に、これらの外れ値があることによって結果がこうした極端に高い・低い人によって大きく左右されるという問題がある。そこで、こうした極端に高いあるいは低いケースを除外することはしばしば有効になる。時給換算した賃金の場合にはたとえば、上位1%、下位1%のサンプルを除外するという処理を行うことが多い。このように上位1%、下位1%のサンプルを除外するときの方法について記す。 まず、ntile()関数を使って、賃金の分位数を表す変数を作成する。 piaac_sample_nona &lt;- piaac_sample_nona %&gt;% mutate(wage_tile = ntile(wage, 100)) 下位1%と上位1%のケースにはどこからどこまでの値が含まれているのかチェックしてみよう： piaac_sample_nona %&gt;% filter(wage_tile == 1 | wage_tile == 100) %&gt;% group_by(wage_tile) %&gt;% summarize(min = min(wage), max = max(wage)) ## # A tibble: 2 × 3 ## wage_tile min max ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 0.0578 462. ## 2 100 9760. 266667. このように、下位1%には462円以下のケースが含まれ、上位1%には9760円以上のケースが含まれていることがわかる。これらのケースを除外して、分析に使用するためのサンプルを作ろう。 piaac_sample_analytic &lt;- piaac_sample_nona %&gt;% filter(2 &lt;= wage_tile &amp; wage_tile &lt;= 99) このように極端に低いケースと極端に高いケースを除外することで、外れ値の影響を除いた賃金の分布を得ることができる。 piaac_sample_analytic %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) このように、分析に連続変数を用いる場合には、外れ値がないかどうか、外れ値を含むことで結果が大きく変わってしまわないかをチェックしておく必要がある。 4.7.4 分析用データを書き出す 上記のような手順を経て、ようやく分析することのできるデータを準備することができた。準備できたデータを、新しいデータとして保存しておこう。readr::write_excel_csv()を使うと、データフレームをrds形式で書き出すことができる。 write_rds(piaac_sample_analytic, file = &quot;data/piaac_sample_analytic.rds&quot;) このように、元々のデータから種々のデータ加工を行い、分析のために使用することにしたデータは、元々のデータとは別に保存しておくことで、データの加工のプロセスとデータの分析のプロセスを明示的に分けることにつながり、エラーを減らすことができる。 以降では、このデータを使って分析を行っていく。 4.8 【発展】データの追加 たとえば複数の社会調査データを合併したり、複数時点のデータを合併して時系列比較、あるいはパネルデータとして分析をしたいといったことがあるかもしれない。このような場合の処理について記しておく。 以下のような2つのデータがあるとする。 df1 ## # A tibble: 6 × 4 ## id x1 x2 data ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 5 1 data 1 ## 2 2 8 1 data 1 ## 3 3 2 1 data 1 ## 4 4 0 2 data 1 ## 5 5 6 2 data 1 ## 6 6 1 2 data 1 df2 ## # A tibble: 4 × 4 ## id x1 x2 data ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 7 9 2 data 2 ## 2 8 4 1 data 2 ## 3 9 0 2 data 2 ## 4 10 2 1 data 2 この2つのデータを合併したいときには、dplyr::bind_rows()を使う。 df &lt;- df1 %&gt;% bind_rows(df2) # df2を縦方向に結合 これで、以下のように2つのデータを合併して行が増えたデータが得られる。 df ## # A tibble: 10 × 4 ## id x1 x2 data ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 1 5 1 data 1 ## 2 2 8 1 data 1 ## 3 3 2 1 data 1 ## 4 4 0 2 data 1 ## 5 5 6 2 data 1 ## 6 6 1 2 data 1 ## 7 7 9 2 data 2 ## 8 8 4 1 data 2 ## 9 9 0 2 data 2 ## 10 10 2 1 data 2 実際にはわずかに違いがあるようである。参考）「R 4.1.0で導入された パイプ演算子 (|&gt;)の紹介 / r_native_pipe」↩︎ テキストによっては前者を「質的変数」、後者を「量的変数」と表記しているものもある。しかしこの呼び方は「質的研究」「量的研究」などと混同しやすいうえ、その数を数えられるという意味では「質的変数」を「量的」に扱えるというよくわからない事態が生じる。そこでここでは一貫して「カテゴリ変数」「連続変数」と表記する。また、尺度水準（比例尺度、間隔尺度、順序尺度、名義尺度）について紹介しているテキストもあるが、これらを区別しても分析上あまり意味はないのでここでは扱わない。↩︎ 実際、ある査読付き雑誌に掲載された論文が、売上高がわからないケースに対して付されていた88,888,888,888という値をNAにすることなく分析していたのではないか（実際、それをNAにすると分析の結果はまったく違うものになる）という指摘がなされたことがある。院生のころは「先行研究で言われていないような意外な結果が出たら、たいていはプログラムが間違っているものだ（だからちゃんとチェックしなさい）」とよく言われたものだった。↩︎ "],["descriptives.html", "Chapter 5 1変数の集計 5.1 連続変数を集計する 5.2 分布をみる 5.3 カテゴリ変数を集計する 5.4 記述統計量の一覧表を作る 5.5 結果をファイルに書き出す 5.6 tbl_summary()で値の少ない連続変数がカテゴリ変数として集計される問題について", " Chapter 5 1変数の集計 本章では、1変数の集計方法を説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 さらに、以下のパッケージを読み込んだ上で、第4章で作成したデータを読み込んでpiaacというデータフレームに入れていることを前提とする。具体的には、以下のコードを実行しておく必要がある。 library(tidyverse) piaac &lt;- read_rds(&quot;data/piaac_sample_analytic.rds&quot;) 5.1 連続変数を集計する 5.1.1 要約統計量の計算 さまざまな変数を集計するときに最も基本的なコードが、summarize()である。たとえば、piaacというデータフレームに含まれている変数wageの平均値を求めたいとする。このようなときには、次のように記述する。 piaac %&gt;% summarize(mean = mean(wage)) ## # A tibble: 1 × 1 ## mean ## &lt;dbl&gt; ## 1 1792. この命令は、「piaacというデータフレームのなかに入っている変数を集計してね、具体的には、平均値を求めてね、ちなみにその平均値にはmeanという名前をつけてね」ということを意味している。 集計する変数（この場合はwage）にNAが含まれていると計算ができず、結果もNAとなってしまう。NAが含まれる変数の平均値を計算するときには、あらかじめwageがNAの行を除外しておくとよい。詳しくは前章のサンプルの選択を参照のこと。一時的にNAの行を除外して集計してみたい場合には、次のように書く。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% summarize(mean = mean(wage)) ## # A tibble: 1 × 1 ## mean ## &lt;dbl&gt; ## 1 1792. 平均値だけでなく、いろいろな統計量を計算できる。よく用いるものは以下のとおり。 関数 意味 mean(x) 平均値 sd(x) 標準偏差 max(x) 最大値 min(x) 最小値 quantile(x, 0.5) 分位数。0.5とした場合には50パーセンタイル点（中央値）を計算する。0（最小）から1（最大）まで任意の点を指定できる。 n() 行数を数える。 全部集計してみるとたとえば以下のような感じになる。 piaac %&gt;% summarize(mean = mean(wage), sd = sd(wage), max = max(wage), min = min(wage), p25 = quantile(wage, 0.25), p50 = quantile(wage, 0.5), p75 = quantile(wage, 0.75), n = n()) ## # A tibble: 1 × 8 ## mean sd max min p25 p50 p75 n ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1792. 1191. 9634. 462. 950 1445. 2212. 2728 いくつかの変数について最小値、第1四分位点、中央値、平均値、第3四分位点、最大値をまとめて表示したい場合、これらを一つひとつやっていくのはとても煩雑である。このような場合には、統計量を計算したい変数だけをselect()で抽出し、そのうえで、summary()関数を使うとできる。たとえば、wage, age, healthの3つの変数についての統計量をまとめて見てみたい場合に次のようにする。 piaac %&gt;% select(wage, age, health) %&gt;% summary() ## wage age health ## Min. : 461.5 Min. :25.00 Min. :1.000 ## 1st Qu.: 950.0 1st Qu.:35.00 1st Qu.:2.000 ## Median :1445.1 Median :43.00 Median :3.000 ## Mean :1792.4 Mean :43.85 Mean :3.046 ## 3rd Qu.:2212.2 3rd Qu.:53.00 3rd Qu.:4.000 ## Max. :9633.9 Max. :64.00 Max. :5.000 5.2 分布をみる 5.2.1 ヒストグラムとggplotの導入 連続変数の場合にはたんに平均値や中央値だけを見るだけでなく、分布を見ることも重要である。連続変数の分布をみるときには、ヒストグラムを使うのが有効である。コードの説明はさておき、まずはヒストグラムをみてみよう。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. このように、Rでグラフを作成したいときに活躍するのがggplot2である。ggplot2はtidyverseパッケージを読み込むと合わせて読み込まれるため、別途library(ggplot2)で読み込む必要はない。 ggplot2の基本的な発想は、キャンバスに絵の具を重ね塗りしていくかのように、一つひとつ層を重ねていってグラフを作るというものである。具体的にみてみよう。先ほどのコードから3行目を削除した次の結果を確認してみよう。 piaac %&gt;% ggplot(aes(x = wage)) # wageをx軸として座標を描く ggplot()という部分が、グラフを書くための準備をしている箇所である。aes()のなかでは、x軸やy軸にそれぞれ何の変数を取るのかであったり、どのような色で分けるのか（後述）などを指定する。今の場合であれば、x軸にwageをとる、ということを指している。上記の命令だけだと、このようにx軸のみが表示された空白の座標が準備される。 geom_histogram()というのが、ヒストグラムを書くためのコードである。先ほどのコードに、+でつないでgeom_histogram()というコードを追加すると、空白の座標にヒストグラムが描かれる。縦軸（count）は、その区間に何人の人が属しているかを示している。 piaac %&gt;% ggplot(aes(x = wage)) + # wageをx軸として座標を描いて、 geom_histogram() # そこにヒストグラムを描く ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. geom_histogram()内でオプションを指定することで、ヒストグラムの見た目をさまざまに変更できる。たとえば、区間の区切りの個数（bins）を細かくしてみよう（デフォルトはbins = 30）。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) # ヒストグラムの区切りの数を100に設定 以下、+でつないでいくことで、さらに層を重ねて、グラフの見た目をさまざまに変更できる。たとえば、x軸の範囲を指定するxlim()を使って、より見やすいグラフを作ってみよう。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) + xlim(0, 10000) # x軸の最小値を0、最大値を10000に設定 なお、y軸の範囲を指定する場合には、ylim()を用いる。範囲を外れる値およびNAについては表示されず、代わりに、いくつの値が表示されていないのかを示す警告メッセージが表示される（Warning message:と表示される）。このメッセージはとくにエラーというわけではないが、意図せずにたくさんの値が非表示になっていないかどうかを確認しておくとよい。 5.2.2 ggplotの設定（日本語関係） ところで、Macでggplot2パッケージを使用し、グラフ中に日本語を使用する場合には、library(tidyverse)（またはlibrary(ggplot2)）を実行したうえで、たとえば以下のようなコードをあらかじめ実行しておく必要がある。 theme_set(theme_grey(base_family = &quot;HiraginoSans-W3&quot;)) theme_set()関数はフォントのほかにいくつかの追加的な設定を行うことができる。 この資料で使用しているグラフについては以下のようにthemeを設定しています。 theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, #文字の大きさを設定。デフォルトは11 base_line_size = 0.2, #罫線の線の太さを設定。デフォルトはbase_size/22 base_rect_size = 0.2 #外枠の線の太さを設定。デフォルトはbase_size/22 )) Windowsユーザの方は上記コードからbase_family =の行を除いたこちらのコードで同じような雰囲気になります： theme_set(theme_bw( base_size = 11, base_line_size = 0.2, base_rect_size = 0.2 )) 5.2.3 軸に名前をつける 上記の設定を終えて日本語問題をクリアしていれば（Windowsユーザならはじめからクリアしているのだけれども）、軸に名前をつけるコマンドlabs()をさらに追加して、日本語の名前を付けてよりわかりやすいグラフを作ることができる。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) + xlim(0, 10000) + labs(x = &quot;賃金&quot;, y = &quot;度数&quot;) 5.3 カテゴリ変数を集計する 5.3.1 度数の確認 カテゴリ変数の場合は平均値や標準偏差のような要約統計量を計算することはできない（意味がない）。最も基本的な集計は、各カテゴリにそれぞれ何人いるのかを確認することである。count()を使うことで各カテゴリの人数（度数）をみることができる。 piaac %&gt;% count(occupation) ## # A tibble: 9 × 2 ## occupation n ## &lt;fct&gt; &lt;int&gt; ## 1 管理職 219 ## 2 専門職 419 ## 3 技術職・准専門職 439 ## 4 事務補助 439 ## 5 サービス・販売 576 ## 6 農林漁業 25 ## 7 技能工 265 ## 8 設備・機械運転・組立 207 ## 9 単純作業 139 度数だけでなく、各職業にどれくらいの割合の人が含まれているのかも重要である。先ほどのコードに少し計算をすることで、各カテゴリに含まれる人が全体に占める割合を計算できる。 piaac %&gt;% count(occupation) %&gt;% mutate(sumn = sum(n)) %&gt;% # すべての度数を合計した値を入れた列を作成する mutate(prop = n / sumn) # 各職業の度数を合計で割った値を求める ## # A tibble: 9 × 4 ## occupation n sumn prop ## &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 管理職 219 2728 0.0803 ## 2 専門職 419 2728 0.154 ## 3 技術職・准専門職 439 2728 0.161 ## 4 事務補助 439 2728 0.161 ## 5 サービス・販売 576 2728 0.211 ## 6 農林漁業 25 2728 0.00916 ## 7 技能工 265 2728 0.0971 ## 8 設備・機械運転・組立 207 2728 0.0759 ## 9 単純作業 139 2728 0.0510 propの列が、各職業の度数を合計で割った値を示している。この値はすべて足すと1になる。この値を100倍すれば、百分率（%）としてよむことができる。 5.3.2 分布の可視化：棒グラフ こうして集計した値を棒グラフにしすると見やすいかもしれない。このようなときにはどうすればよいだろうか？先ほど、count()を使って集計した結果をデータフレームに保管しよう。 countdata &lt;- piaac %&gt;% count(occupation) %&gt;% mutate(sumn = sum(n)) %&gt;% # すべての度数を合計した値を入れた列を作成する mutate(prop = n / sumn) # 各職業の度数を合計で割った値を求める このデータフレームを使って、ggplot()を使って棒グラフを作成する。棒グラフを作るときのコマンドは、geom_col()である。 countdata %&gt;% ggplot(aes(x = occupation, y = n)) + # x軸をoccupation, y軸を人数（n）として指定 geom_col() # 棒グラフを作成 悪くないけれど、横軸のラベルがかぶってしまって、何を指しているのかいまいちわからなくなってしまっている。また、このままだと縦軸や横軸の名前は必ずしもわかりやすいものではない。そこで、以下のようにコマンドを追加しよう。 countdata %&gt;% ggplot(aes(x = occupation, y = n)) + geom_col() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + # X軸を90度傾ける labs(x = &quot;職業&quot;, y = &quot;割合&quot;) # x軸とy軸に名前をつける 縦軸を人数ではなく割合にした場合のグラフは次のようになる。 countdata %&gt;% ggplot(aes(x = occupation, y = prop)) + # 縦軸を割合に geom_col() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x = &quot;職業&quot;, y = &quot;割合&quot;) 5.4 記述統計量の一覧表を作る 5.4.1 記述統計量の一覧表 論文などで分析に使用する変数の記述統計量の一覧表を示していることがよくある。このような表を作ることで、読む側にとっては変数の分布を確認でき、その後の結果も読みやすくなる。こうした一覧表を作るために非常に便利なパッケージがgtsummaryである。まずはこれを読み込もう。 library(gtsummary) 次の5つの変数の記述統計量の一覧表を作りたいとしよう。select()を使って、こららの変数だけを残したデータフレームを作成する。 列名 型 変数ラベル gender カテゴリ（factor） 性別 age 連続（numeric） 年齢 educ カテゴリ（factor） 最終学歴 occupation カテゴリ（factor） 職業 wage 連続（numeric） 賃金 piaac_selected &lt;- piaac %&gt;% select(gender, age, educ, occupation, wage) この中には連続変数もカテゴリ変数もあり、またカテゴリの個数が2つのものもあればもっと多いものもあって複雑である。gtsummary::tbl_summary()は、変数の型がきちんとしていれば、それを読み取ってきれいな記述統計量の表を作ってくれる。 piaac_selected %&gt;% tbl_summary() #ywtlxgksqz table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #ywtlxgksqz thead, #ywtlxgksqz tbody, #ywtlxgksqz tfoot, #ywtlxgksqz tr, #ywtlxgksqz td, #ywtlxgksqz th { border-style: none; } #ywtlxgksqz p { margin: 0; padding: 0; } #ywtlxgksqz .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ywtlxgksqz .gt_caption { padding-top: 4px; padding-bottom: 4px; } #ywtlxgksqz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ywtlxgksqz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ywtlxgksqz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ywtlxgksqz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ywtlxgksqz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ywtlxgksqz .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ywtlxgksqz .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ywtlxgksqz .gt_column_spanner_outer:first-child { padding-left: 0; } #ywtlxgksqz .gt_column_spanner_outer:last-child { padding-right: 0; } #ywtlxgksqz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ywtlxgksqz .gt_spanner_row { border-bottom-style: hidden; } #ywtlxgksqz .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #ywtlxgksqz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ywtlxgksqz .gt_from_md > :first-child { margin-top: 0; } #ywtlxgksqz .gt_from_md > :last-child { margin-bottom: 0; } #ywtlxgksqz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ywtlxgksqz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ywtlxgksqz .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ywtlxgksqz .gt_row_group_first td { border-top-width: 2px; } #ywtlxgksqz .gt_row_group_first th { border-top-width: 2px; } #ywtlxgksqz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ywtlxgksqz .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ywtlxgksqz .gt_first_summary_row.thick { border-top-width: 2px; } #ywtlxgksqz .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ywtlxgksqz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ywtlxgksqz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ywtlxgksqz .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #ywtlxgksqz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ywtlxgksqz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ywtlxgksqz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ywtlxgksqz .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ywtlxgksqz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ywtlxgksqz .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ywtlxgksqz .gt_left { text-align: left; } #ywtlxgksqz .gt_center { text-align: center; } #ywtlxgksqz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ywtlxgksqz .gt_font_normal { font-weight: normal; } #ywtlxgksqz .gt_font_bold { font-weight: bold; } #ywtlxgksqz .gt_font_italic { font-style: italic; } #ywtlxgksqz .gt_super { font-size: 65%; } #ywtlxgksqz .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #ywtlxgksqz .gt_asterisk { font-size: 100%; vertical-align: 0; } #ywtlxgksqz .gt_indent_1 { text-indent: 5px; } #ywtlxgksqz .gt_indent_2 { text-indent: 10px; } #ywtlxgksqz .gt_indent_3 { text-indent: 15px; } #ywtlxgksqz .gt_indent_4 { text-indent: 20px; } #ywtlxgksqz .gt_indent_5 { text-indent: 25px; } #ywtlxgksqz .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #ywtlxgksqz div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Characteristic N = 2,7281 gender     女性 1,284 (47%)     男性 1,444 (53%) age 43 (35, 53) educ     中学 226 (8.3%)     高校 948 (35%)     短大高専 681 (25%)     大学大学院 873 (32%) occupation     管理職 219 (8.0%)     専門職 419 (15%)     技術職・准専門職 439 (16%)     事務補助 439 (16%)     サービス・販売 576 (21%)     農林漁業 25 (0.9%)     技能工 265 (9.7%)     設備・機械運転・組立 207 (7.6%)     単純作業 139 (5.1%) wage 1,445 (950, 2,213) 1 n (%); Median (Q1, Q3) これでもすでにかなりきれいな表になっているが、以下の4点で修正をしてみよう。 educやoccupationといった変数がそれぞれ何を示しているのか、自分以外の見る人にとってもわかるように日本語の名前をつけたい：label = list(x ~ \"名前\") 連続変数については中央値（50パーセンタイル点）、第1四分位数（25パーセンタイル点）、第3四分位数（75パーセンタイル点）が示されているが、それよりは、平均値と標準偏差を載せたい：statistic = list(all_continuous() ~ \"{mean} ({sd})\") 同じく、連続変数については、小数点以下の桁数（小数点第1位に）揃えたい：digits = all_continuous() ~ 1 左上のCharacteristicsというのがなんだか気になるので削除したい：tbl_crossのコマンドの後ろに%&gt;%でつないでmodify_header(label ~ \"\") piaac_selected %&gt;% tbl_summary(label = list(gender ~ &quot;性別&quot;, age ~ &quot;年齢&quot;, educ ~ &quot;最終学歴&quot;, occupation ~ &quot;職業&quot;, wage ~ &quot;賃金&quot;), #~の前には列名、後ろにはつけたい名前を&quot;&quot;で囲んで入れ、,で一つずつ区切る statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;), digits = all_continuous() ~ 1) %&gt;% #数値の部分が小数点第y位の部分の値 modify_header(label ~ &quot;&quot;) # &quot;&quot;の部分には好きな文字列を入れられる。何も入れなければ空欄になる #zuybljncpx table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #zuybljncpx thead, #zuybljncpx tbody, #zuybljncpx tfoot, #zuybljncpx tr, #zuybljncpx td, #zuybljncpx th { border-style: none; } #zuybljncpx p { margin: 0; padding: 0; } #zuybljncpx .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zuybljncpx .gt_caption { padding-top: 4px; padding-bottom: 4px; } #zuybljncpx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zuybljncpx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #zuybljncpx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zuybljncpx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zuybljncpx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zuybljncpx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zuybljncpx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zuybljncpx .gt_column_spanner_outer:first-child { padding-left: 0; } #zuybljncpx .gt_column_spanner_outer:last-child { padding-right: 0; } #zuybljncpx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zuybljncpx .gt_spanner_row { border-bottom-style: hidden; } #zuybljncpx .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #zuybljncpx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zuybljncpx .gt_from_md > :first-child { margin-top: 0; } #zuybljncpx .gt_from_md > :last-child { margin-bottom: 0; } #zuybljncpx .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zuybljncpx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #zuybljncpx .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #zuybljncpx .gt_row_group_first td { border-top-width: 2px; } #zuybljncpx .gt_row_group_first th { border-top-width: 2px; } #zuybljncpx .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zuybljncpx .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #zuybljncpx .gt_first_summary_row.thick { border-top-width: 2px; } #zuybljncpx .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zuybljncpx .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zuybljncpx .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zuybljncpx .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #zuybljncpx .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zuybljncpx .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zuybljncpx .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zuybljncpx .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #zuybljncpx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zuybljncpx .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #zuybljncpx .gt_left { text-align: left; } #zuybljncpx .gt_center { text-align: center; } #zuybljncpx .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zuybljncpx .gt_font_normal { font-weight: normal; } #zuybljncpx .gt_font_bold { font-weight: bold; } #zuybljncpx .gt_font_italic { font-style: italic; } #zuybljncpx .gt_super { font-size: 65%; } #zuybljncpx .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #zuybljncpx .gt_asterisk { font-size: 100%; vertical-align: 0; } #zuybljncpx .gt_indent_1 { text-indent: 5px; } #zuybljncpx .gt_indent_2 { text-indent: 10px; } #zuybljncpx .gt_indent_3 { text-indent: 15px; } #zuybljncpx .gt_indent_4 { text-indent: 20px; } #zuybljncpx .gt_indent_5 { text-indent: 25px; } #zuybljncpx .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #zuybljncpx div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } N = 2,7281 性別     女性 1,284 (47%)     男性 1,444 (53%) 年齢 43.8 (10.8) 最終学歴     中学 226 (8.3%)     高校 948 (35%)     短大高専 681 (25%)     大学大学院 873 (32%) 職業     管理職 219 (8.0%)     専門職 419 (15%)     技術職・准専門職 439 (16%)     事務補助 439 (16%)     サービス・販売 576 (21%)     農林漁業 25 (0.9%)     技能工 265 (9.7%)     設備・機械運転・組立 207 (7.6%)     単純作業 139 (5.1%) 賃金 1,792.4 (1,191.0) 1 n (%); Mean (SD) 5.4.2 グループ別の記述統計量の一覧表 何らかの属性などでサンプルを分けて比較分析する場合には、属性ごとの記述統計量を示すとよい。これも、tbl_summary()のなかでby =というオプションを指定することで簡単に実行することができる。たとえば性別（gender）で分ける場合には、次のようにする。 piaac_selected %&gt;% tbl_summary(label = list(age ~ &quot;年齢&quot;, educ ~ &quot;最終学歴&quot;, occupation ~ &quot;職業&quot;, wage ~ &quot;賃金&quot;), #~の前には列名、後ろにはつけたい名前を&quot;&quot;で囲んで入れ、,で一つずつ区切る by = gender, # 性別（gender）で分割 statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;), digits = all_continuous() ~ 1) %&gt;% modify_header(label ~ &quot;&quot;) #acfcyokxog table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #acfcyokxog thead, #acfcyokxog tbody, #acfcyokxog tfoot, #acfcyokxog tr, #acfcyokxog td, #acfcyokxog th { border-style: none; } #acfcyokxog p { margin: 0; padding: 0; } #acfcyokxog .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #acfcyokxog .gt_caption { padding-top: 4px; padding-bottom: 4px; } #acfcyokxog .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #acfcyokxog .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #acfcyokxog .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #acfcyokxog .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #acfcyokxog .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #acfcyokxog .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #acfcyokxog .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #acfcyokxog .gt_column_spanner_outer:first-child { padding-left: 0; } #acfcyokxog .gt_column_spanner_outer:last-child { padding-right: 0; } #acfcyokxog .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #acfcyokxog .gt_spanner_row { border-bottom-style: hidden; } #acfcyokxog .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #acfcyokxog .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #acfcyokxog .gt_from_md > :first-child { margin-top: 0; } #acfcyokxog .gt_from_md > :last-child { margin-bottom: 0; } #acfcyokxog .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #acfcyokxog .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #acfcyokxog .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #acfcyokxog .gt_row_group_first td { border-top-width: 2px; } #acfcyokxog .gt_row_group_first th { border-top-width: 2px; } #acfcyokxog .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #acfcyokxog .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #acfcyokxog .gt_first_summary_row.thick { border-top-width: 2px; } #acfcyokxog .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #acfcyokxog .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #acfcyokxog .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #acfcyokxog .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #acfcyokxog .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #acfcyokxog .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #acfcyokxog .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #acfcyokxog .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #acfcyokxog .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #acfcyokxog .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #acfcyokxog .gt_left { text-align: left; } #acfcyokxog .gt_center { text-align: center; } #acfcyokxog .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #acfcyokxog .gt_font_normal { font-weight: normal; } #acfcyokxog .gt_font_bold { font-weight: bold; } #acfcyokxog .gt_font_italic { font-style: italic; } #acfcyokxog .gt_super { font-size: 65%; } #acfcyokxog .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #acfcyokxog .gt_asterisk { font-size: 100%; vertical-align: 0; } #acfcyokxog .gt_indent_1 { text-indent: 5px; } #acfcyokxog .gt_indent_2 { text-indent: 10px; } #acfcyokxog .gt_indent_3 { text-indent: 15px; } #acfcyokxog .gt_indent_4 { text-indent: 20px; } #acfcyokxog .gt_indent_5 { text-indent: 25px; } #acfcyokxog .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #acfcyokxog div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } 女性 N = 1,2841 男性 N = 1,4441 年齢 44.0 (10.7) 43.7 (11.0) 最終学歴     中学 94 (7.3%) 132 (9.1%)     高校 466 (36%) 482 (33%)     短大高専 466 (36%) 215 (15%)     大学大学院 258 (20%) 615 (43%) 職業     管理職 17 (1.3%) 202 (14%)     専門職 206 (16%) 213 (15%)     技術職・准専門職 143 (11%) 296 (20%)     事務補助 324 (25%) 115 (8.0%)     サービス・販売 397 (31%) 179 (12%)     農林漁業 7 (0.5%) 18 (1.2%)     技能工 62 (4.8%) 203 (14%)     設備・機械運転・組立 33 (2.6%) 174 (12%)     単純作業 95 (7.4%) 44 (3.0%) 賃金 1,339.1 (781.6) 2,195.5 (1,338.7) 1 Mean (SD); n (%) 5.5 結果をファイルに書き出す 5.5.1 結果を入れるためのフォルダを作る 上記ではいろいろなグラフを作ったり、要約統計量を計算するためのコマンドを紹介してきた。RStudio上で見る分にはこれで十分だが、実際にこれらを論文にまとめていく段階では、結果をwordに貼り付けたりする必要がある。ここではそうした方法を紹介する。 3章で、データを置くためのフォルダを作成しておくとよいということを紹介した。分析結果を保存しておくためのフォルダというのも別途あると整理整頓ができて便利である。ここでは、「results」という分析結果を保存しておくためのフォルダを作ろう。右クリックで「新規フォルダを作成」するか、以下のコードを実行する。 dir.create(&quot;results&quot;) 5.5.2 ggplotで作成した図を書き出す ggplotで作成した図を保存する方法は以下のとおりである。日本語フォントを含んでいるかどうか、および、出力形式によってどのようなコマンドを実行するかが変わってくるので、注意が必要。 5.5.2.1 日本語フォントを含まない図の場合 日本語フォントを含まない（あらかじめtheme_set()で設定していない）場合についてみてみよう。例として、先ほど出したヒストグラムを再度表示する。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram() + xlim(0, 10000) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. 図を保存するときの形式として、pdfファイルとpngファイルについて説明する。 pdfはベクター形式といわれていて、拡大しても画質が荒くならない。どんなに大きくしたり小さくしたりしてもつねにきれいなグラフが保持されるというメリットがあるが、Wordファイルに貼り付けられなかったりすることもある（たしかWindowsだとWordにpdfを貼り付けられない気がする？）。 pngはラスタ形式といわれていて、（写真みたいに）拡大すると画質が荒くなってしまう。ただ、よっぽど拡大しない限りはそれなりにきれいな図にすることができるので、これでも事足りる場面は多い。この方法は、WindowsでもMacでも実行できるはず。 書き出したい図が右下のplotのウィンドウに表示された状態で、以下のggsave()コマンドを使うと、保存することができる。 ggsave(&quot;results/histogram.pdf&quot;) # pdf形式 ## Saving 7 x 5 in image ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. ggsave(&quot;results/histogram.png&quot;) # png形式 ## Saving 7 x 5 in image ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. サイズをとくに指定しない場合には、plotの画面に表示されている縮尺で結果が保存される。これだと、表示している窓の大きさを変えるたびに出力結果が変わってしまうので、次のように幅と高さを指定するとよい。 ggsave(&quot;results/histogram.pdf&quot;, width = 5, height = 4) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. なお、widthやheightの数値が小さいほど、図内の文字や棒グラフの棒、散布図の点は相対的に大きくなる。より複雑な図で、文字などの被りがないようにするためには、適宜、サイズの変更が必要である。 5.5.2.2 日本語フォントを含む図の場合 日本語フォントを含む図の場合には、上記の方法で保存すると文字が消えてしまうという問題が生じる。この場合は、以下の手順で図を保存する。 まず、次のように日本語フォントを含む図を作成してみよう。 piaac %&gt;% with(table(occupation)) %&gt;% prop.table() %&gt;% as.data.frame() %&gt;% ggplot(aes(x = occupation, y = Freq)) + geom_col() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # X軸を45度傾ける labs(x = &quot;職業&quot;, y = &quot;割合&quot;) # x軸とy軸に名前をつける png形式の場合は今までと同じ方法で文字化けせずに保存できる。 ggsave(&quot;results/bar_graph.png&quot;, width = 5, height = 4) # png形式 一方で、pdfの場合にはひとくふう必要となる。まず、保存したいグラフをオブジェクト（ここではgとする）に入れてやる。 g &lt;- piaac %&gt;% with(table(occupation)) %&gt;% prop.table() %&gt;% as.data.frame() %&gt;% ggplot(aes(x = occupation, y = Freq)) + geom_col() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + # X軸を45度傾ける labs(x = &quot;職業&quot;, y = &quot;割合&quot;) # x軸とy軸に名前をつける そのうえで、Windowsの場合は以下のコマンド： pdf(file = &quot;results/bar_graph.pdf&quot;, family = &quot;Japan1GothicBBB&quot;, width = 5, height = 4) g dev.off() Macの場合は以下のコマンドで保存する： quartz(file = &quot;results/bar_graph.pdf&quot;, type = &quot;pdf&quot;, family = &quot;sans&quot;, width = 5, height = 4) g dev.off() ## quartz_off_screen ## 2 これで無事、グラフが保存できた。 5.5.3 記述統計の一覧表をwordに書き出す gtsummary::tbl_summary()で作成した記述統計の表はword形式で書き出すことができる。その際に用いるパッケージがflextableである。まずはこのパッケージを読み込んでおく。 library(flextable) 先ほど作成したグループ別の記述統計量の表をwordファイルに書き出したいときには、以下のように%&gt;%演算子でつないで、as_flex_table() %&gt;% save_as_docs(path = \"xxx.docx\")というコマンドを追加する。 piaac_selected %&gt;% tbl_summary(label = list(age ~ &quot;年齢&quot;, educ ~ &quot;最終学歴&quot;, occupation ~ &quot;職業&quot;, wage ~ &quot;賃金&quot;), statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;), by = gender, digits = all_continuous() ~ 1) %&gt;% modify_header(label ~ &quot;&quot;) %&gt;% as_flex_table() %&gt;% save_as_docx(path = &quot;results/summary.docx&quot;) 5.6 tbl_summary()で値の少ない連続変数がカテゴリ変数として集計される問題について この節では、gtsummary::tbl_summary()を使っていて起こりがちな問題への対処法について記す。 今回のデータには、1, 2, 3, 4, 5のいずれかの値をとり、値が大きいほど健康状態がよいことを示す変数healthが含まれている。この変数の記述統計量tbl_summary()で表示すると、連続変数（numeric）のはずなのになぜかカテゴリ変数のように表記されてしまう。 piaac %&gt;% with(table(health)) ## health ## 1 2 3 4 5 ## 122 572 1274 579 181 piaac_selected2 &lt;- piaac %&gt;% select(gender, age, wage, health) piaac_selected2 %&gt;% tbl_summary(statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;)) #mvkpkjhzyr table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #mvkpkjhzyr thead, #mvkpkjhzyr tbody, #mvkpkjhzyr tfoot, #mvkpkjhzyr tr, #mvkpkjhzyr td, #mvkpkjhzyr th { border-style: none; } #mvkpkjhzyr p { margin: 0; padding: 0; } #mvkpkjhzyr .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #mvkpkjhzyr .gt_caption { padding-top: 4px; padding-bottom: 4px; } #mvkpkjhzyr .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #mvkpkjhzyr .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #mvkpkjhzyr .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mvkpkjhzyr .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mvkpkjhzyr .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mvkpkjhzyr .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #mvkpkjhzyr .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #mvkpkjhzyr .gt_column_spanner_outer:first-child { padding-left: 0; } #mvkpkjhzyr .gt_column_spanner_outer:last-child { padding-right: 0; } #mvkpkjhzyr .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #mvkpkjhzyr .gt_spanner_row { border-bottom-style: hidden; } #mvkpkjhzyr .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #mvkpkjhzyr .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #mvkpkjhzyr .gt_from_md > :first-child { margin-top: 0; } #mvkpkjhzyr .gt_from_md > :last-child { margin-bottom: 0; } #mvkpkjhzyr .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #mvkpkjhzyr .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #mvkpkjhzyr .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #mvkpkjhzyr .gt_row_group_first td { border-top-width: 2px; } #mvkpkjhzyr .gt_row_group_first th { border-top-width: 2px; } #mvkpkjhzyr .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mvkpkjhzyr .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #mvkpkjhzyr .gt_first_summary_row.thick { border-top-width: 2px; } #mvkpkjhzyr .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mvkpkjhzyr .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mvkpkjhzyr .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #mvkpkjhzyr .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #mvkpkjhzyr .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #mvkpkjhzyr .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mvkpkjhzyr .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mvkpkjhzyr .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #mvkpkjhzyr .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mvkpkjhzyr .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #mvkpkjhzyr .gt_left { text-align: left; } #mvkpkjhzyr .gt_center { text-align: center; } #mvkpkjhzyr .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #mvkpkjhzyr .gt_font_normal { font-weight: normal; } #mvkpkjhzyr .gt_font_bold { font-weight: bold; } #mvkpkjhzyr .gt_font_italic { font-style: italic; } #mvkpkjhzyr .gt_super { font-size: 65%; } #mvkpkjhzyr .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #mvkpkjhzyr .gt_asterisk { font-size: 100%; vertical-align: 0; } #mvkpkjhzyr .gt_indent_1 { text-indent: 5px; } #mvkpkjhzyr .gt_indent_2 { text-indent: 10px; } #mvkpkjhzyr .gt_indent_3 { text-indent: 15px; } #mvkpkjhzyr .gt_indent_4 { text-indent: 20px; } #mvkpkjhzyr .gt_indent_5 { text-indent: 25px; } #mvkpkjhzyr .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #mvkpkjhzyr div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Characteristic N = 2,7281 gender     女性 1,284 (47%)     男性 1,444 (53%) age 44 (11) wage 1,792 (1,191) health     1 122 (4.5%)     2 572 (21%)     3 1,274 (47%)     4 579 (21%)     5 181 (6.6%) 1 n (%); Mean (SD) どうやらgtsummary::tbl_summary()はカテゴリ変数の値の種類が少ないと、連続変数ではなくカテゴリ変数のように集計するというありがた迷惑（？）な機能があるようである。ここでオプションとしてtype = list()で連続変数であることを記載することで、この親切を抑制することができる。 piaac_selected2 %&gt;% tbl_summary(statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;), type = list(health ~ &quot;continuous&quot;) ) # health変数を連続変数として表示 #bekzbzkrpf table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #bekzbzkrpf thead, #bekzbzkrpf tbody, #bekzbzkrpf tfoot, #bekzbzkrpf tr, #bekzbzkrpf td, #bekzbzkrpf th { border-style: none; } #bekzbzkrpf p { margin: 0; padding: 0; } #bekzbzkrpf .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #bekzbzkrpf .gt_caption { padding-top: 4px; padding-bottom: 4px; } #bekzbzkrpf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #bekzbzkrpf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #bekzbzkrpf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bekzbzkrpf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bekzbzkrpf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bekzbzkrpf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #bekzbzkrpf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #bekzbzkrpf .gt_column_spanner_outer:first-child { padding-left: 0; } #bekzbzkrpf .gt_column_spanner_outer:last-child { padding-right: 0; } #bekzbzkrpf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #bekzbzkrpf .gt_spanner_row { border-bottom-style: hidden; } #bekzbzkrpf .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #bekzbzkrpf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #bekzbzkrpf .gt_from_md > :first-child { margin-top: 0; } #bekzbzkrpf .gt_from_md > :last-child { margin-bottom: 0; } #bekzbzkrpf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #bekzbzkrpf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #bekzbzkrpf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #bekzbzkrpf .gt_row_group_first td { border-top-width: 2px; } #bekzbzkrpf .gt_row_group_first th { border-top-width: 2px; } #bekzbzkrpf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bekzbzkrpf .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #bekzbzkrpf .gt_first_summary_row.thick { border-top-width: 2px; } #bekzbzkrpf .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bekzbzkrpf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bekzbzkrpf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #bekzbzkrpf .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #bekzbzkrpf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #bekzbzkrpf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bekzbzkrpf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bekzbzkrpf .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #bekzbzkrpf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bekzbzkrpf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #bekzbzkrpf .gt_left { text-align: left; } #bekzbzkrpf .gt_center { text-align: center; } #bekzbzkrpf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #bekzbzkrpf .gt_font_normal { font-weight: normal; } #bekzbzkrpf .gt_font_bold { font-weight: bold; } #bekzbzkrpf .gt_font_italic { font-style: italic; } #bekzbzkrpf .gt_super { font-size: 65%; } #bekzbzkrpf .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #bekzbzkrpf .gt_asterisk { font-size: 100%; vertical-align: 0; } #bekzbzkrpf .gt_indent_1 { text-indent: 5px; } #bekzbzkrpf .gt_indent_2 { text-indent: 10px; } #bekzbzkrpf .gt_indent_3 { text-indent: 15px; } #bekzbzkrpf .gt_indent_4 { text-indent: 20px; } #bekzbzkrpf .gt_indent_5 { text-indent: 25px; } #bekzbzkrpf .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #bekzbzkrpf div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } Characteristic N = 2,7281 gender     女性 1,284 (47%)     男性 1,444 (53%) age 44 (11) wage 1,792 (1,191) health 3.05 (0.93) 1 n (%); Mean (SD) なお、複数の変数を連続変数として表示 する場合には、次のように書く。 piaac_selected2 %&gt;% tbl_summary(statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;), type = list(c(health, wage, age) ~ &quot;continuous&quot;) # health, wage, ageを連続変数として表示 ) "],["tabulate.html", "Chapter 6 2変数の集計 6.1 平均値の比較 6.2 分布の比較 6.3 クロス表 6.4 クロス表を図示する 6.5 散布図 6.6 2変数集計のときのくふう 6.7 結果をファイルに書き出す", " Chapter 6 2変数の集計 本章では、2変数の集計方法を説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 さらに、これまでの章で説明した以下のパッケージを読み込んだ上で、第4章で作成したデータを読み込んでpiaacというデータフレームに入れていることを前提とする。具体的には、以下のコードを実行しておく必要がある。 library(tidyverse) library(gtsummary) library(flextable) piaac &lt;- read_rds(&quot;data/piaac_sample_analytic.rds&quot;) 加えて、第5章で確認したように、ggplotの設定を変更しておくことで見やすいグラフを作ることができる。ここでは以下のコードを実行している。 Macの場合： theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsの場合： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 6.1 平均値の比較 6.1.1 基本 カテゴリ変数の値ごとに連続変数の値を比較したい。たとえば性別ごとに賃金の平均値を比較したいとする。このようなときには、前章で学んだ連続変数を集計する方法に、以下のようにグループに分けるための命令group_by()を付け加えることで、グループ別の集計を行うことができる。 piaac %&gt;% group_by(gender) %&gt;% # genderの値ごとに分けると宣言 summarize(mean = mean(wage)) ## # A tibble: 2 × 2 ## gender mean ## &lt;fct&gt; &lt;dbl&gt; ## 1 女性 1339. ## 2 男性 2196. 前章で説明したときと同様、集計する変数にNAが含まれていると計算ができず、結果はNAとなる。グループ別に集計する場合はgroup_by()で分ける変数にNAが含まれている可能性も考えないといけない。たとえば、父親学歴parenteducごとに集計してみるとどうだろうか。ここでは、平均値だけではなく標準偏差と人数を合わせてチェックしてみよう。 piaac %&gt;% group_by(fathereduc) %&gt;% summarize(mean = mean(wage), sd = sd(wage), n = n()) ## # A tibble: 4 × 4 ## fathereduc mean sd n ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 初等教育 1689. 1181. 912 ## 2 中等教育 1772. 1157. 1120 ## 3 高等教育 1985. 1260. 639 ## 4 &lt;NA&gt; 1680. 984. 57 このように、group_by()で分ける変数にNAが含まれている場合には、それもグループとみなしたうえで集計を行う。これがそのまま残っているとグラフを作ったりするときに面倒になるので、やはりNAはあらかじめ除外しておくとよい。 piaac %&gt;% filter(is.na(fathereduc) == FALSE) %&gt;% # is.na(fathereduc)で、fathereducの値がNAならTRUE, NAでないならFALSEを返す group_by(fathereduc) %&gt;% summarize(mean = mean(wage), sd = sd(wage), n = n()) ## # A tibble: 3 × 4 ## fathereduc mean sd n ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 初等教育 1689. 1181. 912 ## 2 中等教育 1772. 1157. 1120 ## 3 高等教育 1985. 1260. 639 6.1.2 棒グラフによる可視化 平均値の違いを視覚的にみたいときには、棒グラフを作るのがよい。先ほどのようにカテゴリごとに平均値を計算したうえで、geom_col()で棒グラフを作ることができる。 piaac %&gt;% group_by(gender) %&gt;% summarize(mean = mean(wage)) %&gt;% ggplot(aes(x = gender, y = mean)) + # 横軸に性別、縦軸に平均値 geom_col() + labs(x = &quot;性別&quot;, y = &quot;平均賃金&quot;) 6.1.3 複数カテゴリの組み合わせ 複数のカテゴリ変数を組み合わせて平均値を比較したいということもあるだろう。このような場合も、基本は同じ。group_by()の部分に複数の変数を指定することで、カテゴリを組合わせた集計ができる。 piaac %&gt;% group_by(gender, educ) %&gt;% summarize(mean = mean(wage), sd = sd(wage), n = n()) ## `summarise()` has grouped output by &#39;gender&#39;. You can ## override using the `.groups` argument. ## # A tibble: 8 × 5 ## # Groups: gender [2] ## gender educ mean sd n ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 女性 中学 993. 563. 94 ## 2 女性 高校 1158. 633. 466 ## 3 女性 短大高専 1363. 775. 466 ## 4 女性 大学大学院 1749. 921. 258 ## 5 男性 中学 1743. 1288. 132 ## 6 男性 高校 1900. 1045. 482 ## 7 男性 短大高専 1935. 1142. 215 ## 8 男性 大学大学院 2615. 1495. 615 棒グラフを作ることももちろんできる。いくつかのパターンを示しておく。 meandata &lt;- piaac %&gt;% group_by(gender, educ) %&gt;% summarize(mean = mean(wage)) #いったん名前をつけて保存しておく ## `summarise()` has grouped output by &#39;gender&#39;. You can ## override using the `.groups` argument. 学歴で色分けするパターン： meandata %&gt;% ggplot(aes(x = gender, y = mean, fill = educ)) + # fillで色分けする変数を指定 geom_col(position = &quot;dodge&quot;) + # position = &quot;dodge&quot;とすることで棒を重ねずに表示する labs(x = &quot;性別&quot;, y = &quot;平均賃金&quot;, fill = &quot;学歴&quot;) 性別で色分けするパターン： meandata %&gt;% ggplot(aes(x = educ, y = mean, fill = gender)) + geom_col(position = &quot;dodge&quot;) + labs(x = &quot;学歴&quot;, y = &quot;平均賃金&quot;, fill = &quot;性別&quot;) また、グラフそのものを分割するという方法も考えられる。facet_grid()を使うことで、指定した変数でグラフを分割することができる。 meandata %&gt;% ggplot(aes(x = educ, y = mean)) + geom_col() + labs(x = &quot;学歴&quot;, y = &quot;平均賃金&quot;) + facet_grid(~gender) # genderでグラフを分割 なお、2つの変数でグラフを分割する（たとえば、性別・学歴別にグラフを分割する）場合には、facet_grid(gender~educ)とすることで、行に性別、列に学歴というふうに分割することができる。逆に、facet_grid(educ~gender)とすると、行に学歴、列に性別というふうに分割することができる。 6.2 分布の比較 平均値だけではなく、分布そのものを比較することでより全体の違いがわかりやすい事がある。前章ではヒストグラムを使って連続変数の分布をみる方法を紹介した。これをグループ別にそれぞれ書いてみよう。 複数のヒストグラムを重ねるときには、geom_histogram()のなかでposition = \"identity\"と指定する。また、ヒストグラムが重なると片方が見えなくなってしまうので、alpha = 0.5などと指定することで、透明度をつける。alpha = 1がデフォルトで、0に近づくほど透明度が高くなる。 piaac %&gt;% ggplot(aes(x = wage, fill = gender)) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) + labs(fill = &quot;&quot;) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. グループ間で人数が異なると少し比較が難しいかもしれない。このような場合は縦軸を度数ではなく密度（density）にするとよい。aes()の部分にy = ..density..という指定を加えることで、縦軸を密度にすることができる。 密度を使うと、ヒストグラムで囲まれた部分の面積がちょうど1になるように縦軸のスケール（高さ）が決定される。このときの縦軸のスケールのことを指して密度（density）という。 piaac %&gt;% ggplot(aes(x = wage, y = ..density.., fill = gender)) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) + labs(fill = &quot;&quot;) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. カテゴリの数が2つならいいが、たくさんの場合には見にくくなってしまう。そのような場合には先ほど紹介したfacet_grid()をつかって図を分けるのがよいだろう。たとえば、職業ごとに賃金のヒストグラムをつくる場合には、次のようにする。 piaac %&gt;% ggplot(aes(x = wage, y = ..density..)) + geom_histogram() + facet_grid(~occupation) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. 6.3 クロス表 6.3.1 基本 カテゴリ変数の場合は平均値などを計算することはできないので、度数をみることが有効であった。カテゴリ変数の度数分布をグループ間で比べることも可能である。たとえば、親の学歴（父親と母親のうちどちらか高い方の学歴をとった変数）parenteducによって本人の学歴の分布がどの程度異なるのかを知りたいとする。これは、前章で紹介したwith(table())を使うとできる。 piaac %&gt;% with(table(parenteduc, educ)) ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 初等教育 127 337 125 106 ## 中等教育 78 464 332 329 ## 高等教育 21 147 224 438 このように、カテゴリ変数の分布をグループごとに集計した表を指して、クロス集計表、あるいはたんにクロス表という。 もちろんこれだけだと、どの学歴ではどの職業が多いのかというのは一見してすぐにわからない。そこで、行%を計算することで、より学歴ごとの内訳がわかりやすくなる。これを理解するために、まず、行合計と列合計をそれぞれ付け加えた表をみてみよう。addmargins()で、行と列の合計を表に付け加えることができる。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% addmargins() # 行と列の合計を追加 ## educ ## parenteduc 中学 高校 短大高専 大学大学院 Sum ## 初等教育 127 337 125 106 695 ## 中等教育 78 464 332 329 1203 ## 高等教育 21 147 224 438 830 ## Sum 226 948 681 873 2728 それぞれ、親学歴が初等教育、中等教育、高等教育の者がそれぞれ何人いるか、本人学歴が中学、高校、短大高専、大学大学院の者がそれぞれ何人いるかを確認できる。 行割合は、行のカテゴリごとに、列のカテゴリの分布を示したものである。たとえば、親学歴が初等教育の場合は、各セルの値を合計人数695で割り、中等教育の場合は1203で割り……というふうに計算する。with(table())で作成した表に対して prop.table(margin = 1)を実行すると、行割合を求めることができる。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% prop.table(margin = 1) # 行割合を求める ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 初等教育 0.18273381 0.48489209 0.17985612 0.15251799 ## 中等教育 0.06483791 0.38570241 0.27597672 0.27348296 ## 高等教育 0.02530120 0.17710843 0.26987952 0.52771084 たとえば親の学歴が初等教育の場合、本人学歴が大学の者は0.152である。他方で、親の学歴が高等教育の場合は、本人学歴が大学の者は0.527である。したがって、親の学歴が高いほど、本人の学歴も高いことがわかる。 なお、prop.table()内でmarginを指定することで、それぞれ行割合、列割合、総割合を求めることができる。margin = 1とした場合には、上記のように行割合を計算する。margin = 2とした場合には、列割合を計算する。たとえば、本人学歴が中学の場合は、各セルの値を合計人数226で割り……というふうに計算する。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% prop.table(margin = 2) ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 初等教育 0.56194690 0.35548523 0.18355360 0.12142039 ## 中等教育 0.34513274 0.48945148 0.48751836 0.37686140 ## 高等教育 0.09292035 0.15506329 0.32892805 0.50171821 prop.table()内に何も記載しない場合には、総割合を求める。つまり、各セルの値を総人数（2728）で割るということである。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% prop.table() ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 初等教育 0.046554252 0.123533724 0.045821114 0.038856305 ## 中等教育 0.028592375 0.170087977 0.121700880 0.120601173 ## 高等教育 0.007697947 0.053885630 0.082111437 0.160557185 なお、何も指定しない場合には小数点第8位までの結果が表示されるが、実際にはそんなに小さい値は重要ではないことがほとんどである。そこで、見やすいところで値を丸めるのがよい。また、値を100倍することで、百分率（行%、列%、あるいは総%）に直すとさらに見やすいだろう。round()関数を使うことで、小数点以下第何位まで表示するかを指定することができる。round(digits = 3)であれば、小数点第3位まで表示する。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% prop.table(margin = 1) %&gt;% round(digits = 3) * 100 #小数点第3位で丸めて、100倍する（%になおす） ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 初等教育 18.3 48.5 18.0 15.3 ## 中等教育 6.5 38.6 27.6 27.3 ## 高等教育 2.5 17.7 27.0 52.8 6.3.2 カイ2乗検定（補足） クロス表を作成したときにみられた関連（たとえば今回の場合であれば、親の学歴が高いほど子どもの学歴も高い傾向がある = 親の学歴と子どもの学歴に関連がある）がたんなる偶然で生じたものではなく、母集団においても確かに関連があるかどうかを確かめたいとする。これを統計的検定という。 クロス表の場合には、カイ二乗検定という方法を用いて検定を行う。カイ二乗検定では、（もし親の学歴と子どもの学歴の間にまったく関連がなかったとしたら得られるであろう）架空のクロス表と比べて、実際のクロス表で得られた結果が大きくかけ離れていたのであれば、やはり母集団においても親の学歴と子どもの学歴の間には関連があるのだろう（親の学歴と子どもの学歴の間に関連がないという帰無仮説を棄却する）、というふうに考えて関連の有無を判定する。 with(table())で作成したテーブルに対してchisq.test()を実行することでカイ二乗検定を行うことができる。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% chisq.test() ## ## Pearson&#39;s Chi-squared test ## ## data: . ## X-squared = 432.95, df = 6, p-value &lt; 2.2e-16 「p-value」というところをみると、非常に低い値を示していることがわかる13。これはつまり、もし母集団において親の学歴と子どもの学歴の間に全く関連がなかったとしたら、偶然にも今回のデータのようなクロス表が得られる確率は極めて低い、ということを表している。この結果から、「親の学歴と子どもの学歴には関連がない」という帰無仮説を棄却して、たしかに、親の学歴と子どもの学歴には関連があるのだと主張することができる。 6.3.3 きれいなクロス表をつくる - gtsummary::tbl_cross() とはいえ、このクロス表はあまり見やすいものとはいえない。度数（人数）と行%がいずれも表示され、かつ、周辺度数（行合計と列合計）も同時に表示したグラフを簡単に作ることはできないだろうか。このようなときに、前章でも紹介したgtsummaryパッケージに含まれているgtsummary::tbl_cross()関数が役に立つ。 行%を表記する場合は、tbl_cross(data = xx, row = 行にする変数, column = 列にする変数, percent = \"row\")と書く。 piaac %&gt;% tbl_cross(parenteduc, educ, percent = &quot;row&quot;) #jbhzuhdjva table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #jbhzuhdjva thead, #jbhzuhdjva tbody, #jbhzuhdjva tfoot, #jbhzuhdjva tr, #jbhzuhdjva td, #jbhzuhdjva th { border-style: none; } #jbhzuhdjva p { margin: 0; padding: 0; } #jbhzuhdjva .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jbhzuhdjva .gt_caption { padding-top: 4px; padding-bottom: 4px; } #jbhzuhdjva .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jbhzuhdjva .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #jbhzuhdjva .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jbhzuhdjva .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jbhzuhdjva .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jbhzuhdjva .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jbhzuhdjva .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jbhzuhdjva .gt_column_spanner_outer:first-child { padding-left: 0; } #jbhzuhdjva .gt_column_spanner_outer:last-child { padding-right: 0; } #jbhzuhdjva .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jbhzuhdjva .gt_spanner_row { border-bottom-style: hidden; } #jbhzuhdjva .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #jbhzuhdjva .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jbhzuhdjva .gt_from_md > :first-child { margin-top: 0; } #jbhzuhdjva .gt_from_md > :last-child { margin-bottom: 0; } #jbhzuhdjva .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jbhzuhdjva .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #jbhzuhdjva .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #jbhzuhdjva .gt_row_group_first td { border-top-width: 2px; } #jbhzuhdjva .gt_row_group_first th { border-top-width: 2px; } #jbhzuhdjva .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jbhzuhdjva .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #jbhzuhdjva .gt_first_summary_row.thick { border-top-width: 2px; } #jbhzuhdjva .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jbhzuhdjva .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jbhzuhdjva .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jbhzuhdjva .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #jbhzuhdjva .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jbhzuhdjva .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jbhzuhdjva .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jbhzuhdjva .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #jbhzuhdjva .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jbhzuhdjva .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #jbhzuhdjva .gt_left { text-align: left; } #jbhzuhdjva .gt_center { text-align: center; } #jbhzuhdjva .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jbhzuhdjva .gt_font_normal { font-weight: normal; } #jbhzuhdjva .gt_font_bold { font-weight: bold; } #jbhzuhdjva .gt_font_italic { font-style: italic; } #jbhzuhdjva .gt_super { font-size: 65%; } #jbhzuhdjva .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #jbhzuhdjva .gt_asterisk { font-size: 100%; vertical-align: 0; } #jbhzuhdjva .gt_indent_1 { text-indent: 5px; } #jbhzuhdjva .gt_indent_2 { text-indent: 10px; } #jbhzuhdjva .gt_indent_3 { text-indent: 15px; } #jbhzuhdjva .gt_indent_4 { text-indent: 20px; } #jbhzuhdjva .gt_indent_5 { text-indent: 25px; } #jbhzuhdjva .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #jbhzuhdjva div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } educ Total 中学 高校 短大高専 大学大学院 parenteduc     初等教育 127 (18%) 337 (48%) 125 (18%) 106 (15%) 695 (100%)     中等教育 78 (6.5%) 464 (39%) 332 (28%) 329 (27%) 1,203 (100%)     高等教育 21 (2.5%) 147 (18%) 224 (27%) 438 (53%) 830 (100%) Total 226 (8.3%) 948 (35%) 681 (25%) 873 (32%) 2,728 (100%) 値が度数、括弧内が行%を意味している。 このクロス表もいくつかの点で改良の余地がある。以下の3つの点で修正をしてみよう。 parenteduc, educがそれぞれ何を指しているのか、日本語の名前をつけたい：label = list(x ~ \"名前\") 行および列の合計が”Total”と記載されているが、これを「合計」という日本語の名前にしたい：margin_text = \"合計\" piaac %&gt;% tbl_cross(parenteduc, educ, percent = &quot;row&quot;, label = list(parenteduc ~ &quot;親学歴&quot;, educ ~ &quot;本人学歴&quot;), margin_text = &quot;合計&quot;) #xoabapbfdf table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #xoabapbfdf thead, #xoabapbfdf tbody, #xoabapbfdf tfoot, #xoabapbfdf tr, #xoabapbfdf td, #xoabapbfdf th { border-style: none; } #xoabapbfdf p { margin: 0; padding: 0; } #xoabapbfdf .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xoabapbfdf .gt_caption { padding-top: 4px; padding-bottom: 4px; } #xoabapbfdf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xoabapbfdf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #xoabapbfdf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xoabapbfdf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xoabapbfdf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xoabapbfdf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xoabapbfdf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xoabapbfdf .gt_column_spanner_outer:first-child { padding-left: 0; } #xoabapbfdf .gt_column_spanner_outer:last-child { padding-right: 0; } #xoabapbfdf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xoabapbfdf .gt_spanner_row { border-bottom-style: hidden; } #xoabapbfdf .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #xoabapbfdf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xoabapbfdf .gt_from_md > :first-child { margin-top: 0; } #xoabapbfdf .gt_from_md > :last-child { margin-bottom: 0; } #xoabapbfdf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xoabapbfdf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #xoabapbfdf .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #xoabapbfdf .gt_row_group_first td { border-top-width: 2px; } #xoabapbfdf .gt_row_group_first th { border-top-width: 2px; } #xoabapbfdf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xoabapbfdf .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #xoabapbfdf .gt_first_summary_row.thick { border-top-width: 2px; } #xoabapbfdf .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xoabapbfdf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xoabapbfdf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xoabapbfdf .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #xoabapbfdf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xoabapbfdf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xoabapbfdf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xoabapbfdf .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xoabapbfdf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xoabapbfdf .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xoabapbfdf .gt_left { text-align: left; } #xoabapbfdf .gt_center { text-align: center; } #xoabapbfdf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xoabapbfdf .gt_font_normal { font-weight: normal; } #xoabapbfdf .gt_font_bold { font-weight: bold; } #xoabapbfdf .gt_font_italic { font-style: italic; } #xoabapbfdf .gt_super { font-size: 65%; } #xoabapbfdf .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #xoabapbfdf .gt_asterisk { font-size: 100%; vertical-align: 0; } #xoabapbfdf .gt_indent_1 { text-indent: 5px; } #xoabapbfdf .gt_indent_2 { text-indent: 10px; } #xoabapbfdf .gt_indent_3 { text-indent: 15px; } #xoabapbfdf .gt_indent_4 { text-indent: 20px; } #xoabapbfdf .gt_indent_5 { text-indent: 25px; } #xoabapbfdf .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #xoabapbfdf div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } 本人学歴 合計 中学 高校 短大高専 大学大学院 親学歴     初等教育 127 (18%) 337 (48%) 125 (18%) 106 (15%) 695 (100%)     中等教育 78 (6.5%) 464 (39%) 332 (28%) 329 (27%) 1,203 (100%)     高等教育 21 (2.5%) 147 (18%) 224 (27%) 438 (53%) 830 (100%) 合計 226 (8.3%) 948 (35%) 681 (25%) 873 (32%) 2,728 (100%) これならばそのまま論文に掲載できるくらいきれいな図になっている。もちろんこれもwordファイルに書き出すことができる。この方法については本章最後に紹介する。 with(table())のときと違って、もし変数の値に欠損値（NA）が含まれている場合には、表から自動的に除外されず、tbl_cross()は当該ケースを”Unknown”という行または列として表示する。このようなときには、missing = \"no\"というオプションを加えることで、欠損値を除外したクロス表を出すことができる。 piaac %&gt;% tbl_cross(fathereduc, educ) # Unknownが含まれたクロス表 #gkzqpxfebg table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #gkzqpxfebg thead, #gkzqpxfebg tbody, #gkzqpxfebg tfoot, #gkzqpxfebg tr, #gkzqpxfebg td, #gkzqpxfebg th { border-style: none; } #gkzqpxfebg p { margin: 0; padding: 0; } #gkzqpxfebg .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gkzqpxfebg .gt_caption { padding-top: 4px; padding-bottom: 4px; } #gkzqpxfebg .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gkzqpxfebg .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gkzqpxfebg .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gkzqpxfebg .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gkzqpxfebg .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gkzqpxfebg .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gkzqpxfebg .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gkzqpxfebg .gt_column_spanner_outer:first-child { padding-left: 0; } #gkzqpxfebg .gt_column_spanner_outer:last-child { padding-right: 0; } #gkzqpxfebg .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gkzqpxfebg .gt_spanner_row { border-bottom-style: hidden; } #gkzqpxfebg .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #gkzqpxfebg .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gkzqpxfebg .gt_from_md > :first-child { margin-top: 0; } #gkzqpxfebg .gt_from_md > :last-child { margin-bottom: 0; } #gkzqpxfebg .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gkzqpxfebg .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gkzqpxfebg .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gkzqpxfebg .gt_row_group_first td { border-top-width: 2px; } #gkzqpxfebg .gt_row_group_first th { border-top-width: 2px; } #gkzqpxfebg .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gkzqpxfebg .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gkzqpxfebg .gt_first_summary_row.thick { border-top-width: 2px; } #gkzqpxfebg .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gkzqpxfebg .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gkzqpxfebg .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gkzqpxfebg .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #gkzqpxfebg .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gkzqpxfebg .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gkzqpxfebg .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gkzqpxfebg .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gkzqpxfebg .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gkzqpxfebg .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gkzqpxfebg .gt_left { text-align: left; } #gkzqpxfebg .gt_center { text-align: center; } #gkzqpxfebg .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gkzqpxfebg .gt_font_normal { font-weight: normal; } #gkzqpxfebg .gt_font_bold { font-weight: bold; } #gkzqpxfebg .gt_font_italic { font-style: italic; } #gkzqpxfebg .gt_super { font-size: 65%; } #gkzqpxfebg .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #gkzqpxfebg .gt_asterisk { font-size: 100%; vertical-align: 0; } #gkzqpxfebg .gt_indent_1 { text-indent: 5px; } #gkzqpxfebg .gt_indent_2 { text-indent: 10px; } #gkzqpxfebg .gt_indent_3 { text-indent: 15px; } #gkzqpxfebg .gt_indent_4 { text-indent: 20px; } #gkzqpxfebg .gt_indent_5 { text-indent: 25px; } #gkzqpxfebg .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #gkzqpxfebg div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } educ Total 中学 高校 短大高専 大学大学院 fathereduc     初等教育 141 439 172 160 912     中等教育 66 392 326 336 1,120     高等教育 10 91 172 366 639     Unknown 9 26 11 11 57 Total 226 948 681 873 2,728 piaac %&gt;% tbl_cross(fathereduc, educ, missing = &quot;no&quot;) # Unknownが含まれたクロス表からUnknownを除外 #nwotfgotmo table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #nwotfgotmo thead, #nwotfgotmo tbody, #nwotfgotmo tfoot, #nwotfgotmo tr, #nwotfgotmo td, #nwotfgotmo th { border-style: none; } #nwotfgotmo p { margin: 0; padding: 0; } #nwotfgotmo .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nwotfgotmo .gt_caption { padding-top: 4px; padding-bottom: 4px; } #nwotfgotmo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nwotfgotmo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #nwotfgotmo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nwotfgotmo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nwotfgotmo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nwotfgotmo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nwotfgotmo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nwotfgotmo .gt_column_spanner_outer:first-child { padding-left: 0; } #nwotfgotmo .gt_column_spanner_outer:last-child { padding-right: 0; } #nwotfgotmo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nwotfgotmo .gt_spanner_row { border-bottom-style: hidden; } #nwotfgotmo .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #nwotfgotmo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nwotfgotmo .gt_from_md > :first-child { margin-top: 0; } #nwotfgotmo .gt_from_md > :last-child { margin-bottom: 0; } #nwotfgotmo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nwotfgotmo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #nwotfgotmo .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #nwotfgotmo .gt_row_group_first td { border-top-width: 2px; } #nwotfgotmo .gt_row_group_first th { border-top-width: 2px; } #nwotfgotmo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nwotfgotmo .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #nwotfgotmo .gt_first_summary_row.thick { border-top-width: 2px; } #nwotfgotmo .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nwotfgotmo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nwotfgotmo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nwotfgotmo .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #nwotfgotmo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nwotfgotmo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nwotfgotmo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nwotfgotmo .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nwotfgotmo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nwotfgotmo .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nwotfgotmo .gt_left { text-align: left; } #nwotfgotmo .gt_center { text-align: center; } #nwotfgotmo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nwotfgotmo .gt_font_normal { font-weight: normal; } #nwotfgotmo .gt_font_bold { font-weight: bold; } #nwotfgotmo .gt_font_italic { font-style: italic; } #nwotfgotmo .gt_super { font-size: 65%; } #nwotfgotmo .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #nwotfgotmo .gt_asterisk { font-size: 100%; vertical-align: 0; } #nwotfgotmo .gt_indent_1 { text-indent: 5px; } #nwotfgotmo .gt_indent_2 { text-indent: 10px; } #nwotfgotmo .gt_indent_3 { text-indent: 15px; } #nwotfgotmo .gt_indent_4 { text-indent: 20px; } #nwotfgotmo .gt_indent_5 { text-indent: 25px; } #nwotfgotmo .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #nwotfgotmo div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } educ Total 中学 高校 短大高専 大学大学院 fathereduc     初等教育 141 439 172 160 912     中等教育 66 392 326 336 1,120     高等教育 10 91 172 366 639 Total 217 922 670 862 2,671 6.4 クロス表を図示する 6.4.1 count()を利用する クロス表は数値が多いので、図で表されているとわかりやすいかもしれない。このようなときには、前章で説明したcount()を使うことで、比較的簡単に図をつくることができる。 たとえば、先ほどからみているように、親学歴ごとに対象者本人の学歴の分布を集計して、親学歴によって学歴の分布はどの程度異なっているのかを示した棒グラフを作りたいとしよう。count()の前でグループを分割するgroup_by()を指定しておき、そのうえでcount()すれば、親学歴かつ本人学歴ごとの度数を求めることができる。 piaac %&gt;% group_by(parenteduc) %&gt;% count(educ) ## # A tibble: 12 × 3 ## # Groups: parenteduc [3] ## parenteduc educ n ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 初等教育 中学 127 ## 2 初等教育 高校 337 ## 3 初等教育 短大高専 125 ## 4 初等教育 大学大学院 106 ## 5 中等教育 中学 78 ## 6 中等教育 高校 464 ## 7 中等教育 短大高専 332 ## 8 中等教育 大学大学院 329 ## 9 高等教育 中学 21 ## 10 高等教育 高校 147 ## 11 高等教育 短大高専 224 ## 12 高等教育 大学大学院 438 あとは、グループ（この場合は親学歴）のなかでの割合（すなわち、先ほどからみている行%）を求めて、ggplot()に渡してやるとよい。 table &lt;- piaac %&gt;% group_by(parenteduc) %&gt;% count(educ) %&gt;% mutate(sum = sum(n)) %&gt;% mutate(prop = n / sum) # いったんtableという名前をつけて保存しておく table # 中身を確認 ## # A tibble: 12 × 5 ## # Groups: parenteduc [3] ## parenteduc educ n sum prop ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 初等教育 中学 127 695 0.183 ## 2 初等教育 高校 337 695 0.485 ## 3 初等教育 短大高専 125 695 0.180 ## 4 初等教育 大学大学院 106 695 0.153 ## 5 中等教育 中学 78 1203 0.0648 ## 6 中等教育 高校 464 1203 0.386 ## 7 中等教育 短大高専 332 1203 0.276 ## 8 中等教育 大学大学院 329 1203 0.273 ## 9 高等教育 中学 21 830 0.0253 ## 10 高等教育 高校 147 830 0.177 ## 11 高等教育 短大高専 224 830 0.270 ## 12 高等教育 大学大学院 438 830 0.528 table %&gt;% ggplot(aes(y = prop, x = parenteduc, fill = educ)) + geom_col() + labs(x = &quot;&quot;, y = &quot;割合&quot;, fill = &quot;本人学歴&quot;) 積み上げ棒グラフは各カテゴリの大きさがわかりにくいので、ばらして始点をそろえるほうが見やすいかもしれない。 table %&gt;% ggplot(aes(y = prop, x = parenteduc, fill = educ)) + geom_col(position = &quot;dodge&quot;) + labs(x = &quot;&quot;, y = &quot;割合&quot;, fill = &quot;本人学歴&quot;) 6.4.2 count()の注意点 count()は、該当ケースがない場合にはそのグループを除いて集計してしまう。たとえば、以下のようなクロス表があるとしよう。 piaac %&gt;% filter(age &gt; 60) %&gt;% tbl_cross(parenteduc, educ) #vgthahrtoj table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #vgthahrtoj thead, #vgthahrtoj tbody, #vgthahrtoj tfoot, #vgthahrtoj tr, #vgthahrtoj td, #vgthahrtoj th { border-style: none; } #vgthahrtoj p { margin: 0; padding: 0; } #vgthahrtoj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #vgthahrtoj .gt_caption { padding-top: 4px; padding-bottom: 4px; } #vgthahrtoj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #vgthahrtoj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #vgthahrtoj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #vgthahrtoj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vgthahrtoj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #vgthahrtoj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #vgthahrtoj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #vgthahrtoj .gt_column_spanner_outer:first-child { padding-left: 0; } #vgthahrtoj .gt_column_spanner_outer:last-child { padding-right: 0; } #vgthahrtoj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #vgthahrtoj .gt_spanner_row { border-bottom-style: hidden; } #vgthahrtoj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #vgthahrtoj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #vgthahrtoj .gt_from_md > :first-child { margin-top: 0; } #vgthahrtoj .gt_from_md > :last-child { margin-bottom: 0; } #vgthahrtoj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #vgthahrtoj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #vgthahrtoj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #vgthahrtoj .gt_row_group_first td { border-top-width: 2px; } #vgthahrtoj .gt_row_group_first th { border-top-width: 2px; } #vgthahrtoj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #vgthahrtoj .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #vgthahrtoj .gt_first_summary_row.thick { border-top-width: 2px; } #vgthahrtoj .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vgthahrtoj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #vgthahrtoj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #vgthahrtoj .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #vgthahrtoj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #vgthahrtoj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #vgthahrtoj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #vgthahrtoj .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #vgthahrtoj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #vgthahrtoj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #vgthahrtoj .gt_left { text-align: left; } #vgthahrtoj .gt_center { text-align: center; } #vgthahrtoj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #vgthahrtoj .gt_font_normal { font-weight: normal; } #vgthahrtoj .gt_font_bold { font-weight: bold; } #vgthahrtoj .gt_font_italic { font-style: italic; } #vgthahrtoj .gt_super { font-size: 65%; } #vgthahrtoj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #vgthahrtoj .gt_asterisk { font-size: 100%; vertical-align: 0; } #vgthahrtoj .gt_indent_1 { text-indent: 5px; } #vgthahrtoj .gt_indent_2 { text-indent: 10px; } #vgthahrtoj .gt_indent_3 { text-indent: 15px; } #vgthahrtoj .gt_indent_4 { text-indent: 20px; } #vgthahrtoj .gt_indent_5 { text-indent: 25px; } #vgthahrtoj .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #vgthahrtoj div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } educ Total 中学 高校 短大高専 大学大学院 parenteduc     初等教育 40 57 10 13 120     中等教育 11 23 5 14 53     高等教育 0 8 4 12 24 Total 51 88 19 39 197 このクロス表では、親学歴が高等教育かつ本人が中学卒のケースが一人も存在しない。このような場合、count()を実行すると、親学歴が高等教育かつ本人が中学卒の行が含まれない。 piaac %&gt;% filter(age &gt; 60) %&gt;% group_by(parenteduc) %&gt;% count(educ) ## # A tibble: 11 × 3 ## # Groups: parenteduc [3] ## parenteduc educ n ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 初等教育 中学 40 ## 2 初等教育 高校 57 ## 3 初等教育 短大高専 10 ## 4 初等教育 大学大学院 13 ## 5 中等教育 中学 11 ## 6 中等教育 高校 23 ## 7 中等教育 短大高専 5 ## 8 中等教育 大学大学院 14 ## 9 高等教育 高校 8 ## 10 高等教育 短大高専 4 ## 11 高等教育 大学大学院 12 count()のオプションとして.drop = FALSEを指定すると、該当ケースがない場合にはn = 0を入れて集計してくれる。 piaac %&gt;% filter(age &gt; 60) %&gt;% group_by(parenteduc) %&gt;% count(educ, .drop = FALSE) ## # A tibble: 12 × 3 ## # Groups: parenteduc [3] ## parenteduc educ n ## &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 初等教育 中学 40 ## 2 初等教育 高校 57 ## 3 初等教育 短大高専 10 ## 4 初等教育 大学大学院 13 ## 5 中等教育 中学 11 ## 6 中等教育 高校 23 ## 7 中等教育 短大高専 5 ## 8 中等教育 大学大学院 14 ## 9 高等教育 中学 0 ## 10 高等教育 高校 8 ## 11 高等教育 短大高専 4 ## 12 高等教育 大学大学院 12 6.5 散布図 6.5.1 散布図をみる 連続変数どうしの関係をみたいときには、散布図を使う。散布図を書くときには、geom_point()を使う。サンプルサイズが大きい場合には点がかぶってしまうので、かぶっている箇所がわかりやすいよう、透明度を指定するか、点の形状を変えると良い。shape = 1というオプションをつけると、白抜きの点にできる14。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) 散布図の傾向を表すような直線を引くと、関係がよりわかりやすいだろう。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula = &#39;y ~ x&#39; geom_smooth()というのは、2つの変数の関連の傾向を示す線を描く関数。カッコ内で、どのような線を引くのかを指定する。 method = \"lm\"という部分は、回帰分析により推定される直線を引くという指定を表している。何も書かない場合には、method = \"loess\"（局所回帰）による線が描かれる。 se = FALSEの部分では、係数の標準誤差から計算される95%信頼区間を書かないという指定を表している。何も書かない場合には、信頼区間がプロットされる。 6.5.2 カテゴリごとに散布図を分ける たとえば男性と女性で別々に散布図を書きたいということがあるだろう。このような場合には、facet_grid()を使うか、color =を指定する。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) + facet_grid(~gender) ## `geom_smooth()` using formula = &#39;y ~ x&#39; piaac %&gt;% ggplot(aes(x = age, y = wage, color = gender)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula = &#39;y ~ x&#39; 6.5.3 相関係数 相関係数は以下のように定義される： \\[ r = \\frac{\\textrm{Cov}(x, y)}{\\textrm{Sd}(x)\\textrm{Sd}(y)} = \\frac{\\frac{1}{N} \\sum_{i = 1}^N(x_i - \\overline{x})(y_i - \\overline{y})}{\\sqrt{\\frac{1}{N} \\sum_{i = 1}^N(x_i - \\overline{x})^2}\\sqrt{\\frac{1}{N} \\sum_{i = 1}^N(y_i - \\overline{y})^2}} \\] 相関係数はsummarize()コマンドで計算できる。NAが含まれている場合にはやはり計算結果もNAになってしまうので、前もってNAの行がないかどうかのチェックも忘れずに。 piaac %&gt;% summarize(cor = cor(age, wage)) ## # A tibble: 1 × 1 ## cor ## &lt;dbl&gt; ## 1 0.135 6.6 2変数集計のときのくふう 6.6.1 値が粗い連続変数を扱う 値が粗い連続変数を扱う場合、散布図があまり可視化の役に立たないことがある。例えば、健康状態について尋ねた質問の選択肢に次のように値を与え、高いほど健康であることを示すようにした変数（health）があるとする。 選択肢 調査票上の番号 数値化例 極めて優れている 1 5 大変良い 2 4 良い 3 3 どちらともいえない 4 2 悪い 5 1 年齢が高いほど健康状態が悪くなるだろうというのは容易に予想できるので、年齢を横軸、健康状態を縦軸にとった散布図を書くと右下に点が集まるはずだと思ったが、散布図を書いてみると、点が重なってしまってなんだかよくわからない散布図になってしまう。 piaac %&gt;% ggplot(aes(x = age, y = health)) + geom_point(shape = 1) このような場合はどうしたらよいだろうか？解決策の1つは、平均値の比較のときのように、横軸の変数の値ごとに健康状態の平均値を計算し、それをプロットするという方法がある。 piaac %&gt;% group_by(age) %&gt;% summarize(mean = mean(health)) %&gt;% ggplot(aes(x = age, y = mean)) + geom_point() ただ、この図では人数が少ない年齢層も多い年齢層も同じ大きさの点で描かれてしまっていることが少し不満かもしれない。点の大きさを考慮したい場合には、バブル・プロットを使う。aestheticsのところでsize =を指定することで、点の大きさを変えることができる。ただしその際、scale_size_area(max_size = 5)などというふうに円の面積に関するコマンドを含めないと円の大きさと人数が対応しなくなってしまうため、注意が必要。 piaac %&gt;% group_by(age) %&gt;% summarize(mean = mean(health), n = n()) %&gt;% ggplot(aes(x = age, y = mean, size = n)) + geom_point(shape = 1) + scale_size_area(max_size = 5) 6.6.2 カテゴリが多いクロス表を扱う 学歴によって就いている職業の分布がどのように異なっているかを知りたいとする。このような場合にはクロス表を作る。 piaac %&gt;% tbl_cross(educ, occupation, percent = &quot;row&quot;) #wjbaecwqsc table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #wjbaecwqsc thead, #wjbaecwqsc tbody, #wjbaecwqsc tfoot, #wjbaecwqsc tr, #wjbaecwqsc td, #wjbaecwqsc th { border-style: none; } #wjbaecwqsc p { margin: 0; padding: 0; } #wjbaecwqsc .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #wjbaecwqsc .gt_caption { padding-top: 4px; padding-bottom: 4px; } #wjbaecwqsc .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #wjbaecwqsc .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #wjbaecwqsc .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wjbaecwqsc .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wjbaecwqsc .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wjbaecwqsc .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #wjbaecwqsc .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #wjbaecwqsc .gt_column_spanner_outer:first-child { padding-left: 0; } #wjbaecwqsc .gt_column_spanner_outer:last-child { padding-right: 0; } #wjbaecwqsc .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #wjbaecwqsc .gt_spanner_row { border-bottom-style: hidden; } #wjbaecwqsc .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #wjbaecwqsc .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #wjbaecwqsc .gt_from_md > :first-child { margin-top: 0; } #wjbaecwqsc .gt_from_md > :last-child { margin-bottom: 0; } #wjbaecwqsc .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #wjbaecwqsc .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #wjbaecwqsc .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #wjbaecwqsc .gt_row_group_first td { border-top-width: 2px; } #wjbaecwqsc .gt_row_group_first th { border-top-width: 2px; } #wjbaecwqsc .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wjbaecwqsc .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #wjbaecwqsc .gt_first_summary_row.thick { border-top-width: 2px; } #wjbaecwqsc .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wjbaecwqsc .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wjbaecwqsc .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #wjbaecwqsc .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #wjbaecwqsc .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #wjbaecwqsc .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wjbaecwqsc .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wjbaecwqsc .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #wjbaecwqsc .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wjbaecwqsc .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #wjbaecwqsc .gt_left { text-align: left; } #wjbaecwqsc .gt_center { text-align: center; } #wjbaecwqsc .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #wjbaecwqsc .gt_font_normal { font-weight: normal; } #wjbaecwqsc .gt_font_bold { font-weight: bold; } #wjbaecwqsc .gt_font_italic { font-style: italic; } #wjbaecwqsc .gt_super { font-size: 65%; } #wjbaecwqsc .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #wjbaecwqsc .gt_asterisk { font-size: 100%; vertical-align: 0; } #wjbaecwqsc .gt_indent_1 { text-indent: 5px; } #wjbaecwqsc .gt_indent_2 { text-indent: 10px; } #wjbaecwqsc .gt_indent_3 { text-indent: 15px; } #wjbaecwqsc .gt_indent_4 { text-indent: 20px; } #wjbaecwqsc .gt_indent_5 { text-indent: 25px; } #wjbaecwqsc .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #wjbaecwqsc div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } occupation Total 管理職 専門職 技術職・准専門職 事務補助 サービス・販売 農林漁業 技能工 設備・機械運転・組立 単純作業 educ     中学 7 (3.1%) 2 (0.9%) 12 (5.3%) 18 (8.0%) 48 (21%) 9 (4.0%) 52 (23%) 40 (18%) 38 (17%) 226 (100%)     高校 48 (5.1%) 27 (2.8%) 114 (12%) 177 (19%) 266 (28%) 7 (0.7%) 120 (13%) 125 (13%) 64 (6.8%) 948 (100%)     短大高専 31 (4.6%) 123 (18%) 114 (17%) 121 (18%) 173 (25%) 4 (0.6%) 63 (9.3%) 24 (3.5%) 28 (4.1%) 681 (100%)     大学大学院 133 (15%) 267 (31%) 199 (23%) 123 (14%) 89 (10%) 5 (0.6%) 30 (3.4%) 18 (2.1%) 9 (1.0%) 873 (100%) Total 219 (8.0%) 419 (15%) 439 (16%) 439 (16%) 576 (21%) 25 (0.9%) 265 (9.7%) 207 (7.6%) 139 (5.1%) 2,728 (100%) この表はやや横に大きく、数値も多いため、見にくい表になってしまっているかもしれない。実際、これを積み上げ棒グラフにすると、お世辞にもあまり見やすいとはいえないグラフができあがる。 table &lt;- piaac %&gt;% group_by(educ) %&gt;% count(occupation) %&gt;% mutate(prop = n / sum(n)) table %&gt;% ggplot(aes(x = educ, y = prop, fill = occupation)) + geom_col() + labs(x = &quot;&quot;, y = &quot;&quot;, fill = &quot;&quot;) そこで、学歴ごとにグラフをわけて、職業の分布を書くという方法がある。facet_grid()を使うことで、グラフを分割することができる。 table %&gt;% ggplot(aes(y = prop, x = occupation)) + geom_col() + facet_grid(~educ) + labs(x = &quot;&quot;, y = &quot;割合&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) もう一つの方法は、職業ごとにグラフをわけて、各学歴において当該職業に就いている人の割合を示すという方法である。 table %&gt;% ggplot(aes(y = prop, x = educ)) + geom_col() + facet_grid(~occupation) + labs(x = &quot;&quot;, y = &quot;割合&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) どのように図示するかは、自分がどれだと文章を書きやすいか（何を伝えたいのか）によって決める。 また、このようにカテゴリが多い場合には、そもそもカテゴリをまとめて簡単にするという方法も考えられる。くわしくは、「カテゴリをまとめる」を参照のこと。 6.7 結果をファイルに書き出す 6.7.1 ggplotで作成した図を書き出す 前章の「結果をファイルに書き出す」を参照。 6.7.2 クロス表をwordファイルに書き出す これも基本的な方法は前章の「記述統計の一覧表をwordに書き出す」と同じ。この章ではすでに冒頭で読み込んでおいたが、flextableパッケージを読み込んでおく。 そのうえで、先ほど作成したグループ別の記述統計量の表をwordファイルに書き出したいときには、以下のように%&gt;%演算子でつないで、as_flex_table() %&gt;% save_as_docs(path = \"xxx.docx\")というコマンドを追加する。 piaac %&gt;% tbl_cross(parenteduc, educ, percent = &quot;row&quot;, label = list(parenteduc ~ &quot;親学歴&quot;, educ ~ &quot;本人学歴&quot;), margin_text = &quot;合計&quot;) %&gt;% as_flex_table() %&gt;% save_as_docx(path = &quot;results/tbl_cross.docx&quot;) p-valueは「2.2e-16」という値である。後ろについているe-16というのは、「10のマイナス16乗」を意味する表記である。なので、「2.2e-16」というのは「0.000000000000000022」ということを表している。なお、大きな数字を表記するときには「2.2E+16」という表記をすることもあり、「E+16」という箇所は「10の16乗」を意味する。↩︎ たとえばshape = 20とすると、小さめの黒丸となる。shapeの種類はとてもたくさんあるので、いろいろなものを試してみるとよいだろう。↩︎ "],["regression_basic.html", "Chapter 7 回帰分析の基礎 7.1 回帰分析とは何か 7.2 独立変数がカテゴリ変数の場合 7.3 従属変数が2値のカテゴリ変数（0/1）の場合 7.4 非線形の関連 7.5 回帰分析の結果をきれいに表示する 7.6 結果をファイルに書き出す", " Chapter 7 回帰分析の基礎 本章では、回帰分析の基礎について説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 さらに、これまでの章で説明した以下のパッケージを読み込んだ上で、第4章で作成したデータを読み込んでpiaacというデータフレームに入れていることを前提とする。具体的には、以下のコードを実行しておく必要がある。 library(tidyverse) library(gtsummary) library(flextable) piaac &lt;- read_rds(&quot;data/piaac_sample_analytic.rds&quot;) 第5章で確認したように、ggplotの設定を変更しておくことで見やすいグラフを作ることができる。ここでは以下のコードを実行している。 Macの場合： theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsの場合： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 7.1 回帰分析とは何か 7.1.1 散布図を眺める 数的思考力スコアが高いほど賃金（時給換算）が高いという傾向があるかどうかを知りたいとする。このとき、年齢を横軸、賃金を縦軸とする散布図を書いてみる。 piaac %&gt;% ggplot(aes(x = numeracy, y = wage)) + geom_point(shape = 1) なんとなく、数的思考力スコアが高いほど賃金が高い傾向があるようにみえる。この関係を1つの直線で要約するとしたらどのようになるだろう？この直線を示したのが次の図になる。 piaac %&gt;% ggplot(aes(x = numeracy, y = wage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula = &#39;y ~ x&#39; 7.1.2 回帰式の読み方 このように、2つの変数の関係を\\(y = f(x)\\)というような関数で表現する分析方法を指して、回帰分析 regression analysis/regression model という。とくに、今y軸に置かれている変数 （賃金）は、数的思考力スコアによって説明される変数であるという意味で、被説明変数 explained variableまたは従属変数 dependent variable、x軸に置かれている変数（数的思考力スコア）は、賃金を説明する変数であるという意味で、説明変数 explanatory variableまたは独立変数 independent variableという。 今回の式は、次のようなかたちになる15。 \\[ y = \\beta_0 + \\beta_1x \\] 今の例の場合は、\\(y\\)は賃金、\\(x\\)は年齢である。\\(\\beta_k\\)のことを係数 coefficient といい、なかでもとくに\\(\\beta_0\\)のことを切片 intercept、\\(\\beta_1\\)のことを傾き slope という。傾きは、\\(x\\)が1単位増えると（\\(\\Delta x = 1\\)）に\\(y\\)がどれだけ変化するかを表す。 ここで関心があるのは傾きの係数の値である。これが正であれば、\\(x\\)が高いほど\\(y\\)は高いという正の関係を表すし、負であれば、\\(x\\)が高いほど\\(y\\)は低いという負の関係を表す。絶対値が大きいほど、$x$1単位の変化に対して \\(y\\)がより大きく変わるということを表すので、たんに正か負かというだけでなく、その値も重要である。 今回の場合は係数はどうなるだろうか？線形回帰分析を推定するときのコマンドがlm()である。lm(data = xx, formula = )という書き方になる。formula =の部分は省略しても大丈夫。 lm(data = piaac, formula = wage ~ numeracy) ## ## Call: ## lm(formula = wage ~ numeracy, data = piaac) ## ## Coefficients: ## (Intercept) numeracy ## -521.073 7.849 (Intercept)の部分が切片\\(\\beta_0\\)、numeracyの部分がnumeracyの傾き\\(\\beta_1\\)にそれぞれ対応する。したがって、賃金と年齢の関係は以下の式のように表されるということを意味する： \\[ y = -521.1 + 7.8x \\] 7.1.3 回帰式の決め方：最小二乗法 もちろん、上記の回帰式は散布図をみて直観でえいやっと式の値を決めたのではなく、全体の傾向をもっともよく要約するような係数を推定している。その係数の推定方法を最小二乗法 ordinary least square, OLSという。 最小二乗法の意味は図にするとわかりやすい。例えば、次のような散布図と、そこに引いた直線を考えよう。 このとき、散布図の各点の座標を\\((x_i, y_i)\\)と表すことにしよう。すると、各点のy座標の位置\\(y_i\\)は、（1）回帰直線の式に\\(x_i\\)を当てはめた値と、（2）そこからのずれ（\\(r_i\\)とする）の和として表すことができる。すなわち： \\[ y_i = \\beta_0 + \\beta_1x_{i} + r_i \\] この\\(r_i\\)というのは、散布図の点からx軸に垂線を下ろしたときの、回帰直線との交点までの距離を表している。図で考えると次のようになる。 ずれ\\(r_i\\)のことを、残差（residuals）という。散布図に直線を引く方法はたくさんあるのだが、最小二乗法では、上記の残差の二乗和を最も小さくするような直線が散布図全体の傾向をもっともよく反映する直線だとみなして、切片と傾きのパラメータを推定する。式で書くとつぎのようになる。 \\[ \\sum_{i = 1}^N r_i^2 = \\sum_{i = 1}^N(y_i - (\\beta_0 + \\beta_1x_{i}))^2 \\] この式を最小にするような\\(\\beta_0, \\beta_1\\)を求めるということになる。上式は\\(\\beta_0, \\beta_1\\)に関して下に凸な二次関数であるので、\\(\\beta_0\\)について微分した値と\\(\\beta_1\\)について微分した値が同時に0になるような\\(\\beta_0, \\beta_1\\)というのが、上式を最小にするようなパラメータだ、ということになる。 \\[ \\left\\{ \\begin{align} \\frac{\\partial}{\\partial\\beta_0}\\sum_{i = 1}^N(y_i - (\\beta_0 + \\beta_1x_{i}))^2 &amp;= 0\\\\ \\frac{\\partial}{\\partial\\beta_1}\\sum_{i = 1}^N(y_i - (\\beta_0 + \\beta_1x_{i}))^2 &amp;= 0\\\\ \\end{align} \\right. \\] これより先のくわしい証明は省略するが、いずれにしてもポイントは、回帰直線は「回帰直線と各点とのずれ（残差）の二乗和が最も小さくなるように引かれた線だ」ということである。 7.1.4 母集団における関係の推測 今回分析しているのはあくまで母集団から抽出された標本（サンプル）であり、本当に知りたいのは母集団においても確かに関係があるといえるかどうかである。今回のサンプルにおいて推定された係数は偶然生じたものではなく、母集団においても確かに正であるということはできるのだろうか。 まずはいったん、回帰分析の結果をオブジェクトに格納しよう。 reg_res &lt;- lm(data = piaac, wage ~ numeracy) 結果は、summary()でよびだすことができる。呼び出した結果には、先ほどの疑問に答えるための情報が含まれている。 summary(reg_res) ## ## Call: ## lm(formula = wage ~ numeracy, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1774.0 -716.6 -304.5 373.9 8360.5 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -521.0726 151.8525 -3.431 0.000609 *** ## numeracy 7.8491 0.5098 15.396 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1143 on 2726 degrees of freedom ## Multiple R-squared: 0.08, Adjusted R-squared: 0.07966 ## F-statistic: 237 on 1 and 2726 DF, p-value: &lt; 2.2e-16 1列目のEstimateの列には、先ほどみたように係数の値が表示される。 2列目のStd. Errorの列が標準誤差 standard errorを表し、得られた係数のばらつき（標準偏差）を示している。標準誤差は、次に述べるp値の計算に使われている16。 4列めのPr(&gt;|t|)の列がp値 p-valueを表している。p値は「もし母集団において係数が0であるという帰無仮説が正しいとしたときに、今回のような係数の値となる確率」を表している。この値が十分に低いのならば、帰無仮説を棄却して、たしかに母集団においても係数は0でなさそうだ（正あるいは負だ）、ということを自信をもって主張できるということになる。 numeracyの行のp値は0.001よりずっと低いことがわかる。つまり、母集団において年齢の係数が0であったとしたら、今回のような係数の値が得られる確率はとても低い（0.001 = 0.1%未満）、ということである。 この確率がどれくらい低ければ自信をもって関係があると言えるのか？ということについて、慣習的には、0.05という基準が使われている。Rでは、0.05よりも小さければ（正確には0.01 ≤ p &lt; 0.05）、p値の横に*という印がつく。同じようにして、0.01よりも小さければ（0.001 ≤ p &lt; 0.01）**、0.001よりも小さければ（p &lt; 0.001）、***という印がつく。 このように、「母集団において係数が0であったとしたら、今回のような係数の値が得られる確率は十分に低い（0.05未満である）」ことを慣習的に「統計的に有意」と表記したり「有意差がある」などと表記する。基本的には、統計的に有意でないならば、係数が正であったり負であったりしても、その結果を（母集団においても関係が正だ／負だ、というふうに）強く論じることはできないと考えておけばよい。 7.2 独立変数がカテゴリ変数の場合 7.2.1 2値のカテゴリ 線形回帰分析では、連続変数だけではなく、カテゴリ変数も扱うことができる。その例としてまず、性別によって賃金がどの程度異なるのかを知りたいとする。このとき、（無理やり）散布図を書くと、次のようになる。分布がわかりやすいように点は水平方向に少し散らして表示している。 piaac %&gt;% ggplot(aes(x = gender, y = wage)) + geom_point(shape = 1, position = position_jitter(w = 0.3, h = 0)) + ylim(0, 10000) ここで得られた男性の平均値と女性の平均値をそれぞれ散布図に書き入れてみたのが次の図である。実線が男性の平均値、点線が女性の平均値を表している（コードはやや複雑なので、とくに実行する必要はありません）。 meandata &lt;- piaac %&gt;% group_by(gender) %&gt;% summarize(mean_wage = mean(wage)) piaac %&gt;% ggplot(aes(x = gender, y = wage)) + geom_point(shape = 1, position = position_jitter(w = 0.3, h = 0)) + geom_hline(yintercept = meandata$mean_wage[1], lty = 2, color = &quot;brown1&quot;) + geom_hline(yintercept = meandata$mean_wage[2], color = &quot;deepskyblue&quot;) + annotate(&quot;text&quot;, x = 1.5, y = 1000, label = round(meandata$mean_wage[1], 1), color = &quot;brown1&quot;) + annotate(&quot;text&quot;, x = 1.5, y = 2600, label = round(meandata$mean_wage[2], 1), color = &quot;deepskyblue&quot;) + ylim(0, 10000) いま、男性であれば1、女性であれば0をとる変数\\(x\\)を考えよう。このように、カテゴリ変数のカテゴリを区別するために便宜的に0/1の値を振った変数のことを、ダミー変数 dummy variableという。このとき、性別による賃金の違いを表す回帰式は次のようになる： \\[ y = \\beta_0 + \\beta_1x \\] 回帰式のかたちは先ほどと同じとなる。傾き\\(\\beta_1\\)は、女性（0）とくらべて男性（1）がどの程度賃金が高いのかを示している。実際、この係数を推定してみよう。 piaac &lt;- piaac %&gt;% mutate(male_d = case_when( gender == &quot;男性&quot; ~ 1, gender == &quot;女性&quot; ~ 0 )) reg_res &lt;- lm(data = piaac, wage ~ male_d) summary(reg_res) ## ## Call: ## lm(formula = wage ~ male_d, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1733.1 -612.4 -329.3 368.6 7438.4 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1339.12 31.03 43.16 &lt;2e-16 *** ## male_d 856.38 42.65 20.08 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1112 on 2726 degrees of freedom ## Multiple R-squared: 0.1289, Adjusted R-squared: 0.1285 ## F-statistic: 403.2 on 1 and 2726 DF, p-value: &lt; 2.2e-16 male_dというのが、性別が男性のときに1、女性のときに0をとる変数である。この係数は傾き\\(\\beta_1\\)に対応し、切片（Intercept）は切片\\(\\beta_0\\)に対応する。つまり、推定された式は次のようになる： \\[ y = 1339 + 856x \\] つまり、女性（x = 0）とくらべて男性（x = 1）の賃金は856円高いということを意味している。 この値が、先ほど散布図に示した男性の平均値と女性の平均値の差に一致していることを確認しよう。すなわち、2値のカテゴリ変数を独立変数として用いる場合、傾きの値は、2つのカテゴリの平均値の差を表している。 7.2.2 3値以上のカテゴリ カテゴリが3値以上の場合はどうだろう？これも、基本的には同じふうに考えることができる。 piaac %&gt;% filter(is.na(educ) == FALSE) %&gt;% ggplot(aes(x = educ, y = wage)) + geom_point(shape = 1, position = position_jitter(w = 0.3, h = 0)) 中学卒を基準として、高校卒（高校卒 - 中学卒）、短大高専卒（短大高専卒 - 中学卒）、大学大学院卒（大学大学院卒 - 中学卒）だとどれくらい賃金が高いのかを推定することになる。 piaac &lt;- piaac %&gt;% mutate(educ_d2 = if_else(educ == &quot;高校&quot;, 1, 0)) %&gt;% mutate(educ_d3 = if_else(educ == &quot;短大高専&quot;, 1, 0)) %&gt;% mutate(educ_d4 = if_else(educ == &quot;大学大学院&quot;, 1, 0)) reg_res &lt;- lm(data = piaac, wage ~ educ_d2 + educ_d3 + educ_d4) summary(reg_res) ## ## Call: ## lm(formula = wage ~ educ_d2 + educ_d3 + educ_d4, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1859.1 -690.8 -310.8 387.7 8184.0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1431.36 74.90 19.110 &lt;2e-16 *** ## educ_d2 103.99 83.35 1.248 0.212 ## educ_d3 112.34 86.44 1.300 0.194 ## educ_d4 927.69 84.04 11.039 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1126 on 2724 degrees of freedom ## Multiple R-squared: 0.1072, Adjusted R-squared: 0.1062 ## F-statistic: 109 on 3 and 2724 DF, p-value: &lt; 2.2e-16 それぞれの係数は、基準カテゴリ（今回なら中学卒）と比べて、それぞれ高校、短大高専、大学大学院卒だとどれくらい賃金の平均値が高いのかを表している。標準誤差やp値のみかたについてはどれも同じ。 7.2.3 変数がfactorであれば自動でカテゴリとして投入される 先ほどまでは、0または1の値が入ったダミー変数を自分で作っていた。独立変数の型がカテゴリの場合には、Rが自動で先ほどのようなダミー変数を勝手に作って投入してくれる。 reg_res &lt;- lm(data = piaac, wage ~ educ) summary(reg_res) ## ## Call: ## lm(formula = wage ~ educ, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1859.1 -690.8 -310.8 387.7 8184.0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1431.36 74.90 19.110 &lt;2e-16 *** ## educ高校 103.99 83.35 1.248 0.212 ## educ短大高専 112.34 86.44 1.300 0.194 ## educ大学大学院 927.69 84.04 11.039 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1126 on 2724 degrees of freedom ## Multiple R-squared: 0.1072, Adjusted R-squared: 0.1062 ## F-statistic: 109 on 3 and 2724 DF, p-value: &lt; 2.2e-16 それぞれ、「educ高校」は中学卒と比べて高校卒の賃金はいくら高いか、「educ短大高専」は中学卒と比べて短大高専卒の賃金はいくら高いか、「educ大学大学院」は中学卒と比べて大学大学院卒の賃金はいくら高いか、をそれぞれ表す。 ただし、基準カテゴリは一番最初のものが勝手に選ばれるので、たとえば高校を基準にしてその他を比較したい、と思ったときには、自分でカテゴリの順序を変更しておく必要がある。 piaac &lt;- piaac %&gt;% mutate(educ_reorder = factor(educ, levels = c(&quot;高校&quot;, &quot;中学&quot;, &quot;短大高専&quot;, &quot;大学大学院&quot;), labels = c(&quot;高校&quot;, &quot;中学&quot;, &quot;短大高専&quot;, &quot;大学大学院&quot;))) # factor関数を使ってカテゴリの順序を並び替え reg_res &lt;- lm(data = piaac, wage ~ educ_reorder) summary(reg_res) ## ## Call: ## lm(formula = wage ~ educ_reorder, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1859.1 -690.8 -310.8 387.7 8184.0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1535.357 36.571 41.983 &lt;2e-16 *** ## educ_reorder中学 -103.992 83.352 -1.248 0.212 ## educ_reorder短大高専 8.351 56.562 0.148 0.883 ## educ_reorder大学大学院 823.702 52.818 15.595 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1126 on 2724 degrees of freedom ## Multiple R-squared: 0.1072, Adjusted R-squared: 0.1062 ## F-statistic: 109 on 3 and 2724 DF, p-value: &lt; 2.2e-16 7.3 従属変数が2値のカテゴリ変数（0/1）の場合 7.3.1 クロス集計と比較しながら結果をみる たとえば、性別によってこの1年間に職場での訓練（OJTとよぶ）を受ける率が異なっているかどうかを知りたいとする。これも今までと同じように回帰分析の枠組みで扱うことができる。 まず、OJTを受けたならば1、受けていないならば0を取る変数があるとする。これを性別ごとに比較したクロス集計表を作ってみよう。 piaac %&gt;% with(table(gender, ojt)) ## ojt ## gender 0 1 ## 女性 865 419 ## 男性 855 589 クロス集計表の行割合を見てみよう。 piaac %&gt;% with(table(gender, ojt)) %&gt;% prop.table(margin = 1) %&gt;% round(digits = 3) ## ojt ## gender 0 1 ## 女性 0.674 0.326 ## 男性 0.592 0.408 行割合をみると、女性全体のうちOJTを受けている（Y = 1）割合は0.326（32.6%）であるのに対して、男性全体のうちOJTを受けている（Y = 1）割合は0.408（40.8%）であるということがわかる。 次に、このojtという変数の平均値を計算してみよう。するとどのようになるだろうか？まず、女性について平均値を計算するときの式は次のとおり： \\[ \\frac{865 \\times 0 + 419 \\times 1}{865 + 419} = 0.326 \\] 同じようにして、男性の平均値は次のように計算できる。 \\[ \\frac{855 \\times 0 + 589 \\times 1}{855 + 589} = 0.408 \\] これらの値は、上記クロス表の「1」のほうに示されている行割合、すなわち「OJTを受けた人の割合」に一致している。つまり、ある二値変数（0/1）の平均値をとると、その二値変数が1を取る割合（行割合）の値と一致するということである。 このことを図にして表してみよう。 piaac %&gt;% group_by(gender) %&gt;% summarize(mean_ojt = mean(ojt)) %&gt;% ggplot(aes(x = gender, y = mean_ojt)) + geom_col() + geom_text(aes(label = round(mean_ojt, digit = 3)), vjust = -1) + ylim(0, 1) + theme(legend.position = &quot;none&quot;) 棒グラフの高さが異なることから分かる通り、男性は女性とくらべてOJTを受けた割合が0.082（8.2%ポイント）17高い。 では、ojtを従属変数、性別を独立変数とする回帰式を推定してみよう。 reg_res &lt;- lm(data = piaac, ojt ~ gender) summary(reg_res) ## ## Call: ## lm(formula = ojt ~ gender, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.4079 -0.4079 -0.3263 0.5921 0.6737 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.32632 0.01343 24.30 &lt; 2e-16 *** ## gender男性 0.08157 0.01846 4.42 1.03e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4811 on 2726 degrees of freedom ## Multiple R-squared: 0.007116, Adjusted R-squared: 0.006751 ## F-statistic: 19.54 on 1 and 2726 DF, p-value: 1.026e-05 「gender男性」と書かれている行が、女性と比べて男性が何ポイントOJTを受ける割合が高いのかを示している。この値は、ちょうど先ほどの棒グラフの男性と女性の割合（平均値）の差に一致している。つまり、回帰分析の係数は、男性と女性で、平均値（割合）にどの程度差があるのかを示しているのである。これは、これまでの連続変数を従属変数とするときの回帰分析と同じである。 係数の見方（プラスであると多い、マイナスであると少ない）も、標準誤差も、p値も、その解釈はすべて今までの回帰分析と同じとなる。 7.3.2 散布図と比較しながら結果をみる もちろん、年齢などの連続変数を独立変数（X）として使うこともできる。たとえば、横軸に年齢、縦軸にOJTをとった散布図を考えてみよう。ここでは重なっているほど点が大きくなるように調整している。 piaac %&gt;% group_by(age, ojt) %&gt;% summarize(n = n()) %&gt;% ggplot(aes(x = age, y = ojt)) + geom_point(aes(size = n), shape = 1) + scale_size(range = c(1, 10)) + geom_smooth(aes(weight = n), method = &quot;lm&quot;, se = FALSE) + theme(legend.position = &quot;none&quot;) ## `summarise()` has grouped output by &#39;age&#39;. You can ## override using the `.groups` argument. ## `geom_smooth()` using formula = &#39;y ~ x&#39; 縦軸のOJTは0または1しかとらないので、点はy = 1またはy = 0の位置のどちらかに描かれる。推定される回帰式は、この散布図全体の傾向を要約するような線として表される。実際に、回帰式を推定してみよう。 reg_res &lt;- lm(data = piaac, ojt ~ age) summary(reg_res) ## ## Call: ## lm(formula = ojt ~ age, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.4416 -0.3842 -0.3230 0.6043 0.7076 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.5372265 0.0383580 14.006 &lt; 2e-16 *** ## age -0.0038253 0.0008492 -4.504 6.94e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4811 on 2726 degrees of freedom ## Multiple R-squared: 0.007388, Adjusted R-squared: 0.007024 ## F-statistic: 20.29 on 1 and 2726 DF, p-value: 6.936e-06 年齢（age）の係数はマイナスであり、年齢が1歳高いと、OJTを受けている割合が0.004ポイント（0.4 %ポイント）低いということがわかる。 7.3.3 注意点 分析に先立ち、従属変数とする2値のカテゴリ変数のどちらを1とし、どちらを0とするかは自分であらかじめ決めておいて、数値型に変換しておく必要がある（カテゴリ変数のままでは分析できない）。 なお、従属変数が2値のカテゴリ変数の場合にはロジスティック回帰分析（ロジットモデル）やプロビットモデルといった方法がよく使われる。これについてはロジスティック回帰分析の章で解説する。ただし、今紹介した（ふつうの）回帰分析と比べるとやや解釈が難しい。また上記の（ふつうの）回帰分析を使っても、たいていの場合はそんなに結論が変わるわけではないので、学部レベルではこれで十分である。もちろん、関心のある人は積極的にチャレンジしてみるとよいだろう。 7.4 非線形の関連 7.4.1 対数変換 用いる変数が正規分布から乖離しているときや、変数の単位に依存せず効果の大きさを測定したいとき、あるいは、%での変化に関心がある場合には、変数を対数変換することを検討するとよい。具体的には、次のような場面である： 高卒と比べて大卒であると、（実額ではなく）何%くらい賃金が高いのかを知りたい。 女性が男性と比べて何%賃金が低いのかを、通貨単位が異なる国（たとえば、日本と韓国）でそれぞれ調べて、どちらのほうがどれくらい男女の賃金格差が大きいのかを知りたい。 社会科学系では、底がeの対数（自然対数）を取ることで変数を対数変換することが多い。Rではlog()という関数で自然対数変換ができる。次のようにして、賃金を対数変換した変数を作ることができる。 piaac &lt;- piaac %&gt;% mutate(logwage = log(wage)) 2つの変数の分布を比較してみよう。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. piaac %&gt;% ggplot(aes(x = logwage)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. 対数変換した後の変数は、対数変換する前の変数よりも正規分布に近づいていることがわかる。 7.4.1.1 自然対数と対数関数について \\[ e = \\lim_{t\\rightarrow0}(1 + t)^{\\frac{1}{t}} \\simeq 2.7182818\\cdots \\] で定義される数のことをネイピア数といい、\\(e\\)と書く（円周率\\(\\pi\\)みたいな感じ）。慣習上、ネイピア数\\(e\\)を底とする指数\\(e^x\\)を\\(\\exp(x)\\)と表記したりする。 \\(\\log_a x\\)のように表される関数を対数関数といい、次のように定義される： \\[ a^y = x \\leftrightarrow y = \\log_a x \\] とくに底が\\(e\\)の場合を自然対数という。社会科学系の文脈ではこのときには底を省略して、\\(e^y = x \\leftrightarrow y = \\log(x)\\)というふうに書かれることが多い。 7.4.1.2 対数を使った場合の回帰分析 先にみたように、数的思考力スコアと対数賃金の散布図を書くと、次のようになる。 piaac %&gt;% ggplot(aes(x = numeracy, y = logwage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula = &#39;y ~ x&#39; 対数変換した後の賃金を従属変数として、回帰分析を推定してみよう。 reg_res &lt;- lm(data = piaac, logwage ~ numeracy) summary(reg_res) ## ## Call: ## lm(formula = logwage ~ numeracy, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.31652 -0.39318 -0.05807 0.33222 2.14472 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.0351509 0.0688414 87.67 &lt;2e-16 *** ## numeracy 0.0043809 0.0002311 18.95 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.518 on 2726 degrees of freedom ## Multiple R-squared: 0.1164, Adjusted R-squared: 0.1161 ## F-statistic: 359.3 on 1 and 2726 DF, p-value: &lt; 2.2e-16 なお、対数変換した変数を新たに作成しなくても、次のように書くことで、回帰分析のコード中で対数変換を行う事ができる。以下でも同じ結果を得ることができる（結果は省略）。 lm(data = piaac, log(wage) ~ numeracy) numeracyの係数は、数的思考力スコアが1ポイント高いと、対数賃金が0.004ポイント高いということを意味する。 7.4.1.3 従属変数の対数を取ったときの解釈 対数賃金がxxxポイントだけ高いというのは、実質的にはどのような意味なのだろうか？ まず、一般的な以下のような単回帰分析について考える。 \\[ y = \\beta_0 + \\beta_1x \\] このとき、\\(x\\)が1単位増えたとき（\\(\\Delta x = 1\\)）の\\(y\\)の変化分を\\(\\Delta y\\)とすると、先の式は次のようになる。 \\[ \\begin{align} y + \\Delta y &amp;= \\beta_0 + \\beta_1 (x + 1) \\\\ y + \\Delta y &amp;= (\\beta_0 + \\beta_1 x) + \\beta_1 \\\\ \\Delta y &amp;= \\beta_1 \\\\ \\end{align} \\] このとき、\\(\\Delta y = \\beta_1\\)となる。すなわち、\\(x\\)が1単位増えたときには、\\(y\\)が\\(\\beta_1\\)だけ変化する、ということを表している。 では、次のような式のときはどうだろうか？ \\[ \\log(y) = \\beta_0 + \\beta_1x \\] 同じように、\\(x\\)が1単位増えたとき（\\(\\Delta x = 1\\)）の\\(y\\)の変化分を\\(\\Delta y\\)と表すことにする。すると、 \\[ \\begin{aligned} \\log(y + \\Delta y) &amp;= \\beta_0 + \\beta_1(x + 1) \\\\ y + \\Delta y &amp;= \\exp(\\beta_0 + \\beta_1(x + 1)) \\\\ y + \\Delta y &amp;= \\exp(\\beta_1)\\exp(\\beta_0 + \\beta_1x) \\\\ y + \\Delta y &amp;= \\exp(\\beta_1)y \\end{aligned} \\] となり、\\(x\\)が1単位増えたときに\\(y\\)は\\(\\exp(\\beta_1)\\)倍になる、ということがわかる。いくつか実際の値を計算してみると、次のようになる： \\[ \\begin{align} \\beta_1 &amp;= 0.1 \\leftrightarrow \\exp(\\beta_1) \\simeq 1.105 \\\\ \\beta_1 &amp;= 0 \\leftrightarrow \\exp(\\beta_1) \\simeq 1 \\\\ \\beta_1 &amp;= -0.1 \\leftrightarrow \\exp(\\beta_1) \\simeq 0.905 \\\\ \\end{align} \\] 例えば次のように対数賃金を従属変数、性別を独立変数とする回帰分析を推定してみよう。 reg_res &lt;- lm(data = piaac, logwage ~ gender) summary(reg_res) ## ## Call: ## lm(formula = logwage ~ gender, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.40835 -0.35529 -0.07757 0.32873 1.90992 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 7.08073 0.01395 507.5 &lt;2e-16 *** ## gender男性 0.46412 0.01918 24.2 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5 on 2726 degrees of freedom ## Multiple R-squared: 0.1769, Adjusted R-squared: 0.1766 ## F-statistic: 585.7 on 1 and 2726 DF, p-value: &lt; 2.2e-16 gender男性の係数の値は0.464である。この係数が実際にどれくらいの違いを表しているかを計算するときには、次のようにする： exp(0.46412) ## [1] 1.590614 すなわち、男性であると、女性と比べて賃金が1.59倍高い = 男性は女性と比べて賃金が59%高い、ということを表す。 7.4.1.4 従属変数または独立変数を対数変換したときの解釈 従属変数だけではなく、独立変数についても対数を取ることができる。\\(\\beta_1\\)がある程度小さい場合、それぞれ解釈は次のようになる： モデル 解釈 \\(y = \\beta_0 + \\beta_1x\\) \\(x\\)が1単位増えると、\\(y\\)が\\(\\beta_1\\)増える \\(\\log(y) = \\beta_0 + \\beta_1x\\) \\(x\\)が1単位増えると、\\(y\\)が\\(100 \\times \\beta_1\\)%増える \\(y = \\beta_0 + \\beta_1\\log(x)\\) \\(x\\)が1%増えると、\\(y\\)が\\(\\beta_1 / 100\\)増える \\(\\log(y) = \\beta_0 + \\beta_1\\log(x)\\) \\(x\\)が1%増えると、\\(y\\)が\\(\\beta_1\\)%増える 7.4.2 2次関数型 年齢と賃金がどのような関係にあるかを考えてみたい。年齢と賃金の関係は、たんに年齢が上がると賃金が上がるという線形の関連ではなく、年齢が上がるほど賃金の上昇が緩やかになっていって、ある程度年齢が上がると関係が反転する（負の関係になる）ということが考えられる。2次関数を使うことで、こうした関係をうまく表現できる。 \\[ y = \\beta_0 + \\beta_1x + \\beta_2x^2 \\] 7.4.2.1 係数の読み方 このような場合、\\(x\\)が1単位増えたときの\\(y\\)の増加量は、もともとの\\(x\\)の値によって異なる。\\(x\\)が1単位増えたときの\\(y\\)の変化分を\\(\\Delta y\\)と表すとすると、 \\[ \\begin{align} y + \\Delta y &amp;= \\beta_0 + \\beta_1(x + 1) + \\beta_2 (x + 1)^2 \\\\ &amp;= (\\beta_0 + \\beta_1x + \\beta_2x^2) + \\beta_1 + (2x + 1)\\beta_2 \\\\ \\Delta y &amp;= \\beta_1 + (2x + 1)\\beta_2 \\end{align} \\] となる。すなわち、\\(x\\)が1単位増えたときの\\(y\\)の増加量は、もともとの\\(x\\)の値によって異なるということになる。回帰式の形状や結果の読み方は次のようになる： \\(\\beta_2\\)の係数 解釈 形状 \\(\\beta_2 &lt; 0\\) xが大きいほど、x1単位の増加に対するyの増加量は小さい \\(-\\beta_1/2\\beta_2\\)を底とする、上に凸な2次関数 \\(\\beta_2 &gt; 0\\) xが大きいほど、x1単位の増加に対するyの増加量は大きい \\(-\\beta_1/2\\beta_2\\)を底とする、下に凸な2次関数 7.4.2.2 変数の作成と結果の解釈 年齢を2乗した変数は次のように作成できる。 piaac &lt;- piaac %&gt;% mutate(age_sq = age^2) 回帰分析を行ってみる： reg_res &lt;- lm(data = piaac, logwage ~ age + age_sq) summary(reg_res) ## ## Call: ## lm(formula = logwage ~ age + age_sq, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.28557 -0.44715 -0.03263 0.36524 1.95383 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.636e+00 1.762e-01 31.98 &lt;2e-16 *** ## age 7.609e-02 8.226e-03 9.25 &lt;2e-16 *** ## age_sq -8.064e-04 9.185e-05 -8.78 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5415 on 2725 degrees of freedom ## Multiple R-squared: 0.03465, Adjusted R-squared: 0.03394 ## F-statistic: 48.91 on 2 and 2725 DF, p-value: &lt; 2.2e-16 二次曲線の場合、個々の係数だけではあまり解釈ができない。そこで、散布図と回帰直線（曲線）をみてみよう： piaac %&gt;% ggplot(aes(x = age, y = logwage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, formula = y ~ poly(x, 2), se = FALSE) このように、若いときには年齢による賃金の上昇は大きいけれども、その上昇幅は年齢が高くなるほど小さくなり、高い年齢ではむしろ負に転ずることがわかる。年齢についてはこのように二次曲線をつかうことはしばしば有効である。 なお2乗した変数を別に作らなくても、回帰分析のコード中で2乗した変数を作成することができる。（結果は省略） lm(data = piaac, log(wage) ~ age + I(age^2)) 7.5 回帰分析の結果をきれいに表示する 先ほどの回帰分析の結果をもう少しきれいに表示したいと思うかもしれない。このようなときに活躍するのがmodelsummaryパッケージである。 library(modelsummary) では、実際に使ってみよう。modelsummary(list(model))（modelという部分には、すでに保存しておいた回帰分析の結果を入れる）というのが最低限のコマンド。 reg_res &lt;- lm(data = piaac, log(wage) ~ age) modelsummary(list(reg_res)) /* tinytable css entries after */ .table td.tinytable_css_wlfgk7ur50wkxzghvcu4, .table th.tinytable_css_wlfgk7ur50wkxzghvcu4 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_18l3ppyaf1438xeddwc8, .table th.tinytable_css_18l3ppyaf1438xeddwc8 { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_kv4pkdg1q6stwsnf26x9, .table th.tinytable_css_kv4pkdg1q6stwsnf26x9 { text-align: center; } .table td.tinytable_css_vcn7raikljg3vwm8xa2f, .table th.tinytable_css_vcn7raikljg3vwm8xa2f { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_nva2d6xw86albof6v266, .table th.tinytable_css_nva2d6xw86albof6v266 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2gplrpr8f5xvokc12pfa, .table th.tinytable_css_2gplrpr8f5xvokc12pfa { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_qv53jnqs3zn6lybfiu5q, .table th.tinytable_css_qv53jnqs3zn6lybfiu5q { text-align: left; } .table td.tinytable_css_pksnoy7kt52clzz3mplv, .table th.tinytable_css_pksnoy7kt52clzz3mplv { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) (Intercept) 7.136 (0.044) age 0.004 (0.001) Num.Obs. 2728 R2 0.007 R2 Adj. 0.007 AIC 44447.2 BIC 44464.9 Log.Lik. -2234.183 RMSE 0.55 よく論文でみる感じのきれいな見た目になる。とはいえ、まだたとえば変数名が何を指しているかなどは改善の余地がある。オプションを色々指定することで、よりわかりやすい表が作れる。 modelsummary(list(reg_res), stars = TRUE, # 有意水準を示す印をつける coef_map = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;), # 各変数に名前をつける gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;) # サンプルサイズと決定係数のみ記載する ) /* tinytable css entries after */ .table td.tinytable_css_8wz854cp652d3dp36pxr, .table th.tinytable_css_8wz854cp652d3dp36pxr { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ffi8dcd4bftuu2r01r67, .table th.tinytable_css_ffi8dcd4bftuu2r01r67 { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_5i3fdijopr95dckzv5pk, .table th.tinytable_css_5i3fdijopr95dckzv5pk { text-align: center; } .table td.tinytable_css_01vob9hunmtowc8rxf6q, .table th.tinytable_css_01vob9hunmtowc8rxf6q { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_u8cl0li8gxsy2kfxfkhi, .table th.tinytable_css_u8cl0li8gxsy2kfxfkhi { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_12xtzkat0nzn7mmbope6, .table th.tinytable_css_12xtzkat0nzn7mmbope6 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_cqt1hh3uyqbf9f28jes2, .table th.tinytable_css_cqt1hh3uyqbf9f28jes2 { text-align: left; } .table td.tinytable_css_3pyvv1413basqucank68, .table th.tinytable_css_3pyvv1413basqucank68 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) + p 切片 7.136*** (0.044) 年齢 0.004*** (0.001) Num.Obs. 2728 R2 0.007 このように各変数がそれぞれ何の変数なのか名前をつけてやると、読む人にとって見やすい表になる。 7.6 結果をファイルに書き出す 7.6.1 Wordファイルに書き出す 第5章、第6章と同様、回帰分析についても結果をWordに書き出すことができる。flextableパッケージを読み込んでおいた状態で（この章では冒頭ですでに読み込んでおいた）、上記のmodelsummary()のコードにoutput = \"xxx.docx\"というようなオプションをつけることで、Wordファイルに結果を書き出すことができる。 library(flextable) # もし読み込んでいない場合は実行 modelsummary(list(reg_res), stars = TRUE, # 有意水準を示す印をつける coef_map = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;), # 各変数に名前をつける gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;), # サンプルサイズと決定係数のみ記載する output = &quot;results/regression.docx&quot;) # 出力先のファイル名をつける as_flex_table() %&gt;% save_as_docs(path = \"xxx.docx\")を使っていた第5章、第6章とは少し違う点に注意。多少の手直しが必要かもしれないが、きれいな回帰分析の表をWordファイルに書き出すことができる。 Wordファイルに書き出した場合、変数の値に日本語が含まれているときれいな表にならないことがあるという問題が報告されている（2024-11-27）。この原因が何に由来するのかよくわからないが、このような場合には、Wordファイルではなくて別の形式のファイルに書き出すとうまくいくことがある。以下では、3つのパターンについて説明する。 7.6.2 Excelファイルに書き出す Excelファイルに書き出したい場合は、末尾の「.docx」の部分を「.xlsx」に変えればよい。ただし、Excelファイルの場合は少し余分な列などが入ってしまうので、適宜手直しが必要となる。 Excelファイルに書き出す場合には、事前にopenxlsxパッケージをインストールしておく必要がある。一度インストールしたら、以降は上記パッケージをインストールする必要はない。 install.packages(&quot;openxlsx&quot;) あとは、次の通り実行する。 modelsummary(list(reg_res), stars = TRUE, # 有意水準を示す印をつける coef_map = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;), # 各変数に名前をつける gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;), # サンプルサイズと決定係数のみ記載する output = &quot;results/regression.xlsx&quot;) # 出力先のファイル名をつける（xlsx） 7.6.3 PowerPointファイルに書き出す 結果をPowerPointに書き出すこともできるようだ。この場合は、末尾の拡張子を「.pptx」に変えるとよい。 library(flextable) # もし読み込んでいない場合は実行 modelsummary(list(reg_res), stars = TRUE, # 有意水準を示す印をつける coef_map = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;), # 各変数に名前をつける gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;), # サンプルサイズと決定係数のみ記載する output = &quot;results/regression.pptx&quot;) # 出力先のファイル名をつける（pptx） 7.6.4 rtfファイルに書き出す rtf（リッチテキスト）形式に書き出す。このファイルをWordで開くと、比較的きれいな形式の見た目になっていることが多い。末尾の拡張子を「.rtf」に変えるとできる。 library(flextable) # もし読み込んでいない場合は実行 modelsummary(list(reg_res), stars = TRUE, # 有意水準を示す印をつける coef_map = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;), # 各変数に名前をつける gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;), # サンプルサイズと決定係数のみ記載する output = &quot;results/regression.rtf&quot;) # 出力先のファイル名をつける（rtf） 今回のような場合を線形回帰分析 Linear regressionということもある。↩︎ 正確には、係数 - 0を標準誤差で割ることでt値を求める。自由度df（N - 推定した係数の個数）のt分布のもとで、t値の絶対値が得られたt値よりも極端な値になる確率を計算したものがここで表示されているp値である。↩︎ %どうしの差を指すときには「%ポイント」という表現を使う。たとえば、2020年1月の日本における完全失業率は2.4%であったが、同年12月には3.0%に上昇した。このときには「0.6%上昇した」というのではなく「0.6%ポイント上昇した」という。なぜなら、「0.6%上昇した」というと、2.4%を基準にしてその0.6%分（つまり、2.4×0.006 = 0.0144 %）だけ上昇したということなのか、それとも、2.4%に 0.6%を足した値になったということなのかがわかりにくいからである。↩︎ "],["regression_advanced.html", "Chapter 8 回帰分析の活用 8.1 重回帰分析 8.2 交絡要因の統制 8.3 媒介分析／要因分解 8.4 回帰分析の実際 8.5 回帰分析でありがちな困りごとへの対処 8.6 結果をファイルに書き出す", " Chapter 8 回帰分析の活用 本章では、前章で学んだ回帰分析を発展させて、複数の独立変数を扱う方法について説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 さらに、これまでの章で説明した以下のパッケージを読み込んだ上で、第4章で作成したデータを読み込んでpiaacというデータフレームに入れていることを前提とする。具体的には、以下のコードを実行しておく必要がある。 library(tidyverse) library(gtsummary) library(flextable) library(modelsummary) piaac &lt;- read_rds(&quot;data/piaac_sample_analytic.rds&quot;) 第5章で確認したように、ggplotの設定を変更しておくことで見やすいグラフを作ることができる。ここでは以下のコードを実行している。 Macの場合： theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsの場合： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 8.1 重回帰分析 先の単回帰分析では、年齢、性別、学歴、数的思考力スコアによって賃金が異なっていることをみた。これら4つの変数を同時に考慮することで、賃金の分散をよりよく説明できるモデルを作ることができないだろうか？このようなときに役に立つのが、重回帰分析である。 今推定したい式は次のように書くことができる。 \\[ y = \\beta_0 + \\beta_1年齢 + \\beta_2女性 + \\beta_3高校卒 + \\beta_4短大高専卒 + \\beta_5大学大学院卒 + \\beta_6数的思考力スコア \\] \\(\\beta_1\\)が年齢の係数、\\(\\beta_2\\)が（男性と比較したときの）女性の係数、\\(\\beta_3, \\beta_4, \\beta_5\\)が（中学卒と比較したときの）高校卒、短大高専卒、大学大学院卒の係数を、\\(\\beta_6\\)が数的思考力スコアの係数を、それぞれ表す。各係数は、他の変数を一定として（統制 controlして、ともいう）、当該変数の値が1単位増えると\\(y\\)がどれだけ変化するのか、という独立の影響力を測っていることになる。 単回帰分析のときと同じように、lm()関数を使って推定することができる。ここでは、賃金の測定の際により一般的に使われる、対数変換した賃金（logwage）を用いる。正負の解釈については通常と同じだが、係数の値についての解釈は少しだけ勉強が必要になる。くわしくは前章「対数変換」を参照のこと。 reg_res &lt;- lm(data = piaac, logwage ~ age + gender + educ + numeracy) summary(reg_res) ## ## Call: ## lm(formula = logwage ~ age + gender + educ + numeracy, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.23602 -0.31230 -0.03953 0.29831 1.89012 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.7551032 0.0833818 69.021 &lt; 2e-16 *** ## age 0.0085794 0.0008344 10.282 &lt; 2e-16 *** ## gender男性 0.3915738 0.0184461 21.228 &lt; 2e-16 *** ## educ高校 0.0784268 0.0347435 2.257 0.0241 * ## educ短大高専 0.1725538 0.0370332 4.659 3.32e-06 *** ## educ大学大学院 0.3395225 0.0380275 8.928 &lt; 2e-16 *** ## numeracy 0.0027443 0.0002375 11.553 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4574 on 2721 degrees of freedom ## Multiple R-squared: 0.3123, Adjusted R-squared: 0.3108 ## F-statistic: 205.9 on 6 and 2721 DF, p-value: &lt; 2.2e-16 それぞれ係数、標準誤差、p値のみかたはいずれも前回と同じである。 一般的に、重回帰分析の式は次のように書ける。 \\[ y = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + \\cdots + \\beta_kx_k \\] 係数\\(\\beta_1\\)は、他の変数\\(x_2, \\cdots, x_k\\)を一定としたうえで、\\(x_1\\)の値が1単位増えると\\(y\\)がどれだけ変化するのかを示す。 重回帰分析の係数はやはり最小二乗法によって推定される。 8.2 交絡要因の統制 8.2.1 交絡とは何か では実際、重回帰分析はどのようなことを知りたいときに使うのだろうか。たとえば、高い数的思考力スコアが高いとどれくらい対数賃金が高くなるのかを知りたいと思ったとする。もっともシンプルな方法が、前回みたように（単）回帰分析を使う方法である。 しかしこの方法は、数的思考力スコアの因果的な効果を知るには不十分である。一つ例を考えよう。たとえば、女性はさまざまな理由から男性と比べて数的思考力スコアが低い傾向がある18。また、女性はさまざまな理由から労働市場で男性と比べて高い賃金を得られていない。だとすれば、数的思考力スコアが高いと賃金が高いというのはたんに見かけ上の関係に過ぎず、実際には数的思考力スコアは何ら賃金を高める効果を持っていないのかもしれない。性別に色分けした以下の散布図を見てみよう。たしかに、数的思考力も高く対数賃金も高い右上には男性が、数的思考力スコアが低く対数賃金も低い左下には女性が、それぞれ集中しているようにみえる。 piaac %&gt;% ggplot(aes(x = numeracy, y = logwage, color = gender)) + geom_point(shape = 1) + labs(color = &quot;&quot;) 性別を一定としたうえで、言い換えれば、性別が同じであったとしてもなお、数的思考力スコアと（対数）賃金の関係をみることができたなら、「数的思考力スコアはどの程度賃金を高める効果を持つのか」という問いの答えに近づくことができる。重回帰分析は、こうしたモチベーションに答えるための方法である。 今の議論を図にすると、次のようなかたちになる。 Xを数的思考力スコア、Yを賃金、Zを性別と考えよう。知りたいのは数的思考力スコアが賃金に与える効果（X → Y）だが、その背後にはXにもYにも影響する要因Z（Z → X、Z → Y）が存在する。そのため、数的思考力スコアが賃金に与える効果をみたいのならば、Zを一定とする必要がある。このように、XとYの両者に影響する要因を交絡要因 confounderとよぶ。 複数の変数を使うときの回帰分析では、関心のある変数xと、統制したい変数zというふうに別々の役割があるということが多い。 8.2.2 結果の比較と解釈 もちろん、両者の背後にある交絡要因は性別だけではないだろう。年齢や学歴も関係しているかもしれない。たとえば学歴はどのように数的思考力スコアと賃金の両者と関係しているだろうか。学歴が高い人は学校での勉強を通じて数的思考力スコアを高めており、学歴が高い人は（本人の能力とは関係なしに）賃金の高い仕事に就けるために、見かけ上数的思考力スコアと賃金に正の関連があるだけかもしれない。 以下では、 単回帰分析 性別を統制した回帰分析 性別に加えてさらに年齢と学歴を統制した回帰分析 を比較しながら、それぞれ数的思考力スコアの係数がどのように変わるのかをみてみよう。 reg_res1 &lt;- lm(data = piaac, logwage ~ numeracy) reg_res2 &lt;- lm(data = piaac, logwage ~ numeracy + gender) reg_res3 &lt;- lm(data = piaac, logwage ~ numeracy + gender + age + educ) modelsummary(list(reg_res1, reg_res2, reg_res3), stars = TRUE, fmt = 4, coef_map = c(&quot;numeracy&quot; = &quot;数的思考力スコア&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_3iz5irkpc26enhsv5j1x, .table th.tinytable_css_3iz5irkpc26enhsv5j1x { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0t05dt7m8dxr9la9re33, .table th.tinytable_css_0t05dt7m8dxr9la9re33 { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_rwlqgdvkvqi5qp10kt6m, .table th.tinytable_css_rwlqgdvkvqi5qp10kt6m { text-align: center; } .table td.tinytable_css_uew6uzm3pfcw5sxus2y8, .table th.tinytable_css_uew6uzm3pfcw5sxus2y8 { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qvpwepm7w63g9g0ly4br, .table th.tinytable_css_qvpwepm7w63g9g0ly4br { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0pje720ylot7hdr8mgle, .table th.tinytable_css_0pje720ylot7hdr8mgle { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_6ohpeyzxhz8a7x8h2w7j, .table th.tinytable_css_6ohpeyzxhz8a7x8h2w7j { text-align: left; } .table td.tinytable_css_37k1rz9rnt8oermsaatl, .table th.tinytable_css_37k1rz9rnt8oermsaatl { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) (2) (3) + p 数的思考力スコア 0.0044*** 0.0036*** 0.0027*** (0.0002) (0.0002) (0.0002) 年齢 0.0086*** (0.0008) 男性（vs. 女性） 0.4146*** 0.3916*** (0.0185) (0.0184) 高校（vs. 中学） 0.0784* (0.0347) 短大高専（vs. 中学） 0.1726*** (0.0370) 大学大学院（vs. 中学） 0.3395*** (0.0380) 切片 6.0352*** 6.0424*** 5.7551*** (0.0688) (0.0633) (0.0834) Num.Obs. 2728 2728 2728 R2 0.116 0.254 0.312 なお、この例のように、回帰分析の表を作るときには、カテゴリ変数の比較対象（参照カテゴリ）が何かを書くとわかりやすいだろう。 また、一般的に切片の値そのものにはあまり興味がないことが多いので、切片の係数は下の方に表示されることが多い。coef_map = c()の箇所に表記した順番に係数が表示されるので、ここの順番を調整すると、切片の係数を下の方に表示することができる。 Model 1、Model 2、Model 3ではそれぞれ数的思考力スコアの係数が違っていることが確認できる。性別を統制したModel 2、さらに年齢と学歴を統制したModel 3では、それぞれ係数が小さくなっていることがわかる。ここからわかることは2つである。第1に、数的思考力スコアと対数賃金との正の関連の一部は、両者の背後にある交絡要因（性別、年齢、学歴）によって生じているということである。第2に、しかしながらこれらの交絡要因を統制してもなお、数的思考力スコアの係数は正でありかつ統計的にも有意である。したがって、性別、年齢、学歴を一定としてもなお、数的思考力スコアが高いほど対数賃金が高いといえる。 もちろん、性別や年齢、学歴だけではなくほかにもさまざまな要因が絡んでくるから、これだけで数的思考力が賃金に与える効果の真の推定値を明らかにしたのだということはできない。しかし、適切に要因を統制すれば、数的思考力が賃金を高めるという効果の真の推定値に近づいていくことはできる。 8.3 媒介分析／要因分解 女性は男性と比べて賃金が低い（男女間賃金格差がある）のはなぜなのかを知りたいとする。たとえばその原因には、(1) 女性が男性よりも教育水準（学歴）が低い、(2) 女性が男性よりも数的思考力スコアが低い、ということがありえるだろう。このような原因を調べるというときにも、重回帰分析を活用することができる。 性別をX、賃金をY、学歴および数的思考力スコアをMとすると、ここでのアイデアは次のような図に表すことができる。 性別が賃金に与える効果は、(1) 女性の学歴や数的思考力スコアが低く、したがって賃金も低い（X → M → Y）という部分と、(2) 学歴や数的思考力スコアを一定としてもなお女性のほうが賃金が低い（X → Y | M）という部分とに分けることができる。このようにして、XとYの中間にある要因（媒介要因 mediator）を考えることでグループ間の差や独立変数の効果を分けていくことを指して、媒介分析 mediation analysisや要因分解decompositionなどという。 piaac &lt;- piaac %&gt;% mutate(female_d = if_else(gender == &quot;女性&quot;, 1, 0)) reg_res1 &lt;- lm(data = piaac, logwage ~ female_d) reg_res2 &lt;- lm(data = piaac, logwage ~ female_d + educ + numeracy) modelsummary(list(reg_res1, reg_res2), stars = TRUE, coef_map = c(&quot;female_d&quot; = &quot;女性（vs. 男性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;numeracy&quot; = &quot;数的思考力スコア&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_7beti1tue17z9b9s26oq, .table th.tinytable_css_7beti1tue17z9b9s26oq { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_j9mm0yct4itbr1g6gmyb, .table th.tinytable_css_j9mm0yct4itbr1g6gmyb { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_6edd8w53dovyhnkrus0n, .table th.tinytable_css_6edd8w53dovyhnkrus0n { text-align: center; } .table td.tinytable_css_ico96tdozapi13j7eqlf, .table th.tinytable_css_ico96tdozapi13j7eqlf { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_mizbac3qs3b5eutp68lw, .table th.tinytable_css_mizbac3qs3b5eutp68lw { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ils7213d4h25qf0r76hp, .table th.tinytable_css_ils7213d4h25qf0r76hp { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_0vdfnphf1nd21v6ll6q6, .table th.tinytable_css_0vdfnphf1nd21v6ll6q6 { text-align: left; } .table td.tinytable_css_evq9pnp8ckiibei4b90c, .table th.tinytable_css_evq9pnp8ckiibei4b90c { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) (2) + p 女性（vs. 男性） -0.464*** -0.391*** (0.019) (0.019) 高校（vs. 中学） 0.047 (0.035) 短大高専（vs. 中学） 0.116** (0.037) 大学大学院（vs. 中学） 0.296*** (0.039) 数的思考力スコア 0.002*** (0.000) 切片 7.545*** 6.658*** (0.013) (0.069) Num.Obs. 2728 2728 R2 0.177 0.286 Model 1では、女性ダミーの係数は負であるので、女性は男性に比して賃金が低いということがわかる。 Model 2では、学歴と数的思考力スコアを追加している。高校、短大高専、大学大学院の係数はいずれも正であり、学歴が高いほど、賃金は高い傾向がある。また、数的思考力スコアも正であり、数的思考力スコアが高いほど賃金が高い傾向がある。これら学歴と数的思考力スコアを一定とすると、女性ダミーの係数は-0.391となり、Model 1の女性の係数（-0.464）よりも絶対値が小さくなっている（0に近づいている）ことがわかる。ただし係数はなお負で、統計的に有意である。 この結果は次のことを意味している。女性の賃金が低いことの一部は、女性は男性と比べて学歴が低いことや、数的思考力スコアが低いことによって説明できる。しかしながら同時に、これらの個人属性を一定としてもなお、男女間には大きな賃金格差が存在している。 8.4 回帰分析の実際 8.4.1 交絡と媒介 実際の論文では、交絡要因の統制と媒介分析の両方を考慮しながら分析されることが多い。すなわち、次のような図になる。 たとえば、学歴が高いと賃金が高い（X → Y）のはなぜなのか知りたいとする。その原因の1つとして、学歴が高いとよりスキルレベルが高い（賃金の高い）職業につくことができるから（X → M → Y）、ということが考えられる。実際、学歴別に職業の分布を比べてみると、学歴が高いほど管理職や専門職といったスキルレベルの高い職業に就いている傾向があることがわかる。 piaac %&gt;% tbl_cross(educ, occupation, percent = &quot;row&quot;) #gtsttphlnd table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #gtsttphlnd thead, #gtsttphlnd tbody, #gtsttphlnd tfoot, #gtsttphlnd tr, #gtsttphlnd td, #gtsttphlnd th { border-style: none; } #gtsttphlnd p { margin: 0; padding: 0; } #gtsttphlnd .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gtsttphlnd .gt_caption { padding-top: 4px; padding-bottom: 4px; } #gtsttphlnd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gtsttphlnd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gtsttphlnd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gtsttphlnd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gtsttphlnd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gtsttphlnd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gtsttphlnd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gtsttphlnd .gt_column_spanner_outer:first-child { padding-left: 0; } #gtsttphlnd .gt_column_spanner_outer:last-child { padding-right: 0; } #gtsttphlnd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gtsttphlnd .gt_spanner_row { border-bottom-style: hidden; } #gtsttphlnd .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #gtsttphlnd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gtsttphlnd .gt_from_md > :first-child { margin-top: 0; } #gtsttphlnd .gt_from_md > :last-child { margin-bottom: 0; } #gtsttphlnd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gtsttphlnd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gtsttphlnd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gtsttphlnd .gt_row_group_first td { border-top-width: 2px; } #gtsttphlnd .gt_row_group_first th { border-top-width: 2px; } #gtsttphlnd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gtsttphlnd .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gtsttphlnd .gt_first_summary_row.thick { border-top-width: 2px; } #gtsttphlnd .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gtsttphlnd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gtsttphlnd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gtsttphlnd .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #gtsttphlnd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gtsttphlnd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gtsttphlnd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gtsttphlnd .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gtsttphlnd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gtsttphlnd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gtsttphlnd .gt_left { text-align: left; } #gtsttphlnd .gt_center { text-align: center; } #gtsttphlnd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gtsttphlnd .gt_font_normal { font-weight: normal; } #gtsttphlnd .gt_font_bold { font-weight: bold; } #gtsttphlnd .gt_font_italic { font-style: italic; } #gtsttphlnd .gt_super { font-size: 65%; } #gtsttphlnd .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #gtsttphlnd .gt_asterisk { font-size: 100%; vertical-align: 0; } #gtsttphlnd .gt_indent_1 { text-indent: 5px; } #gtsttphlnd .gt_indent_2 { text-indent: 10px; } #gtsttphlnd .gt_indent_3 { text-indent: 15px; } #gtsttphlnd .gt_indent_4 { text-indent: 20px; } #gtsttphlnd .gt_indent_5 { text-indent: 25px; } #gtsttphlnd .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #gtsttphlnd div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } occupation Total 管理職 専門職 技術職・准専門職 事務補助 サービス・販売 農林漁業 技能工 設備・機械運転・組立 単純作業 educ     中学 7 (3.1%) 2 (0.9%) 12 (5.3%) 18 (8.0%) 48 (21%) 9 (4.0%) 52 (23%) 40 (18%) 38 (17%) 226 (100%)     高校 48 (5.1%) 27 (2.8%) 114 (12%) 177 (19%) 266 (28%) 7 (0.7%) 120 (13%) 125 (13%) 64 (6.8%) 948 (100%)     短大高専 31 (4.6%) 123 (18%) 114 (17%) 121 (18%) 173 (25%) 4 (0.6%) 63 (9.3%) 24 (3.5%) 28 (4.1%) 681 (100%)     大学大学院 133 (15%) 267 (31%) 199 (23%) 123 (14%) 89 (10%) 5 (0.6%) 30 (3.4%) 18 (2.1%) 9 (1.0%) 873 (100%) Total 219 (8.0%) 419 (15%) 439 (16%) 439 (16%) 576 (21%) 25 (0.9%) 265 (9.7%) 207 (7.6%) 139 (5.1%) 2,728 (100%) 先に確認したように、学歴と賃金の間には性別や年齢といった交絡要因が存在する（Z → X, Z → Y）。なので、あらかじめこれらを統制しておいたうえで、学歴による賃金の差が職業の違いによってどの程度説明されるのかというのをみる必要がある。 実際の分析結果は次のようになる。賃金については実額よりも対数を取った値のほうがよく使われるので、従属変数は対数賃金とする。また賃金を従属変数とする回帰分析の場合、年齢の2乗も考慮することが多いので、2乗項についても投入しよう。 reg_res1 &lt;- lm(data = piaac, logwage ~ educ + gender + age + I(age^2)) reg_res2 &lt;- lm(data = piaac, logwage ~ educ + gender + age + I(age^2) + occupation) modelsummary(list(reg_res1, reg_res2), stars = TRUE, coef_map = c(&quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;, &quot;occupation専門職&quot; = &quot;専門職（vs. 管理職）&quot;, &quot;occupation技術職・准専門職&quot; = &quot;技術職・准専門職（vs. 管理職）&quot;, &quot;occupation事務補助&quot; = &quot;事務補助（vs. 管理職）&quot;, &quot;occupationサービス・販売&quot; = &quot;サービス・販売（vs. 管理職）&quot;, &quot;occupation農林漁業&quot; = &quot;農林漁業（vs. 管理職）&quot;, &quot;occupation技能工&quot; = &quot;技能工（vs. 管理職）&quot;, &quot;occupation設備・機械運転・組立&quot; = &quot;設備・機械運転・組立（vs. 管理職）&quot;, &quot;occupation単純作業&quot; = &quot;単純作業（vs. 管理職）&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_fue52pdi0s0lziwkon4q, .table th.tinytable_css_fue52pdi0s0lziwkon4q { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dk1l7vmyzprb9go1b5jn, .table th.tinytable_css_dk1l7vmyzprb9go1b5jn { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_a4m5k64k52rudyv2m834, .table th.tinytable_css_a4m5k64k52rudyv2m834 { text-align: center; } .table td.tinytable_css_ohxcr53bfkf1izcnlqif, .table th.tinytable_css_ohxcr53bfkf1izcnlqif { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_umypi9b5r0uknc78hz5r, .table th.tinytable_css_umypi9b5r0uknc78hz5r { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ruc0agkh07r3dilrkpul, .table th.tinytable_css_ruc0agkh07r3dilrkpul { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_bfssl5ducvdkyoyd58ed, .table th.tinytable_css_bfssl5ducvdkyoyd58ed { text-align: left; } .table td.tinytable_css_yszlqpddyjtpvyjgmp2i, .table th.tinytable_css_yszlqpddyjtpvyjgmp2i { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) (2) + p 男性（vs. 女性） 0.416*** 0.345*** (0.018) (0.019) 高校（vs. 中学） 0.116*** 0.048 (0.034) (0.032) 短大高専（vs. 中学） 0.221*** 0.059+ (0.037) (0.035) 大学大学院（vs. 中学） 0.477*** 0.203*** (0.035) (0.035) 年齢 0.079*** 0.059*** (0.007) (0.007) 年齢2乗 -0.001*** -0.001*** (0.000) (0.000) 専門職（vs. 管理職） -0.196*** (0.037) 技術職・准専門職（vs. 管理職） -0.340*** (0.036) 事務補助（vs. 管理職） -0.491*** (0.038) サービス・販売（vs. 管理職） -0.660*** (0.037) 農林漁業（vs. 管理職） -0.683*** (0.090) 技能工（vs. 管理職） -0.577*** (0.041) 設備・機械運転・組立（vs. 管理職） -0.609*** (0.043) 単純作業（vs. 管理職） -0.745*** (0.049) 切片 5.049*** 6.153*** (0.151) (0.150) Num.Obs. 2728 2728 R2 0.305 0.418 年齢と性別を統制したうえでの学歴の係数が、職業を考慮することによってどの程度変わるのかをみる。これをみると、Model 1と比べて、職業を一定としたModel 2では学歴の係数がかなり小さくなる。学歴が高いと賃金が高いという関連のかなりの部分が、職業分布の違いによって生じているようだということを、2つのモデルの学歴の係数の違いから読み取ることができる。 このように、回帰分析を使う際には、どのような効果を知りたいのかを意識して、何を交絡要因として統制すべきなのか、すべきでないのか、また媒介要因を統制すべきなのか、すべきでないのかを考えながら分析することが大事である。 8.4.2 従属変数を対数変換した場合の解釈：broomパッケージの活用 従属変数を対数変換した場合は、係数の大きさが実質的にどれくらいであるのかを\\(\\exp(\\beta)\\)を計算して求めるとよい。くわしくは前章の対数変換を参照のこと。 いろいろな方法があるが、ここでは回帰分析の結果をデータフレームにして扱いやすくするためのパッケージであるbroomパッケージを利用する方法を紹介する。まずは、broomパッケージを読み込もう。 library(broom) broom::tidy()関数を実行することで、回帰分析などのモデルの主要な結果をデータフレーム形式へと変換することができる。先ほどの結果reg_res2_tidyをtidy形式に変換してみよう。 reg_res2_tidy &lt;- reg_res2 %&gt;% tidy() reg_res2_tidy ## # A tibble: 15 × 5 ## term estimate std.error statistic p.value ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 6.15 0.150 41.1 1.31e-287 ## 2 educ高校 0.0484 0.0323 1.50 1.34e- 1 ## 3 educ短大高専 0.0594 0.0349 1.71 8.83e- 2 ## 4 educ大学大学院 0.203 0.0354 5.73 1.12e- 8 ## 5 gender男性 0.345 0.0190 18.2 1.35e- 69 ## 6 age 0.0590 0.00652 9.06 2.50e- 19 ## 7 I(age^2) -0.000610 0.0000729 -8.37 9.03e- 17 ## 8 occupation専門職 -0.196 0.0366 -5.36 9.13e- 8 ## 9 occupation技術職・准専門職 -0.340 0.0358 -9.51 4.24e- 21 ## 10 occupation事務補助 -0.491 0.0380 -12.9 3.85e- 37 ## 11 occupationサービス・販売 -0.660 0.0366 -18.0 1.12e- 68 ## 12 occupation農林漁業 -0.683 0.0903 -7.56 5.39e- 14 ## 13 occupation技能工 -0.577 0.0406 -14.2 3.33e- 44 ## 14 occupation設備・機械運転・組立 -0.609 0.0430 -14.2 6.46e- 44 ## 15 occupation単純作業 -0.745 0.0489 -15.2 2.25e- 50 それぞれ、estimateが推定された係数、std.errorが標準誤差、statisticがt値、p.valueがp値を表す。この推定結果に含まれるestimateという列に対して\\(\\exp(\\beta)\\)を計算した新しい列を作成して、結果を表示してみよう。 reg_res2_tidy %&gt;% mutate(estimate_exp = exp(estimate)) ## # A tibble: 15 × 6 ## term estimate std.error statistic p.value estimate_exp ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) 6.15e+0 0.150 41.1 1.31e-287 470. ## 2 educ高校 4.84e-2 0.0323 1.50 1.34e- 1 1.05 ## 3 educ短大高専 5.94e-2 0.0349 1.71 8.83e- 2 1.06 ## 4 educ大学大学院 2.03e-1 0.0354 5.73 1.12e- 8 1.22 ## 5 gender男性 3.45e-1 0.0190 18.2 1.35e- 69 1.41 ## 6 age 5.90e-2 0.00652 9.06 2.50e- 19 1.06 ## 7 I(age^2) -6.10e-4 0.0000729 -8.37 9.03e- 17 0.999 ## 8 occupation専門職 -1.96e-1 0.0366 -5.36 9.13e- 8 0.822 ## 9 occupation技術職・准専門職…… -3.40e-1 0.0358 -9.51 4.24e- 21 0.712 ## 10 occupation事務補助 -4.91e-1 0.0380 -12.9 3.85e- 37 0.612 ## 11 occupationサービス・販売 -6.60e-1 0.0366 -18.0 1.12e- 68 0.517 ## 12 occupation農林漁業 -6.83e-1 0.0903 -7.56 5.39e- 14 0.505 ## 13 occupation技能工 -5.77e-1 0.0406 -14.2 3.33e- 44 0.562 ## 14 occupation設備・機械運転・組立…… -6.09e-1 0.0430 -14.2 6.46e- 44 0.544 ## 15 occupation単純作業 -7.45e-1 0.0489 -15.2 2.25e- 50 0.475 この結果は、例えば学歴（とくに大学大学院卒）の結果であれば、性別・年齢・職業を一定としてもなお、大学大学院卒の人は中学卒の人と比べて1.22倍賃金が高い = 22%賃金が高い、ということを意味している。 8.5 回帰分析でありがちな困りごとへの対処 8.5.1 参照カテゴリの入れ替え カテゴリ変数を回帰分析の独立変数にする場合には、何を参照カテゴリとするのかを考える必要がある。デフォルトだと、一番はじめのカテゴリが参照カテゴリとして設定される。たとえば今回の学歴educであれば中学が参照カテゴリとなり、性別genderであれば女性が参照カテゴリとなっている。 参照カテゴリに当てはまる人数が小さかったり、議論の方向性によっては、参照カテゴリを別のものに設定するほうがよい場合がある。たとえば： 学歴が中学卒の回答者が非常に少なく、解釈が難しい。この場合には、中学ではなくその他の学歴（たとえば高校や大学）を参照カテゴリにすることが望ましい。 「男性と比較してどの程度女性の賃金が低い」と主張したい。この場合、女性が参照カテゴリになっていると、結果は「女性と比較してどの程度男性の賃金が高いか」を表すことになる。そのため、女性ではなく男性を参照カテゴリにするほうが望ましい。 参照カテゴリを変更する場合には、カテゴリ変数の値の順序を変更するとよい。具体的には、fct_relevel()関数を使うことで、カテゴリ変数の値の順序を変更することができる。方法は次のとおりである。 piaac_relevel &lt;- piaac %&gt;% mutate(educ = fct_relevel(educ, &quot;大学大学院&quot;, &quot;中学&quot;, &quot;高校&quot;, &quot;短大高専&quot;)) %&gt;% mutate(gender = fct_relevel(gender, &quot;男性&quot;, &quot;女性&quot;)) 順序を変更したデータを使って再度回帰分析を実行してみると、参照カテゴリがそれぞれ「大学大学院」、「男性」となっていることがわかる。 reg_res3 &lt;- lm(data = piaac_relevel, logwage ~ educ + gender + age + I(age^2)) summary(reg_res3) ## ## Call: ## lm(formula = logwage ~ educ + gender + age + I(age^2), data = piaac_relevel) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.30061 -0.31753 -0.03543 0.29316 1.94268 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.942e+00 1.505e-01 39.48 &lt;2e-16 *** ## educ中学 -4.770e-01 3.519e-02 -13.56 &lt;2e-16 *** ## educ高校 -3.613e-01 2.200e-02 -16.43 &lt;2e-16 *** ## educ短大高専 -2.564e-01 2.459e-02 -10.43 &lt;2e-16 *** ## gender女性 -4.159e-01 1.846e-02 -22.53 &lt;2e-16 *** ## age 7.877e-02 7.029e-03 11.21 &lt;2e-16 *** ## I(age^2) -8.059e-04 7.869e-05 -10.24 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4597 on 2721 degrees of freedom ## Multiple R-squared: 0.3053, Adjusted R-squared: 0.3038 ## F-statistic: 199.3 on 6 and 2721 DF, p-value: &lt; 2.2e-16 8.5.2 単位の変更 時給賃金wageが高いほど健康度（health, 1〜5までの値をとり、値が高いほど健康であることをあらわす）が高いかどうかを調べたいとする。健康を従属変数、年齢と賃金を独立変数とする回帰分析を実行して、結果をみてみよう。 reg_res4 &lt;- lm(data = piaac, health ~ wage + age) modelsummary(list(reg_res4), stars = TRUE, gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_ydrs7sxeeaifqvjq5qkb, .table th.tinytable_css_ydrs7sxeeaifqvjq5qkb { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_i00b79y7niv5w743ye8x, .table th.tinytable_css_i00b79y7niv5w743ye8x { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_0t6ej9abcapmzdtttthj, .table th.tinytable_css_0t6ej9abcapmzdtttthj { text-align: center; } .table td.tinytable_css_iiqdwpo3tu9cdkb6s5gf, .table th.tinytable_css_iiqdwpo3tu9cdkb6s5gf { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qqtp1xxu4brx9rh9kp8h, .table th.tinytable_css_qqtp1xxu4brx9rh9kp8h { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_bnb05952jwc25415le88, .table th.tinytable_css_bnb05952jwc25415le88 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_tekgodikmm08tn8aqqzz, .table th.tinytable_css_tekgodikmm08tn8aqqzz { text-align: left; } .table td.tinytable_css_378yw37ahf1c796pz4rr, .table th.tinytable_css_378yw37ahf1c796pz4rr { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) + p (Intercept) 3.720*** (0.075) wage 0.000** (0.000) age -0.017*** (0.002) Num.Obs. 2728 R2 0.040 賃金の係数は統計的に有意であるため、年齢を統制したうえで、賃金が高いほど健康であることがわかる。しかし、小数点第3位までが示された結果では係数が0.000となっており、これでは違いの大きさがどの程度なのか、よくわからない。 この場合の対処には2つある。第1に、小数点以下の表示を増やすことである。たとえば小数点第6位まで表示する場合は、fmt = 6というオプションを追加する。 modelsummary(list(reg_res4), stars = TRUE, fmt = 6, gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_0v8lqrsle72pp0wp52p0, .table th.tinytable_css_0v8lqrsle72pp0wp52p0 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8basd7ir0f3iiu2b028n, .table th.tinytable_css_8basd7ir0f3iiu2b028n { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_fpwbue88530d7gxychzf, .table th.tinytable_css_fpwbue88530d7gxychzf { text-align: center; } .table td.tinytable_css_g1qc7o7iu865yoz73z8e, .table th.tinytable_css_g1qc7o7iu865yoz73z8e { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4568pbchn91icib9tyld, .table th.tinytable_css_4568pbchn91icib9tyld { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gnh9anhondezfxrd0ngr, .table th.tinytable_css_gnh9anhondezfxrd0ngr { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_1t0zs5f8pkwlpikob1mh, .table th.tinytable_css_1t0zs5f8pkwlpikob1mh { text-align: left; } .table td.tinytable_css_s3vyhutl30itkvstl4g4, .table th.tinytable_css_s3vyhutl30itkvstl4g4 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) + p (Intercept) 3.719942*** (0.074610) wage 0.000042** (0.000015) age -0.017084*** (0.001624) Num.Obs. 2728 R2 0.040 値が見えるようになった。つまり、賃金が1円高いと、健康度が0.000042高いということである。 しかし、桁がたくさん並んでいると結果が読みにくいし、実際上も1円単位の小さな変化にはほとんど関心がないことが多い。そこで、賃金の単位を千円に変更してみるとどうだろうか。 piaac &lt;- piaac %&gt;% mutate(wage1000 = wage / 1000) # 1000円単位に変更した変数を作成 reg_res4 &lt;- lm(data = piaac, health ~ wage1000 + age) modelsummary(list(reg_res4), stars = TRUE, gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_q0l3aprcs857dtq27y6w, .table th.tinytable_css_q0l3aprcs857dtq27y6w { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_nkci28y4p830gv2ww6gi, .table th.tinytable_css_nkci28y4p830gv2ww6gi { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_5bio3305a975fsrtzfvo, .table th.tinytable_css_5bio3305a975fsrtzfvo { text-align: center; } .table td.tinytable_css_y60eiwg9duwiv0uf9rp4, .table th.tinytable_css_y60eiwg9duwiv0uf9rp4 { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_vyzd7reqq09639epenqg, .table th.tinytable_css_vyzd7reqq09639epenqg { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7ikwjlgf62p0sjdt5ik4, .table th.tinytable_css_7ikwjlgf62p0sjdt5ik4 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_a7k7zvndraoq3reaur44, .table th.tinytable_css_a7k7zvndraoq3reaur44 { text-align: left; } .table td.tinytable_css_a74w4q82x5ip2qa8y7ha, .table th.tinytable_css_a74w4q82x5ip2qa8y7ha { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) + p (Intercept) 3.720*** (0.075) wage1000 0.042** (0.015) age -0.017*** (0.002) Num.Obs. 2728 R2 0.040 この場合は、賃金が1単位（1000円）高いと、健康度が0.042高いということを表す。場合に応じて適切に単位を変更することで、係数の解釈もしやすくなるだろう。 8.6 結果をファイルに書き出す 前章の結果をファイルに書き出すを参照。念のため再確認しておくと、 flextableパッケージを読みこんでおいた状態で（本章冒頭を参照）、上記のmodelsummary()のコードにoutput = \"xxx.docx\"というようなオプションをつけることで、wordファイルに結果を書き出すことができる。 library(flextable) # もし読み込んでいない場合は実行 modelsummary(list(&quot;Model 1&quot; = reg_res1, &quot;Model 2&quot; = reg_res2), # このようにするとモデルに名前をつけることができる stars = TRUE, coef_map = c(&quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;, &quot;occupation専門職&quot; = &quot;専門職（vs. 管理職）&quot;, &quot;occupation技術職・准専門職&quot; = &quot;技術職・准専門職（vs. 管理職）&quot;, &quot;occupation事務補助&quot; = &quot;事務補助（vs. 管理職）&quot;, &quot;occupationサービス・販売&quot; = &quot;サービス・販売（vs. 管理職）&quot;, &quot;occupation農林漁業&quot; = &quot;農林漁業（vs. 管理職）&quot;, &quot;occupation技能工&quot; = &quot;技能工（vs. 管理職）&quot;, &quot;occupation設備・機械運転・組立&quot; = &quot;設備・機械運転・組立（vs. 管理職）&quot;, &quot;occupation単純作業&quot; = &quot;単純作業（vs. 管理職）&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;), output = &quot;results/regression_multiple.docx&quot;) ところで、上記の表のように独立変数が増えてくると、なんだか表が縦に長くて見にくいなあと思うかもしれない。そうした場には、次のように書くことで、標準誤差の値を係数の右側に並べて表記でき、表の縦の長さを短くできる。 modelsummary(list(&quot;Model 1&quot; = reg_res1, &quot;Model 2&quot; = reg_res2), estimate = &quot;{estimate} ({std.error}){stars}&quot;, # 係数（半角スペース）(標準誤差)星印、となるように表記するオプション statistic = NULL, #「2行目」の表記を省略するオプション。 coef_map = c(&quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;, &quot;occupation専門職&quot; = &quot;専門職（vs. 管理職）&quot;, &quot;occupation技術職・准専門職&quot; = &quot;技術職・准専門職（vs. 管理職）&quot;, &quot;occupation事務補助&quot; = &quot;事務補助（vs. 管理職）&quot;, &quot;occupationサービス・販売&quot; = &quot;サービス・販売（vs. 管理職）&quot;, &quot;occupation農林漁業&quot; = &quot;農林漁業（vs. 管理職）&quot;, &quot;occupation技能工&quot; = &quot;技能工（vs. 管理職）&quot;, &quot;occupation設備・機械運転・組立&quot; = &quot;設備・機械運転・組立（vs. 管理職）&quot;, &quot;occupation単純作業&quot; = &quot;単純作業（vs. 管理職）&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;) ) /* tinytable css entries after */ .table td.tinytable_css_xn1bqb4avo3coqe3r380, .table th.tinytable_css_xn1bqb4avo3coqe3r380 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_w0clkrtaxd416aru918x, .table th.tinytable_css_w0clkrtaxd416aru918x { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_v23wo88vcv0rw951qy2g, .table th.tinytable_css_v23wo88vcv0rw951qy2g { text-align: center; } .table td.tinytable_css_9ax50lbvydg8fl20dgki, .table th.tinytable_css_9ax50lbvydg8fl20dgki { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ysa9gyql19lz5636vgiw, .table th.tinytable_css_ysa9gyql19lz5636vgiw { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ecqd9t73rv4dhqg590y2, .table th.tinytable_css_ecqd9t73rv4dhqg590y2 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_b0nae0wlla98u6obach9, .table th.tinytable_css_b0nae0wlla98u6obach9 { text-align: left; } .table td.tinytable_css_smwnws86pc1cx0yn9fdr, .table th.tinytable_css_smwnws86pc1cx0yn9fdr { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Model 1 Model 2 男性（vs. 女性） 0.416 (0.018)*** 0.345 (0.019)*** 高校（vs. 中学） 0.116 (0.034)*** 0.048 (0.032) 短大高専（vs. 中学） 0.221 (0.037)*** 0.059 (0.035)+ 大学大学院（vs. 中学） 0.477 (0.035)*** 0.203 (0.035)*** 年齢 0.079 (0.007)*** 0.059 (0.007)*** 年齢2乗 -0.001 (0.000)*** -0.001 (0.000)*** 専門職（vs. 管理職） -0.196 (0.037)*** 技術職・准専門職（vs. 管理職） -0.340 (0.036)*** 事務補助（vs. 管理職） -0.491 (0.038)*** サービス・販売（vs. 管理職） -0.660 (0.037)*** 農林漁業（vs. 管理職） -0.683 (0.090)*** 技能工（vs. 管理職） -0.577 (0.041)*** 設備・機械運転・組立（vs. 管理職） -0.609 (0.043)*** 単純作業（vs. 管理職） -0.745 (0.049)*** 切片 5.049 (0.151)*** 6.153 (0.150)*** Num.Obs. 2728 2728 R2 0.305 0.418 結果をWordファイルに出力するときには、今までと同様、outputオプションをつける。 Excelに結果を書き出したり、PowerPointに結果を書き出すこともできる。いずれも前章の末尾を参照のこと。 たとえば女性は男性と同等の数学能力を持っていたとしても、男性と比べて数学を使う分野（理系など）に進みにくい傾向がある。このような傾向があると、小中学校の間は男女で数的思考力に違いがなかったとしても、高校、大学と段階が進むにつれて数学に触れる時間に差が生じ、結果、男女の数的思考力に差が生じる。こうした傾向については数多くの研究がある（たとえば、Xie, Yu and Kimberlee A. Shauman. 2005. Women in Science: Career Processes and Outcomes. Harvard University Press.など）。↩︎ "],["regression_interaction.html", "Chapter 9 交互作用 9.1 交互作用とはなにか 9.2 xが連続変数、zがカテゴリ変数（またはその逆）の場合 9.3 xがカテゴリ変数、zがカテゴリ変数の場合 9.4 xが連続変数、zが連続変数の場合（作成中）", " Chapter 9 交互作用 本章では、前章で学んだ回帰分析において、独立変数の効果が他の独立変数によって異なるかどうか（交互作用）を検証するための方法について説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 さらに、これまでの章で説明した以下のパッケージを読み込んだ上で、第4章で作成したデータを読み込んでpiaacというデータフレームに入れていることを前提とする。具体的には、以下のコードを実行しておく必要がある。 library(tidyverse) library(gtsummary) library(flextable) library(modelsummary) piaac &lt;- read_rds(&quot;data/piaac_sample_analytic.rds&quot;) 第5章で確認したように、ggplotの設定を変更しておくことで見やすいグラフを作ることができる。ここでは以下のコードを実行している。 Macの場合： theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsの場合： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 9.1 交互作用とはなにか ある独立変数が従属変数に与える効果が別の変数によって異なることを指して、交互作用（interaction）がある、または調整効果（moderation effect）があるという。例えば以下のような例がある。 子どもを出産すると、女性の賃金は下がる一方で、男性の賃金は下がらないかむしろ上がる（出産が賃金に与える効果が性別によって異なる）19。 出身階層が高いほど高い学歴を得やすいという傾向は、近年の世代（コーホート）ほど弱い（出身階層が教育達成に与える効果がコーホートによって異なる）20。 出身階層が到達階層に与える効果は、非大卒層よりも大卒層においてより大きい（出身階層が到達階層に与える効果が学歴によって異なる）21。 州が公的支出を行うと、高所得層の子どもに対する支出額は変わらないが、低所得層の子どもに対する支出額は増加する（公的投資が子どもに対する支出に与える効果が親所得によって異なる）22。 いずれも、ある独立変数（xとする）の効果が、別の変数（zとする）の値によって異なるということである。これを図にして表すと、次のようになる。 こうした交互作用効果は回帰分析の枠組みで検証することができる。具体的には、次のような回帰式を推定する。 \\[ y = \\beta_0 + \\beta_1x + \\beta_2z + \\beta_3xz \\] \\(\\beta_3\\)が、\\(z\\)の水準によって\\(x\\)の効果がどの程度変化するのかを表す係数である。この式を次のように変形してみよう。 \\[ y = \\beta_0 + (\\beta_1 + \\beta_3z)x + \\beta_2z \\] このように書くと、zはその値に応じて\\(x\\)の効果を強めたり弱めたりする「スイッチ」のような役割を果たす変数として考えることができる。 それぞれ、\\(\\beta_1\\)の正負と\\(\\beta_3\\)の正負によって次のように解釈が変わる。 \\(\\beta_3 &gt; 0\\)（zの係数が正） \\(\\beta_3 &lt; 0\\)（zの係数が負） \\(\\beta_1 &gt; 0\\)（xの係数が正） zが大きいほど、xの正の効果は大きくなる zが大きいほど、xの正の効果は小さくなる \\(\\beta_1 &lt; 0\\)（xの係数が負） zが大きいほど、xの負の効果は小さくなる zが大きいほど、xの負の効果は大きくなる 9.2 xが連続変数、zがカテゴリ変数（またはその逆）の場合 zがカテゴリ変数（0、1の2値をとるものとする）の場合について考えてみよう。交互作用を含めた場合の回帰式は以下のようになる。 \\[ \\begin{align} y &amp;= \\beta_0 + \\beta_1x + \\beta_2z + \\beta_3xz \\\\ &amp;= \\beta_0 + (\\beta_1 + \\beta_3z)x + \\beta_2z \\end{align} \\] \\(z\\)が0か1かの値を取るカテゴリ変数の場合には、次のような解釈ができる。 \\(z = 0\\)のとき：\\(x\\)が1単位増えると、\\(y\\)は\\(\\beta_1\\)高くなる。 \\(z = 1\\)のとき：\\(x\\)が1単位増えると、\\(y\\)は\\(\\beta_1 + \\beta_3\\)増える。 例えば、\\(\\beta_1 &gt; 0\\)、\\(\\beta_3 &gt; 0\\)のときは、次のような図になる。\\(z = 1\\)の場合には、\\(\\beta_3\\)分だけ、正の傾きがより大きくなることになる。 交互作用を表す変数\\(xz\\)を含めた場合には、\\(\\beta_1\\)および\\(\\beta_2\\)はそれだけでは解釈できない値になることに注意が必要である。\\(\\beta_1\\)は、\\(z = 0\\)のときの\\(x\\)の効果（\\(x\\)が1単位増えると\\(y\\)がどれだけ変化するか）を表し、\\(\\beta_2\\)は\\(x = 0\\)のときの\\(z\\)の効果（\\(z\\)が1単位増えると\\(y\\)がどれだけ変化するか）を表す。交互作用を含めた場合には、交互作用を表す係数\\(\\beta_3\\)のみに注目して結果を解釈するとよい。 9.2.1 実例：数的思考力が賃金を高める効果は性別によって異なるか？ 男性は数学が得意だとより数学的な思考力を必要とする賃金の高い仕事に就く一方で、女性の場合には数学が得意だとしてもそうした傾向は見られないということがあるかもしれない。つまり、数的思考力が賃金を高める効果は、女性よりも男性においてより大きいかもしれない。これはまさに交互作用に関する仮説である。 この仮説を検証するための式は次のように書くことができる。 \\[ \\begin{align} y &amp;= \\beta_0 + \\beta_1数的思考力 + \\beta_2男性 + \\beta_3数的思考力\\times 男性 \\\\ &amp;= \\beta_0 + (\\beta_1 + \\beta_3男性)数的思考力 + \\beta_2男性 \\end{align} \\] 先の仮説が正しければ、数的思考力と性別の交互作用項の係数\\(\\beta_3\\)は正の値になるはずである。 Rでは、交互作用を含めたい変数どうしを*でつなぐことで、かけ算をした項を独立変数に含める事ができる。例えば次のように。 reg_res &lt;- lm(data = piaac, logwage ~ numeracy + gender + numeracy * gender) # *で変数どうしのかけ算を表す summary(reg_res) ## ## Call: ## lm(formula = logwage ~ numeracy + gender + numeracy * gender, ## data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.2903 -0.3342 -0.0568 0.2948 1.9173 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 6.1527849 0.0969034 63.494 &lt;2e-16 *** ## numeracy 0.0032278 0.0003339 9.667 &lt;2e-16 *** ## gender男性 0.2221950 0.1293254 1.718 0.0859 . ## numeracy:gender男性 0.0006563 0.0004366 1.503 0.1329 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4759 on 2724 degrees of freedom ## Multiple R-squared: 0.2546, Adjusted R-squared: 0.2538 ## F-statistic: 310.1 on 3 and 2724 DF, p-value: &lt; 2.2e-16 numeracy:gender男性と表示されている箇所が交互作用項\\(xz\\)の係数である。確かに係数は正であり、男性であると、数的思考力が高くなると賃金が高くなるという傾向がより強いことがわかる（男性であると、数的思考力が1単位高い場合に、6.6^{-4}だけ女性よりも大きく賃金が上昇する）。しかしながらPr(&gt;|t|)の列をみると0.05を上回っており、係数は統計的に有意であるとはいえない。したがって、先の仮説は成り立つとはいえない。 先に述べた通り、交互作用項を含めた場合には\\(x\\)と\\(z\\)の係数そのものを解釈することはできなくなる。そこで、交互作用を検討したい場合には、まず交互作用を含まないモデルを提示し、そのあと交互作用を含むモデルを提示するとわかりやすいだろう。 もちろん、これまでの重回帰分析に関する説明同様、統制変数を含めることもできる。統制変数を含めたモデルを推定して、結果を提示する場合の例は次のとおりである。 reg_res1 &lt;- lm(data = piaac, logwage ~ numeracy + gender + age + I(age^2) + educ) reg_res2 &lt;- lm(data = piaac, logwage ~ numeracy + gender + numeracy * gender + age + I(age^2) + educ) modelsummary(list(reg_res1, reg_res2), stars = TRUE, fmt = 4, coef_map = c(&quot;numeracy&quot; = &quot;数的思考力スコア&quot;, &quot;gender男性&quot; = &quot;男性&quot;, &quot;numeracy:gender男性&quot; = &quot;数的思考力スコア x 男性&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;, &quot;educ高校&quot; = &quot;高校（ref: 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（ref: 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（ref: 中学）&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_pfww5qmtes512s56r08t, .table th.tinytable_css_pfww5qmtes512s56r08t { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_jzy6bsbkklwmqjhie73x, .table th.tinytable_css_jzy6bsbkklwmqjhie73x { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_fs7cuk6ucf9o1bj33a8o, .table th.tinytable_css_fs7cuk6ucf9o1bj33a8o { text-align: center; } .table td.tinytable_css_4u5h41jjz31ohc3q21rh, .table th.tinytable_css_4u5h41jjz31ohc3q21rh { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qmpknc0uwhrmuomckkb7, .table th.tinytable_css_qmpknc0uwhrmuomckkb7 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_qem8jrdriojqxszn2sgc, .table th.tinytable_css_qem8jrdriojqxszn2sgc { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_movbak8ruil0i2n7p0rm, .table th.tinytable_css_movbak8ruil0i2n7p0rm { text-align: left; } .table td.tinytable_css_r207ww3i5jsn9qwnovss, .table th.tinytable_css_r207ww3i5jsn9qwnovss { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) (2) + p 数的思考力スコア 0.0025*** 0.0024*** (0.0002) (0.0003) 男性 0.3971*** 0.3544** (0.0182) (0.1229) 数的思考力スコア x 男性 0.0001 (0.0004) 年齢 0.0712*** 0.0711*** (0.0069) (0.0069) 年齢2乗 -0.0007*** -0.0007*** (0.0001) (0.0001) 高校（ref: 中学） 0.0518 0.0515 (0.0344) (0.0344) 短大高専（ref: 中学） 0.1392*** 0.1389*** (0.0367) (0.0367) 大学大学院（ref: 中学） 0.3213*** 0.3207*** (0.0375) (0.0376) 切片 4.5493*** 4.5755*** (0.1559) (0.1728) Num.Obs. 2728 2728 R2 0.333 0.333 この例のように、関心のある変数（今回の場合は交互作用項とそれに関係する変数）を上のほうに表示すると結果が見やすくてよい。 9.2.2 結果を図示する たんに表の数式だけではなく、実際にどの程度の効果の大きさなのかを視覚的に調べることが重要である。このような用途の最適なのが、ggeffectsパッケージ（→説明）である。また、ggeffectsパッケージに含まれている関数の一つで別のeffectsというパッケージも必要となるので、併せてインストールしておく。まずはパッケージをインストールしよう。 install.packages(&quot;ggeffects&quot;) install.packages(&quot;effects&quot;) library()で読み込んでおく。これは、ggeffectsだけでよい。 library(ggeffects) 使い方はつぎのとおり。交互作用効果を図示したい回帰式を指定し、ggpredict(結果が入った回帰式, c(\"xになる変数\", \"zになる変数\"）とすることで、予測値や95%信頼区間を求めることができる。このデータフレームを何らかの名前をつけたオブジェクトに入れる。保存したオブジェクトに対してplot()を実行することで、先に見たような交互作用の図を出力することができる。 predicted &lt;- ggeffect(reg_res2, c(&quot;numeracy&quot;, &quot;gender&quot;)) # 予測値を求めて結果を保存 predicted %&gt;% plot() # 結果をプロット また、ggpredict()で保存したデータフレームはggplot()で図を作成するときと同じようにオプションを付けてより見やすい図を作ることもできる。編集の一例を以下に示す。 predicted %&gt;% plot() + labs(x = &quot;数的思考力スコア&quot;, y = &quot;対数賃金&quot;, color = &quot;&quot;, title = &quot;&quot;) + theme(panel.grid.minor = element_blank()) + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) # Macの場合はこれをつけないと文字化けするかもしれない 9.2.3 xがカテゴリ変数、zが連続変数の場合 先ほどは、「数的思考力スコア（x）が賃金を高める効果は女性よりも男性において（z）より大きい」という仮説を立てた。これのxとzを入れ替えて、「男性であることが賃金を高める効果は数的思考力スコアが高いほどより大きい」という仮説も立てることができる。 この場合、先とまったく同じ回帰式を用いることができる。つまり、 \\[ \\begin{align} y &amp;= \\beta_0 + \\beta_1数的思考力 + \\beta_2男性 + \\beta_3数的思考力\\times 男性 \\\\ &amp;= \\beta_0 + (\\beta_2 + \\beta_3数的思考力)男性 + \\beta_1数的思考力 \\end{align} \\] 数的思考力が1ポイント高いと、男性であることが賃金を高める効果は\\(\\beta_3\\)だけ大きくなるということを意味する。式がまったく同じなので、Rのコードもまったくおなじで構わない。 reg_res &lt;- lm(data = piaac, logwage ~ numeracy + gender + numeracy * gender) # *で変数どうしのかけ算を表す 結果は省略する。 9.3 xがカテゴリ変数、zがカテゴリ変数の場合 次に、xもzもカテゴリ変数の場合を考えてみよう。学歴が高いほど賃金も高い傾向があるのは先にみたとおりだが、その効果は性別によって異なるかもしれない。たとえば、学歴が賃金を高める効果は、男性よりも女性のほうが大きいのではないか、という仮説を立てることができる。学歴（x）の効果が、性別（z）によって異なるのではないか？ということである。この場合の式は次のようになる。 \\[ y = \\beta_0 + \\beta_1学歴 + \\beta_2女性 + \\beta_3学歴\\times 女性 \\] 上式で、\\(\\beta_3 &gt; 0\\)となれば、仮説が支持されたといえる。今回は学歴を中学、高校、短大高専、大学大学院、という4カテゴリの変数で測定しているので、例えば中学を参照カテゴリとした場合には、次のような式となる。 \\[ \\begin{align} y =&amp; \\beta_0 + \\beta_{1,1}高校 + \\beta_{1,2}高専短大 + \\beta_{1,3}大学大学院 + \\beta_2女性 + \\\\ &amp;\\beta_{3,1}高校\\times 女性 + \\beta_{3,2}高専短大\\times 女性 + \\beta_{3,3}大学大学院\\times 女性 \\\\ =&amp;\\beta_0 + (\\beta_{1,1} + \\beta_{3,1}女性)高校 + (\\beta_{1,2} + \\beta_{3,2}女性)高専短大 + (\\beta_{1,3} + \\beta_{3,3}女性)大学大学院 + \\beta_2女性 \\end{align} \\] \\(\\beta_{3,1}\\)は、男性が中学卒→高校卒になったときに上昇する賃金と比べて、女性が中卒→高卒となったときに上昇する賃金は\\(\\beta_{3,1}\\)だけ高いということを表す。 \\(\\beta_{3,2}\\)は、男性が中学卒→高専短大卒になったときに上昇する賃金と比べて、女性が中卒→高専短大卒となったときに上昇する賃金は\\(\\beta_{3,2}\\)だけ高いということを表す。 \\(\\beta_{3,3}\\)は、男性が中学卒→大学大学院卒になったときに上昇する賃金と比べて、女性が中卒→大学大学院卒となったときに上昇する賃金は\\(\\beta_{3,3}\\)だけ高いということを表す。 交互作用を含める場合のコードは先ほどと同じである。 # 男性が先、女性が後の順になる変数を作成する piaac &lt;- piaac %&gt;% mutate(gender_rev = fct_relevel(gender, &quot;男性&quot;, &quot;女性&quot;)) reg_res3 &lt;- lm(data = piaac, logwage ~ educ + gender_rev + age + I(age^2)) reg_res4 &lt;- lm(data = piaac, logwage ~ educ + gender_rev + educ*gender_rev + age + I(age^2)) modelsummary(list(reg_res3, reg_res4), stars = TRUE, coef_map = c(&quot;educ高校&quot; = &quot;高校（ref: 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（ref: 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（ref: 中学）&quot;, &quot;gender_rev女性&quot; = &quot;女性&quot;, &quot;educ高校:gender_rev女性&quot; = &quot;女性 x 高校&quot;, &quot;educ短大高専:gender_rev女性&quot; = &quot;女性 x 短大高専&quot;, &quot;educ大学大学院:gender_rev女性&quot; = &quot;女性 x 大学大学院&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;, &quot;(Intercept)&quot; = &quot;切片&quot;), gof_map = c(&quot;nobs&quot;, &quot;r.squared&quot;)) /* tinytable css entries after */ .table td.tinytable_css_evk9a3y2988g9sas65t2, .table th.tinytable_css_evk9a3y2988g9sas65t2 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_j497foctd7tv1adqom7c, .table th.tinytable_css_j497foctd7tv1adqom7c { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_fu20w7s0751fkvu46wnl, .table th.tinytable_css_fu20w7s0751fkvu46wnl { text-align: center; } .table td.tinytable_css_77keg21yvazl98wn8imd, .table th.tinytable_css_77keg21yvazl98wn8imd { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_gn8svd6dv7o9nlfcgs1f, .table th.tinytable_css_gn8svd6dv7o9nlfcgs1f { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_cmn46ji6zfk2xpz4q7mu, .table th.tinytable_css_cmn46ji6zfk2xpz4q7mu { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_k6ofsfeimdb8dw2z1828, .table th.tinytable_css_k6ofsfeimdb8dw2z1828 { text-align: left; } .table td.tinytable_css_t42gqpnjfu3av976dw2m, .table th.tinytable_css_t42gqpnjfu3av976dw2m { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } (1) (2) + p 高校（ref: 中学） 0.116*** 0.125** (0.034) (0.045) 短大高専（ref: 中学） 0.221*** 0.158** (0.037) (0.051) 大学大学院（ref: 中学） 0.477*** 0.430*** (0.035) (0.044) 女性 -0.416*** -0.484*** (0.018) (0.062) 女性 x 高校 -0.005 (0.069) 女性 x 短大高専 0.122+ (0.073) 女性 x 大学大学院 0.138+ (0.071) 年齢 0.079*** 0.079*** (0.007) (0.007) 年齢2乗 -0.001*** -0.001*** (0.000) (0.000) 切片 5.465*** 5.488*** (0.151) (0.154) Num.Obs. 2728 2728 R2 0.305 0.309 女性×短大高専、女性×大学大学院の係数は正の値であり、10%水準ではあるものの、正の値である。すなわち、女性が高い学歴を持っている場合の賃金の上昇は、男性が高い学歴を持っている場合の賃金の上昇と比べて大きいといえる。 視覚的にはどのように表現できるだろうか。先に用いたggeffects::ggeffect()を使って結果を図示してみよう。 predicted &lt;- ggeffect(reg_res4, terms = c(&quot;educ&quot;, &quot;gender_rev&quot;)) # 予測値を求めて結果を保存 # Windowsユーザーはこちらを実行 predicted %&gt;% plot() + theme_bw() + theme(panel.grid.minor = element_blank()) + labs(x = &quot;学歴&quot;, y = &quot;対数賃金&quot;, color = &quot;&quot;) # Macユーザーはこちらを実行（文字化け防止策あり） predicted %&gt;% plot() + theme_bw(base_family = &quot;HiraKakuProN-W3&quot;) + theme(panel.grid.minor = element_blank()) + labs(x = &quot;学歴&quot;, y = &quot;対数賃金&quot;, color = &quot;&quot;) 学歴が高いと賃金が高くなる傾向は男女とも共通であるが、女性は男性と比べて学歴が高くなるとより大きく賃金が高くなることが視覚的にわかりやすい。 9.4 xが連続変数、zが連続変数の場合（作成中） 出産すると女性の賃金が下がることは母親ペナルティと呼ばれ、他方男性の賃金は上がることは父親ペナルティと呼ばれそれぞれ研究がなされている。近年の研究としては例えば Yu, W.-H., &amp; Hara, Y. (2021). Motherhood Penalties and Fatherhood Premiums: Effects of Parenthood on Earnings Growth Within and Across Firms. Demography, 58(1), 247–272. ただし父親ペナルティについては見せかけの関連（賃金が高くなりやすい男性ほど子どもを持ちやすい）なのではないかという指摘がある。たとえば Killewald, A., &amp; Lundberg, I. (2017). New Evidence Against a Causal Marriage Wage Premium. Demography, 54, 1007–1028. など。↩︎ 出身階層（親の階級や学歴）が高いほど子の教育達成が高いという傾向は20世紀の間で大きく変化していない（“persistent inequality”）を主張したShavit &amp; Blossfeld (1993)に対して、西ヨーロッパ8カ国の統合的なデータを使った比較研究を行ったBreenら（2009）は、出身階層（親の階級）が子どもの教育達成に与える影響は近年のコーホートほど弱まっている（“nonpersistent inequality”）と主張した。 Shavit, Y., &amp; Blossfeld, H.-P. (1993). Persistent inequality: Changing educational attainment in thirteen countries. Westview Press. Breen, R., Luijkx, R., Müller, W., &amp; Pollak, R. (2009). Nonpersistent inequality in educational attainment : Evidence from eight European countries. American Journal of Sociology, 114(5), 1475–1521.↩︎ Torche（2011）は階級、社会経済的地位指標、所得、賃金などさまざまな階層を表す指標を用いて親と子の相関を子どもの学歴別に検討した。その結果、いずれについても、子どもが大卒であると、そうでない場合と比較して親と子の階層指標の相関が弱くなることを発見した。ただしこれも近年の研究では必ずしも成り立たないのではないかと指摘されている（e.g. Zhou 2019）。 Torche, F. (2011). Is a College Degree Still the Great Equalizer? Intergenerational Mobility across Levels of Schooling in the United States. American Journal of Sociology, 117(3), 763–807. Zhou, X. (2019). Equalization or Selection? Reassessing the “Meritocratic Power” of a College Degree in Intergenerational Income Mobility. American Sociological Review, 84(3), 459–485.↩︎ Jackson, M. I., &amp; Schneider, D. (2022). Public Investments and Class Gaps in Parents’ Developmental Expenditures. American Sociological Review, 87(1), 105–142.↩︎ "],["logit.html", "Chapter 10 ロジスティック回帰分析 10.1 二値変数を従属変数にする：線形回帰分析による方法 10.2 ロジスティック回帰分析とは 10.3 最尤推定（作成中） 10.4 解釈を深める 10.5 まとめ", " Chapter 10 ロジスティック回帰分析 本章では、従属変数が2値変数の際に用いる分析手法である、ロジスティック回帰分析について説明する。 内容に入る前に、右上のプロジェクトのボックスの横が、前章で作成したプロジェクトの名前（たとえば、seminar_sociology_r）になっているかどうかを確認しておこう。なっていない場合は、右上のボックスをクリックして、「Open Project…」を選択し、前章で作成したRprojファイル（たとえば、seminar_sociology_r.Rprojといったような名前になっている）を選んで、プロジェクトを切り替えよう。 さらに、これまでの章で説明した以下のパッケージを読み込んだ上で、第4章で作成したデータを読み込んでpiaacというデータフレームに入れていることを前提とする。具体的には、以下のコードを実行しておく必要がある。 library(tidyverse) library(gtsummary) library(flextable) library(modelsummary) library(ggeffects) #第9章（交互作用）で紹介済 piaac &lt;- read_rds(&quot;data/piaac_sample_analytic.rds&quot;) 第5章で確認したように、ggplotの設定を変更しておくことで見やすいグラフを作ることができる。ここでは以下のコードを実行している。 Macの場合： theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsの場合： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 10.1 二値変数を従属変数にする：線形回帰分析による方法 10.1.1 線形確率モデル すでにChapter 7 回帰分析の基礎の 従属変数が2値のカテゴリ変数（0/1）の場合ですでにみたように、0/1の値をとる二値変数を従属変数として回帰分析を使うことができる。 \\[ y = \\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k \\] このとき、係数\\(\\beta_1\\)は他の変数\\(x_2, \\cdots, x_k\\)を一定としたうえで、\\(x_1\\)が1単位増えると\\(y\\)（従属変数が1をとる割合 = 確率）がどれだけ変化するのかを表す。 たとえば、この1年間に職場での訓練（OJTとよぶ）を受ける率が性別によってどの程度異なるのかを知りたいとする。このような場合には、次の式を推定する。 reg_res1 &lt;- lm(data = piaac, ojt ~ gender) summary(reg_res1) ## ## Call: ## lm(formula = ojt ~ gender, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.4079 -0.4079 -0.3263 0.5921 0.6737 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.32632 0.01343 24.30 &lt; 2e-16 *** ## gender男性 0.08157 0.01846 4.42 1.03e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4811 on 2726 degrees of freedom ## Multiple R-squared: 0.007116, Adjusted R-squared: 0.006751 ## F-statistic: 19.54 on 1 and 2726 DF, p-value: 1.026e-05 この結果から、年齢および学歴が同程度であったとしても、男性がOJTを受ける確率は女性と比べて0.082（8.2 %ポイント）高いといえる。 また、年齢とOJT受講の関係が線形であると仮定して、年齢および学歴が同じであったとしてもなお、性別によってOJTを受ける割合が異なっているかどうかを知りたいとする。この場合には、次のような式を推定する。 reg_res2 &lt;- lm(data = piaac, ojt ~ gender + age + educ) 結果は次のとおりである： summary(reg_res2) ## ## Call: ## lm(formula = ojt ~ gender + age + educ, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.5679 -0.3590 -0.2487 0.4981 0.8575 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.2790638 0.0539055 5.177 2.42e-07 *** ## gender男性 0.0532179 0.0188275 2.827 0.00474 ** ## age -0.0021335 0.0008478 -2.516 0.01192 * ## educ高校 0.0635070 0.0349841 1.815 0.06959 . ## educ短大高専 0.1652651 0.0369943 4.467 8.24e-06 *** ## educ大学大学院 0.2890064 0.0356772 8.101 8.17e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.469 on 2722 degrees of freedom ## Multiple R-squared: 0.05794, Adjusted R-squared: 0.05621 ## F-statistic: 33.48 on 5 and 2722 DF, p-value: &lt; 2.2e-16 この結果から、年齢および学歴が同程度であったとしても、男性がOJTを受ける確率は女性と比べて0.053（5.3 %ポイント）高いといえる。 このように、0/1の値をとる二値変数を従属変数として回帰分析を推定するような場合を指して、線形確率モデル（linear probability model）と呼ぶ。線形確率モデルは、これまでに学んだ線形回帰分析をそのまま使い、同じように解釈できるという点で優れている。 10.1.2 ロバスト標準誤差：残差が正規分布しない問題への対処 回帰分析で係数の標準誤差を求めるときには、残差がxの値によらず一定の大きさの分散にしたがう（均一分散）という仮定が置かれている。しかしながら、線形確率モデルの場合はこの仮定は通常満たされない（もちろん、従属変数が1/0ではない回帰分析でもこの仮定が満たされないことはある）。このように残差がxの値に依存することを指して不均一分散 heteroskedasticityという。不均一分散が生じている場合には、標準誤差にバイアスが生じる。そこで、不均一分散に対して頑健な標準誤差（Heteroskedasticity-robust standard error、またはロバスト標準誤差）を用いることで、適切な標準誤差を計算することができる。 ロバスト標準誤差についてはいくつかのバリエーションがある。ここではくわしく説明しないが、推定の仕方だけ書いておく。ロバスト標準誤差を求める場合には、estimatrパッケージに含まれているlm_robust()関数を使うのが手っ取り早い。通常のlm()を、lm_robust()に変えるだけで、ロバスト標準誤差を計算してくれる。まずはestimatrパッケージを読み込もう。 library(estimatr) そのうえで、estimatr::lm_robust()関数を使って、ロバスト標準誤差つきの回帰分析を推定する。以下のように、ふつうの回帰分析と同じように実行すればよい。違うのは、関数がlm()ではなくてlm_robust()となっている点だけである。 reg_res2_robust &lt;- lm_robust(data = piaac, ojt ~ gender + age + educ) lm()で求めた推定結果と、lm_robust()で求めた推定結果を比べてみよう： modelsummary(list(&quot;通常のSE&quot; = reg_res2, &quot;Robust SE&quot; = reg_res2_robust), stars = TRUE,fmt = 4) /* tinytable css entries after */ .table td.tinytable_css_xosjhc3gwi3jiied1he3, .table th.tinytable_css_xosjhc3gwi3jiied1he3 { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hngqxffzpj11j2yr1uwe, .table th.tinytable_css_hngqxffzpj11j2yr1uwe { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_mrhlxcb97dt7bi77qyah, .table th.tinytable_css_mrhlxcb97dt7bi77qyah { text-align: center; } .table td.tinytable_css_xhoy3809pq8pv9addeok, .table th.tinytable_css_xhoy3809pq8pv9addeok { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4xx21laqxy77hns3wkce, .table th.tinytable_css_4xx21laqxy77hns3wkce { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_f87244roru7xw2u0qwwz, .table th.tinytable_css_f87244roru7xw2u0qwwz { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_a07xmgveyxozyi3x93z3, .table th.tinytable_css_a07xmgveyxozyi3x93z3 { text-align: left; } .table td.tinytable_css_54tvkhux6rfqs5h6xc59, .table th.tinytable_css_54tvkhux6rfqs5h6xc59 { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } 通常のSE Robust SE + p (Intercept) 0.2791*** 0.2791*** (0.0539) (0.0518) gender男性 0.0532** 0.0532** (0.0188) (0.0188) age -0.0021* -0.0021* (0.0008) (0.0008) educ高校 0.0635+ 0.0635* (0.0350) (0.0308) educ短大高専 0.1653*** 0.1653*** (0.0370) (0.0338) educ大学大学院 0.2890*** 0.2890*** (0.0357) (0.0326) Num.Obs. 2728 2728 R2 0.058 0.058 R2 Adj. 0.056 0.056 AIC 3618.6 3618.6 BIC 3660.0 3660.0 Log.Lik. -1802.312 RMSE 0.47 0.47 通常の標準誤差を用いた場合と、ロバスト標準誤差を用いた場合とでは、わずかに標準誤差の値が異なっていることがわかる。このずれがどれくらい大きくなるかは、データや変数の性質によって変わってくるため一概にいえない。ただし、係数の値には違いは生じない。 線形確率モデルでは残差が正規分布に従わないことが明らかなので、ロバスト標準誤差を用いるべきとされている（西山ほか 2019: 335）。 10.2 ロジスティック回帰分析とは 10.2.1 線形確率モデルの問題点 線形確率モデルは、x1単位の増加に対して、従属変数yが1をとる確率が何ポイント変わるのか、という確率の「差」を推定したモデルである。このことは解釈の利点がある一方で、次のような問題がある。 モデルから得られる予測値が確率の定義上あり得ない数値になることがある。確率は定義上0以上1以下になるはずであるので、予測値が負の値になったり、1より大きくなることはあり得ないはずである。しかしながら線形確率モデルの場合には、こうしたことが起こり得る。また、このようなリスクは、サンプルにおいて従属変数が1を取る割合が1に近い、または0に近いほど大きくなる。 従属変数が1をとる確率が異なる個人間で、ある独立変数が1単位増えることによる確率の増加量が異なる（天井効果 ceiling effectないし床効果 flooring effect）場合には、変数の「効果」の推定として不適切である。 確率の増加量が異なるというのはどういうことだろうか。具体例を考えてみよう。たとえば、投票に行くよう促すハガキを送付することで、投票確率が増加するかどうかを知りたいとする。投票促進ハガキの効果は、いつも欠かさず投票に行っている人の投票確率を上げる効果はほとんどないに等しいだろう（普段から投票に行っているし、わざわざハガキが送られてこなくても投票に行っていただろう）。また、まったく投票に行ったことのない人にとっても、投票確率を上げる効果はやはりほとんどなさそうだ。しかし、投票に行くかどうか迷っている人にとっては、ハガキが最後の一押しとなって、投票確率を高めるかもしれない。つまり、投票促進ハガキがどの程度投票確率を上げるかは、もともとの投票確率に依存するかもしれない（極端に投票に行きやすい人と、極端に投票に行きにくい人では確率の増加はわずかで、投票に行くかもしれないし行かないかもしれない人にとっては確率の増加が大きい）。このような場合には、もともとの確率によらず確率の増加が一定だと考える線形確率モデルは、個人の行動のモデルとして不適切かもしれない。 10.2.2 （対数）オッズ比：効果を「比」で測定する そこで、変数の効果を確率の「差」ではなく「比」（正確にはオッズの比）で測定するのが、オッズ比 odds ratioである。 以下には、性別ごとにOJTを受ける・受けない人数を集計したクロス集計表を示した。ここでは説明を分かりやすくするために順序を変更している。 piaac %&gt;% mutate(gender = fct_relevel(gender, &quot;男性&quot;, &quot;女性&quot;)) %&gt;% mutate(ojt = factor(ojt, levels = 1:0, labels = c(&quot;1（受けた）&quot;, &quot;0（受けなかった）&quot;))) %&gt;% tbl_cross(gender, ojt) #zwcmkthusb table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #zwcmkthusb thead, #zwcmkthusb tbody, #zwcmkthusb tfoot, #zwcmkthusb tr, #zwcmkthusb td, #zwcmkthusb th { border-style: none; } #zwcmkthusb p { margin: 0; padding: 0; } #zwcmkthusb .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #zwcmkthusb .gt_caption { padding-top: 4px; padding-bottom: 4px; } #zwcmkthusb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #zwcmkthusb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #zwcmkthusb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zwcmkthusb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zwcmkthusb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #zwcmkthusb .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #zwcmkthusb .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #zwcmkthusb .gt_column_spanner_outer:first-child { padding-left: 0; } #zwcmkthusb .gt_column_spanner_outer:last-child { padding-right: 0; } #zwcmkthusb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #zwcmkthusb .gt_spanner_row { border-bottom-style: hidden; } #zwcmkthusb .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #zwcmkthusb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #zwcmkthusb .gt_from_md > :first-child { margin-top: 0; } #zwcmkthusb .gt_from_md > :last-child { margin-bottom: 0; } #zwcmkthusb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #zwcmkthusb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #zwcmkthusb .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #zwcmkthusb .gt_row_group_first td { border-top-width: 2px; } #zwcmkthusb .gt_row_group_first th { border-top-width: 2px; } #zwcmkthusb .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zwcmkthusb .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #zwcmkthusb .gt_first_summary_row.thick { border-top-width: 2px; } #zwcmkthusb .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zwcmkthusb .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #zwcmkthusb .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #zwcmkthusb .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #zwcmkthusb .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #zwcmkthusb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #zwcmkthusb .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zwcmkthusb .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #zwcmkthusb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #zwcmkthusb .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #zwcmkthusb .gt_left { text-align: left; } #zwcmkthusb .gt_center { text-align: center; } #zwcmkthusb .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #zwcmkthusb .gt_font_normal { font-weight: normal; } #zwcmkthusb .gt_font_bold { font-weight: bold; } #zwcmkthusb .gt_font_italic { font-style: italic; } #zwcmkthusb .gt_super { font-size: 65%; } #zwcmkthusb .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #zwcmkthusb .gt_asterisk { font-size: 100%; vertical-align: 0; } #zwcmkthusb .gt_indent_1 { text-indent: 5px; } #zwcmkthusb .gt_indent_2 { text-indent: 10px; } #zwcmkthusb .gt_indent_3 { text-indent: 15px; } #zwcmkthusb .gt_indent_4 { text-indent: 20px; } #zwcmkthusb .gt_indent_5 { text-indent: 25px; } #zwcmkthusb .katex-display { display: inline-flex !important; margin-bottom: 0.75em !important; } #zwcmkthusb div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { height: 0px !important; } ojt Total 1（受けた） 0（受けなかった） gender     男性 589 855 1,444     女性 419 865 1,284 Total 1,008 1,720 2,728 この表から、「OJTを受けなかった人数に対する受けた人数の比」を計算してみる。 男性の場合はこのように： \\[ 589 / 855 = 0.689 \\] 女性の場合はこのように： \\[ 419 / 865 = 0.484 \\] それぞれ計算できる。このように、0をとる人数（確率）に対する1をとる人数（確率）の比を取った値のことを指して、オッズ（odds）という。オッズは1をとる人数と0をとる人数がちょうど同じときに1となり、1をとる人数（分子）が0をとる人数（分母）に対して少ないほど0に近づいていき、逆に1をとる人数（分子）が0をとる人数（分母）に対して多いほど無限大に近づいていく。 つぎに、こうして計算したオッズどうしの比（オッズ比 odds ratio）をとった値を計算してみよう。 \\[ \\frac{589 / 855}{419 / 865} = 1.422 \\] オッズ比は、「女性のオッズに対して男性のオッズが何倍であるか」を示しており、1をとるときには女性と男性のオッズが同じであることを意味する。1よりも大きいときには女性のオッズ（分母）よりも男性のオッズ（分子）のほうが大きいことを意味し、1よりも小さいときには男性のオッズ（分子）よりも女性のオッズ（分母）のほうが大きいことを意味する。 このオッズ比の自然対数をとったのが、対数オッズ比 log-odds ratioである。 \\[ \\log \\left( \\frac{589 / 855}{419 / 865} \\right) = 0.352 \\] 対数オッズ比は、「女性の対数オッズに対して男性の対数オッズがどれくらい大きいか」を示しており、0をとるときには女性と男性の（対数）オッズが同じであることを意味し、0よりも大きいときには女性の（対数）オッズ（分母）よりも男性の（対数）オッズ（分子）のほうが大きいことを意味し、0よりも小さいときには男性の（対数）オッズ（分子）よりも女性の（対数）オッズ（分母）のほうが大きいことを意味する。 ここまで説明した対数オッズの話を一般化しよう。次のような2×2のクロス集計表があるとする。 Y = 1 Y = 0 X = 1 \\(N_{11}\\) \\(N_{10}\\) X = 0 \\(N_{01}\\) \\(N_{00}\\) このとき、オッズ比および対数オッズ比はそれぞれ次のように定義され、次のような特徴をもつ。 関連の強さ オッズ比 \\((N_{11} / N_{10}) / (N_{01} / N_{00})\\) 対数オッズ比 \\(\\log((N_{11} / N_{10}) / (N_{01} / N_{00}))\\) 正 1よりも大きくなり、大きくなるほど∞に近づく 0よりも大きくなり、大きくなるほど+∞に近づく 無関連 1をとる 0をとる 負 1よりも小さくなり、小さくなるほど0に近づく 0よりも小さくなり、小さくなるほど-∞に近づく なお、対数の性質より、対数オッズ比は\\(\\log((N_{11} / N_{10}) / (N_{01} / N_{00})) = \\log(N_{11} / N_{10}) - (N_{01} / N_{00})\\)などと書くこともできる。 10.2.3 ロジスティック回帰分析（ロジットモデル） ロジスティック回帰分析の式は以下のように表される。 \\[ \\log \\frac{\\Pr(y = 1)}{1 - \\Pr(y = 1)} = \\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k \\] または、式を変形して次のように書く。 \\[ \\begin{align} \\log \\frac{\\Pr(y = 1)}{1 - \\Pr(y = 1)} &amp;= \\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k \\\\ \\frac{\\Pr(y = 1)}{1 - \\Pr(y = 1)} &amp;= e^{\\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k} \\\\ \\Pr(y = 1) &amp;= (1 - \\Pr(y = 1))e^{\\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k} \\\\ (1 + e^{\\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k})\\Pr(y = 1) &amp;= e^{\\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k} \\\\ \\Pr(y = 1) &amp;= \\frac{e^{\\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k}}{1 + e^{\\beta_0 + \\beta_1x_1 + \\cdots + \\beta_kx_k}} \\end{align} \\] 係数\\(\\beta_k\\)は、他の\\(x\\)を一定としたうえで、\\(x_k\\)が1単位増加したときの従属変数の対数オッズ比の変化を表す。 ロジスティック回帰分析でも、線形回帰分析のときと分析の際に気をつけることは同じである。たとえば、次のようなことはロジスティック回帰分析でも線形回帰分析と同様に検討する必要がある。 知りたい問いに対して適切な統制変数を投入する（Chapter 8 回帰分析の活用） 連続変数であれば、線形のみではなく非線形（2乗項）を含めることができる（Chapter 7 回帰分析の基礎） 交互作用項を含めることで、調整効果を検証することができる（Chapter 9 交互作用） なお、ロジスティック回帰分析では、線形確率モデルとは異なり、左辺が\\(\\Pr(y = 1)\\)ではなく\\(\\log \\frac{\\Pr(Y = 1)}{1 - \\Pr(Y = 1)}\\)となっている。\\(\\Pr(y = 1)\\)を\\(\\log \\frac{\\Pr(Y = 1)}{1 - \\Pr(Y = 1)}\\)に変換することをロジット変換するといい、\\(\\mathrm{logit}(\\Pr(Y = 1))\\)と書くこともある。また、ロジスティック回帰分析のことをロジットモデル（logit model）ということもある23。 なお、同じように2値変数を従属変数とするモデルとして、プロビットモデル（probit model）が存在する。経済学系では主にプロビットモデルが用いられ、それ以外のほとんどの領域ではロジットモデルが用いられる傾向がある。両者にはわずかに違いがあるが、プロビットモデルは係数が対数オッズ比のような何らかの指標に対応していないという特徴がある。しかし、プロビットモデルとロジットモデルで係数の正負が逆転することはなく、またプロビットモデルは後述するように平均限界効果を計算して解釈することがほとんどであり、結果を解釈するうえで両者にほとんど違いはない。したがってここではロジットモデルのみ解説する。 10.2.4 直線とロジスティック曲線 ロジスティック回帰分析は、線形確率モデルとは異なり、独立変数がいくら大きくなったとしても、従属変数が1をとる確率が1を超えることも0を下回ることもないという性質をもつ。これを確認するために、以下の2つの式をグラフに描いてみたのが下の図である。 線形確率モデル（Linear）：\\(\\Pr(y = 1) = \\beta_0 + \\beta_1x\\) ロジットモデル（Logit）：\\(\\log \\frac{\\Pr(y = 1)}{1 - \\Pr(y = 1)} = \\beta_0 + \\beta_1x \\leftrightarrow \\Pr(y = 1) = \\frac{e^{\\beta_0 + \\beta_1x}}{1 + e^{\\beta_0 + \\beta_1x}}\\) 線形確率モデル（Linear）では、\\(\\Pr(y=1)\\)の値によらず、\\(x\\)が大きくなるにつれて一定に変化していき、\\(\\Pr(y=1)\\)が1を超えることも0を下回ることもあり得る。一方、ロジットモデル（Logit）では、\\(\\Pr(y=1)\\)が1（または0）に近づくにつれて変化は緩やかになっていき、1を超えたり0を下回らないことがわかる。 10.2.5 推定 ロジットモデルを推定する際には、glm()関数を使う。基本的な書き方は線形回帰分析とほとんど同じだが、familyの引数としてbinomialを指定する。 logit_res1 &lt;- glm(data = piaac, ojt ~ gender, family = binomial) summary(logit_res1) ## ## Call: ## glm(formula = ojt ~ gender, family = binomial, data = piaac) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.72486 0.05952 -12.178 &lt; 2e-16 *** ## gender男性 0.35218 0.08006 4.399 1.09e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 3593.8 on 2727 degrees of freedom ## Residual deviance: 3574.3 on 2726 degrees of freedom ## AIC: 3578.3 ## ## Number of Fisher Scoring iterations: 4 「gender男性」の行は、女性と比べて男性であると対数オッズ（log-odds）が0.352高いことを表している。 この対数オッズ比の値が、先ほど推定したロジスティック回帰分析の「gender男性」の係数の値に一致していることを確認しよう。すでに確認した通り、ロジットモデルの係数は対数オッズ比に一致するということがわかる。 結果を解釈する場合には、指数をとってオッズ比として読むことが多い。今回であれば、男性は女性と比べて\\(\\exp(0.352) = 1.421\\)倍、OJTを受けるオッズが高いといえる。 # 指数をとってオッズ比に変換する exp(0.352) ## [1] 1.421909 # tidy関数を使うとすべての係数について指数をとった値を計算できる（第8章参照） logit_res1 %&gt;% tidy() %&gt;% mutate(estimate_exp = exp(estimate)) ## # A tibble: 2 × 6 ## term estimate std.error statistic p.value estimate_exp ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 (Intercept) -0.725 0.0595 -12.2 4.06e-34 0.484 ## 2 gender男性 0.352 0.0801 4.40 1.09e- 5 1.42 連続変数を独立変数とする場合も、解釈は類似している。たとえば次のように性別と年齢を独立変数とするロジスティック回帰分析を推定する。 logit_res2 &lt;- glm(data = piaac, ojt ~ gender + age, family = binomial) summary(logit_res2) ## ## Call: ## glm(formula = ojt ~ gender + age, family = binomial, data = piaac) ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.006992 0.171320 -0.041 0.967 ## gender男性 0.350124 0.080351 4.357 1.32e-05 *** ## age -0.016442 0.003705 -4.437 9.10e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 3593.8 on 2727 degrees of freedom ## Residual deviance: 3554.5 on 2725 degrees of freedom ## AIC: 3560.5 ## ## Number of Fisher Scoring iterations: 4 このときの年齢の係数は年齢が1高いとOJTを受ける対数オッズが-0.016だけ高い（0.016だけ低い）ということを意味している。 10.3 最尤推定（作成中） ロジスティック回帰分析の係数は、最尤推定（Maximum likelihood estimation）という方法によって求める。 （残る本節の内容は作成中） 10.4 解釈を深める 10.4.1 線形確率モデルとロジットモデルの比較 線形確率モデルとロジットモデルの結果を比較してみよう。 lpm_res2 &lt;- lm_robust(data = piaac, ojt ~ gender + age) logit_res2 &lt;- glm(data = piaac, ojt ~ gender + age, family = binomial) modelsummary(list(&quot;LPM&quot; = lpm_res2, &quot;Logit&quot; = logit_res2), stars = TRUE) /* tinytable css entries after */ .table td.tinytable_css_3rimkv8s4u4e9j69htfk, .table th.tinytable_css_3rimkv8s4u4e9j69htfk { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9g0e89z8d984m6wx6arz, .table th.tinytable_css_9g0e89z8d984m6wx6arz { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_hn7il2orpoizst4lenzi, .table th.tinytable_css_hn7il2orpoizst4lenzi { text-align: center; } .table td.tinytable_css_vp0djj2fs20uromdpd6e, .table th.tinytable_css_vp0djj2fs20uromdpd6e { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3hg2v7cvbesi7oqlb635, .table th.tinytable_css_3hg2v7cvbesi7oqlb635 { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_omjia2obfjo2jax4h0v8, .table th.tinytable_css_omjia2obfjo2jax4h0v8 { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_2ycdp71h4cq8zqh3l1dm, .table th.tinytable_css_2ycdp71h4cq8zqh3l1dm { text-align: left; } .table td.tinytable_css_i8ph4v6nlqtzvk4cijhk, .table th.tinytable_css_i8ph4v6nlqtzvk4cijhk { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } LPM Logit + p (Intercept) 0.493*** -0.007 (0.039) (0.171) gender男性 0.081*** 0.350*** (0.018) (0.080) age -0.004*** -0.016*** (0.001) (0.004) Num.Obs. 2728 2728 R2 0.014 R2 Adj. 0.014 AIC 3736.1 3560.5 BIC 3759.7 3578.2 Log.Lik. -1777.230 RMSE 0.48 0.48 それぞれ、解釈は次のようになる。 線形確率モデル（LPM）：年齢を一定としたうえで、男性は女性と比べて8.1%ポイントOJTを受ける確率が高い。また、性別を一定としたうえで、年齢が1歳高いと、OJTを受ける確率が0.4%ポイント低い。 ロジットモデル（Logit）：年齢を一定としたうえで、男性は女性と比べてOJTを受ける対数オッズが0.35高い（オッズが1.419倍高い）。また、性別を一定としたうえで、年齢が1歳高いと、OJTを受ける対数オッズが-0.016だけ低い（オッズが0.984倍になる）。 どちらも、正負の向きには違いはない。基本的に、線形確率モデルとロジットモデルで係数の正負の向きが逆転することは少なく、結論が真逆になることはほとんどないといってよい24。 係数の解釈については、（対数）オッズ比という複雑な指標を使っているロジットモデルよりも、確率の差を表す線形確率モデルのほうがより直感的にわかりやすいだろう。 10.4.2 平均限界効果 ロジットモデルの結果から確率の差を表す指標を計算できれば、解釈の手助けになるだろう。そのための方法の一つが、平均限界効果 Average marginal effect, AMEである。 平均限界効果とは、ロジットモデルの推定結果にもとづいて、変数\\(x_k\\)が1単位増加したときに従属変数\\(y\\)が1を取る確率\\(\\Pr(y = 1)\\)が変化する量をすべての個人について求め、平均をとった値として定義される。具体的には次の式で定義される。 \\[ AME = \\frac{1}{N} \\sum_{i=1}^{N} \\frac{\\Delta \\Pr(y = 1 | x_1 = x_{1i}, x_2 = x_{2i}, \\cdots, x_k = x_{ki})}{\\Delta x_k} \\] 平均限界効果が具体的に何を意味しているのかを見てみよう。まずは、次のとおり、OJTを受けるかどうかを従属変数として、性別（男性ダミー：Male）と年齢（Age）を独立変数としたロジットモデルを推定する。 \\[ \\log \\frac{\\Pr(y = 1)}{1 - \\Pr(y = 1)} = \\beta_0 + \\beta_1\\mathrm{Male} + \\beta_2\\mathrm{Age} \\] piaac_temp &lt;- piaac %&gt;% mutate(male = if_else(gender == &quot;男性&quot;, 1, 0)) %&gt;% select(id, ojt, male, age) logit_res &lt;- glm(data = piaac_temp, ojt ~ male + age, family = &quot;binomial&quot;) logit_res ## ## Call: glm(formula = ojt ~ male + age, family = &quot;binomial&quot;, data = piaac_temp) ## ## Coefficients: ## (Intercept) male age ## -0.006992 0.350124 -0.016442 ## ## Degrees of Freedom: 2727 Total (i.e. Null); 2725 Residual ## Null Deviance: 3594 ## Residual Deviance: 3554 AIC: 3560 係数の推定結果は次のようになる： \\[ \\begin{align} \\log \\frac{\\Pr(y = 1)}{1 - \\Pr(y = 1)} &amp;= -0.007 + 0.35\\mathrm{Male} -0.016\\mathrm{Age} \\\\ \\Pr(y = 1) &amp;= \\frac{ \\exp(-0.007 + 0.35\\mathrm{Male} -0.016\\mathrm{Age}) } { 1 + \\exp(-0.007 + 0.35\\mathrm{Male} -0.016\\mathrm{Age}) } \\end{align} \\] この推定結果にもとづいて、たとえば男性ダミーの平均限界効果（つまり、女性と比べて男性の場合に、OJTを受ける確率がどの程度変化するのか）を求めたいとする。このとき、各個人について、男性の場合の予測確率と、女性の場合の予測確率とをそれぞれ求めた上で、その差を取った値を求める。 \\[ \\begin{align} &amp;\\widehat{\\Pr}(y_i = 1 | Male = 1) - \\widehat{\\Pr}(y_i = 1 | Male = 0) \\\\ &amp;= \\frac{ \\exp(-0.007 + 0.35 -0.016\\mathrm{Age}_i) } { 1 + \\exp(-0.007 + 0.35 -0.016\\mathrm{Age}_i) } - \\frac{ \\exp(-0.007 -0.016\\mathrm{Age}_i) } { 1 + \\exp(-0.007 -0.016\\mathrm{Age}_i) } \\end{align} \\] そして、この値の平均を取った値が、男性ダミーの平均限界効果となる： \\[ \\frac{1}{N}\\sum_{i=1}^N\\left( \\widehat{\\Pr}(y_i = 1 | Male = 1) - \\widehat{\\Pr}(y_i = 1 | Male = 0) \\right) \\] Rで具体的に計算する場合は、次のようになる。 # 推定結果から係数を抽出 logit_res_tidy &lt;- logit_res %&gt;% tidy() intercept &lt;- logit_res_tidy$estimate[1] male_coef &lt;- logit_res_tidy$estimate[2] age_coef &lt;- logit_res_tidy$estimate[3] piaac_temp &lt;- piaac_temp %&gt;% mutate(pr_male = exp(intercept + male_coef * 1 + age_coef * age)/(1 + exp(intercept + male_coef * 1 + age_coef * age))) %&gt;% # 男性（male = 1）の場合の予測確率 mutate(pr_female = exp(intercept + male_coef * 0 + age_coef * age)/(1 + exp(intercept + male_coef * 0 + age_coef * age))) %&gt;% # 女性（male = 0）の場合の予測確率 mutate(pr_diff = pr_male - pr_female) # 男性の場合の予測確率と女性の場合の予測確率の差 # データを見てみる piaac_temp %&gt;% head() ## # A tibble: 6 × 7 ## id ojt male age pr_male pr_female pr_diff ## &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 0 45 0.402 0.321 0.0806 ## 2 2 1 1 48 0.390 0.311 0.0795 ## 3 3 1 1 47 0.394 0.314 0.0798 ## 4 4 0 1 58 0.352 0.277 0.0752 ## 5 6 1 0 35 0.442 0.358 0.0838 ## 6 9 0 1 56 0.359 0.283 0.0761 # pr_diffの平均値を計算 piaac_temp %&gt;% with(mean(pr_diff)) ## [1] 0.08051347 男性ダミーの平均限界効果は0.0805となる。すなわち、女性と比べて男性の場合は、OJTを受ける確率が平均8.05%ポイント高いといえる。 このように、平均限界効果を用いることで、線形確率モデルのときと同じように確率の「差」から結果を解釈することができる。 なお、ロジットモデルの場合は、他の独立変数（今回の場合は年齢）がどの程度であるかによって、独立変数を1単位変化させたときに予測確率がどの程度変化するかが異なる。したがって、予測確率の差pr_diffも一つに定まらず、個人によって異なる値をとることになる。先に計算した予測確率の差pr_diffの分布を確認してみると、このことは明らかである。 piaac_temp %&gt;% ggplot(aes(x = pr_diff)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. 10.4.3 margins()：平均限界効果を計算する marginsパッケージに含まれているmargins関数を使うことで、平均限界効果を簡単に求めることができる。まずは、marginsパッケージをまだインストールしていない場合は、install.packages()関数を使ってインストールする。 install.packages(margins) marginsパッケージを読み込む。 library(margins) 保存した推定結果に対してmargins()を実行するだけで、すべての変数について平均限界効果を求めてくれる。 # 保存した推定結果logit_resの平均限界効果を求めて、結果を保存 margins_logit_res &lt;- margins(logit_res) # 結果を表示 summary(margins_logit_res) ## factor AME SE z p lower upper ## age -0.0038 0.0008 -4.4976 0.0000 -0.0054 -0.0021 ## male 0.0804 0.0182 4.4143 0.0000 0.0447 0.1161 それぞれ、年齢が1単位増加したときの平均限界効果、男性ダミーが1単位増加したとき（女性と比べて男性の場合）の平均限界効果を計算できる。そのほか、標準誤差やp値なども計算される。これらは今まで見てきたものと同様に、推定された平均限界効果が統計的に有意に0と異なるかどうかの仮説検定を行う際に利用することができる。 分析結果を解釈する際に、係数（対数オッズ）だけではなく、平均限界効果も併せて表示することで、より直感的な解釈をすることができ、望ましいだろう。 10.4.4 線形確率モデルの結果との比較 線形確率モデルと平均限界効果とで、結果に違いは生じるのだろうか？両者の結果を比較してみよう。 # 線形確率モデル（ロバスト標準誤差）の推定 reg_res_compare &lt;- lm_robust(data = piaac, ojt ~ gender + age + educ) # ロジットモデルの推定 logit_res_compare &lt;- glm(data = piaac, ojt ~ gender + age + educ, family = &quot;binomial&quot;) # ロジットモデルの結果をもとに平均限界効果を計算 margins_logit_res_compare &lt;- margins(logit_res_compare) # 線形確率モデルと平均限界効果の結果を並べて表示 modelsummary(list(&quot;LPM&quot; = reg_res_compare, &quot;AME&quot; = margins_logit_res_compare), stars = TRUE) /* tinytable css entries after */ .table td.tinytable_css_ns7ko7q3ibpe5ds183sp, .table th.tinytable_css_ns7ko7q3ibpe5ds183sp { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gwvcs0p2uf9ewtv3q4zw, .table th.tinytable_css_gwvcs0p2uf9ewtv3q4zw { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_5e18n5xwfgsh92smmk1h, .table th.tinytable_css_5e18n5xwfgsh92smmk1h { text-align: center; } .table td.tinytable_css_o68z63sg62khxlwhn176, .table th.tinytable_css_o68z63sg62khxlwhn176 { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_pau1b7iuk8lqpux0l08y, .table th.tinytable_css_pau1b7iuk8lqpux0l08y { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_a3r2ma8i9not29g33b7e, .table th.tinytable_css_a3r2ma8i9not29g33b7e { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_ly91dquw9vdoi4bbum4b, .table th.tinytable_css_ly91dquw9vdoi4bbum4b { text-align: left; } .table td.tinytable_css_5a9bc4gnn55nwdoer54z, .table th.tinytable_css_5a9bc4gnn55nwdoer54z { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } LPM AME + p (Intercept) 0.279*** (0.052) gender男性 0.053** 0.054** (0.019) (0.019) age -0.002* -0.002* (0.001) (0.001) educ高校 0.064* 0.066* (0.031) (0.031) educ短大高専 0.165*** 0.169*** (0.034) (0.034) educ大学大学院 0.289*** 0.290*** (0.033) (0.033) Num.Obs. 2728 R2 0.058 R2 Adj. 0.056 AIC 3618.6 3445.4 BIC 3660.0 3480.8 RMSE 0.47 0.47 比べてみると、線形確率モデルとロジットモデルの平均限界効果とでわずかに結果に違いがある。しかし、ほぼ同じ結果になる。 一般的に、サンプル全体で従属変数が1を取る割合が0.3–0.7くらいの範囲であれば、線形確率モデルの推定結果とロジットモデルの平均限界効果の結果はかなり近い値になることが多い。従属変数が1を取る割合が0.3–0.7の範囲を外れて大きくなる（または小さくなる）ほど、両者の隔たりは大きくなることが多い。 10.4.5 ロジットモデルの注意点：モデル間比較 ロジットモデルの注意点として、異なる独立変数を含んだモデル間で係数の大きさを直接比較することができないということが挙げられる25。たとえば、OJTを受けるかどうかを従属変数として、年齢および性別を独立変数としたモデル（Model 1とする）、年齢・性別・学歴を独立変数としたモデル（Model 2とする）の2つを推定したとしよう。 logit_res1 &lt;- glm(data = piaac, ojt ~ gender + age, family = &quot;binomial&quot;) logit_res2 &lt;- glm(data = piaac, ojt ~ gender + age + educ, family = &quot;binomial&quot;) modelsummary(list(&quot;Model 1&quot; = logit_res1, &quot;Model 2&quot; = logit_res2), stars = TRUE, coef_map = c(&quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学&quot; = &quot;大学大学院（vs. 中学）&quot;)) /* tinytable css entries after */ .table td.tinytable_css_0350iz1ca34d3xhu5yaj, .table th.tinytable_css_0350iz1ca34d3xhu5yaj { text-align: center; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_xhiuzwqawchhnodbyara, .table th.tinytable_css_xhiuzwqawchhnodbyara { text-align: center; border-bottom: solid black 0.05em; } .table td.tinytable_css_iqvwqsigutemv2lgzaof, .table th.tinytable_css_iqvwqsigutemv2lgzaof { text-align: center; } .table td.tinytable_css_ade9m0kxgm0da0zakg2g, .table th.tinytable_css_ade9m0kxgm0da0zakg2g { text-align: center; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_kmqz4dbfobi4lu9hllsv, .table th.tinytable_css_kmqz4dbfobi4lu9hllsv { text-align: left; border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_d5ehb1y5ov7w3gn8j95h, .table th.tinytable_css_d5ehb1y5ov7w3gn8j95h { text-align: left; border-bottom: solid black 0.05em; } .table td.tinytable_css_eci8r9tt55mit6bwiswh, .table th.tinytable_css_eci8r9tt55mit6bwiswh { text-align: left; } .table td.tinytable_css_ezxzee24ah9xy1171hvo, .table th.tinytable_css_ezxzee24ah9xy1171hvo { text-align: left; border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Model 1 Model 2 + p 男性（vs. 女性） 0.350*** 0.247** (0.080) (0.086) 年齢 -0.016*** -0.010* (0.004) (0.004) 高校（vs. 中学） 0.360* (0.182) 短大高専（vs. 中学） 0.832*** (0.188) Num.Obs. 2728 2728 AIC 3560.5 3445.4 BIC 3578.2 3480.8 Log.Lik. -1777.230 -1716.687 RMSE 0.48 0.47 Model 1とModel 2を比べると、男性の係数が0.35から0.247に変化していることがわかる。しかしながら、両者の係数の差0.104を、そのまま、学歴を統制することによってModel 1の男性の係数が媒介された分を表すこととして読むことはできない。 【なぜ？→説明については作成中】 もし、対数オッズ比の大きさを異なるモデル間で比較したい場合には、KHB methodなどの方法が提案されている26。 10.5 まとめ 従属変数が2値変数のときには、ロジスティック回帰分析（ロジットモデル）を使用するのが望ましいとされている。 ロジスティック回帰分析のときにも線形回帰分析と同様に、統制変数の選択、連続変数の関数型、交互作用項の追加などを検討できる。 ロジスティック回帰分析の係数は、対数オッズ比を表す。指数を取ることで、オッズ比に変換して解釈できる。 オッズ比は直感的な解釈が難しいが、平均限界効果を併せて計算することで、独立変数1単位の増加に対して従属変数が1を取る確率がどれくらい変化するのか、という確率の差として結果を解釈できる。 なお、今回のように従属変数が2値の場合のロジスティック回帰分析を指して「二項ロジットモデル（binomial logit model）」ということもある。従属変数が順序変数（1, 2, 3, 4…と数値があるが、値の大小関係を表しているのみで、値の幅は均等ではないような性質を持つ変数）であるようなロジットモデルのことを「順序ロジットモデル（ordered logit model）」、従属変数が多値変数（3つ以上のカテゴリを持ち、それらの値の間にいずれも順序関係がないような性質を持つ変数）であるようなロジットモデルのことを「多項ロジットモデル（multinomial logit model）」とよぶ。↩︎ ただしこれは交互作用項の結果については当てはまらないことがある。くわしくはBloome, Deirdre, and Shannon Ang. 2022. “Is the Effect Larger in Group A or B? It Depends: Understanding Results from Nonlinear Probability Models.” Demography 59(4):1459–88.を参照。↩︎ この点についての説明はMood, Carina. 2010. “Logistic Regression: Why We Cannot Do What We Think We Can Do, and What We Can Do about It.” European Sociological Review 26(1):67–82.などに詳しい。↩︎ KHB methodの説明については、Karlson, Kristian Bernt, Anders Holm, and Richard Breen. 2012. “Comparing Regression Coefficients between Same-Sample Nested Models Using Logit and Probit: A New Method.” Sociological Methodology 42(1):286–313.またはBreen, Richard, Kristian Bernt Karlson, and Anders Holm. 2013. “Total, Direct, and Indirect Effects in Logit and Probit Models.” Sociological Methods &amp; Research 42(2):164–91.を参照。なお、Stataでの実装方法についてはKohler, Ulrich, Kristian Bernt Karlson, and Anders Holm. 2011. “Comparing Coefficients of Nested Nonlinear Probability Models.” The Stata Journal 11(3):420–38.に記載がある。↩︎ "],["domain.html", "Chapter 11 社会学のデータ分析でよくある処理 11.1 SSM職業小分類を大分類にまとめる 11.2 旧制学歴と新制学歴の対応 11.3 年収カテゴリを連続変数にする 11.4 都道府県変数の加工", " Chapter 11 社会学のデータ分析でよくある処理 本章では、日本の社会学業界を念頭においたときのデータ分析でよくある処理についてランダムにまとめる。 本章のコードを実行するためには以下のパッケージをあらかじめ読み込んでおく必要がある。 library(tidyverse) 11.1 SSM職業小分類を大分類にまとめる いくつかの調査では、調査対象者に仕事の内容を自由記述で尋ね、その回答をもとに、職業名を割り当てているものがある。このときに使われる職業分類が1995年SSM職業小分類と呼ばれるものである。1995年SSM職業小分類は約200の小分類からなり、それぞれの職業に番号が振られている。この番号を振った調査を以下に列挙する。 調査名 調査年 現職職業小分類 初職職業小分類 前職職業小分類 15歳時父親職業小分類 15歳時母親職業小分類 社会階層と社会移動調査（SSM） 1995 有 有 有（職歴変数を使えば可能、今回は省略） 有（「主な仕事」） 有（「主な仕事」） 2005 有 有 有（職歴変数を使えば可能、今回は省略） 有 有 2015 有 有 有（職歴変数を使えば可能、今回は省略） 有 有 日本版総合的社会調査（JGSS） 2000 有 有 有（無職で就業経験ある者のみ） 有 2001 有 有 有（無職で就業経験ある者のみ） 有 2002 有 有 有（無職で就業経験ある者のみ） 有 2003 有 有 2005 有 有 有 2006 有 有 有 2008 有 有 有 2010 有 有 有 2012 有 有 有（無職で就業経験ある者のみ） 有 2015 有 有 有（無職で就業経験ある者のみ） 有 東大社研パネル調査（JLPS） 2007- 有 有 有 有 ふつうはこうした200個近い分類をそのまま分析に使うということはなく、少数のカテゴリにまとめて使う。カテゴリへのまとめ方はいくつも種類があるが、ここでは代表的なものとして「SSM職業大分類」と「国勢調査職業分類」の2つを準備する。 なおこの2つへの割当てについては麦山が作成したが、妥当かどうかは各自確認すること。700番台、800番台にも有効なコードを振っている。また888や8888（非該当）、999や9999（無回答）はNAとなるようにしている。 11.1.1 JGSSの場合 たとえばこのようなデータフレーム（jgssとする）があったとする。 jgss %&gt;% head() ## # A tibble: 4 × 4 ## xxjob xxlstjb xxfstjb ppjbxx15 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 509 888 573 531 ## 2 606 888 571 999 ## 3 554 888 558 681 ## 4 999 556 559 588 次のようなコードを実行することで、現職、初職、前職、父職のそれぞれに対して2種類の職業大分類を付与することができる。前職に関する質問項目が含まれていない場合には、前職に関わる部分のコードを削除する必要がある。 また、読み込んだデータ形式によっては変数名が大文字のことがある（xxjobではなくXXJOBというように）。このような場合は手持ちのデータの変数名を小文字に変換するか、以下のコードのxxjobなどを大文字に直すかどちらかを行う必要がある。 ssm_code &lt;- read_csv(&quot;https://raw.githubusercontent.com/mugiyama/seminar_sociology_r/master/data/ssm_occupation_code.csv&quot;) ## Rows: 206 Columns: 3 ## ── Column specification ────────────────────────────── ## Delimiter: &quot;,&quot; ## dbl (3): ssm1995, ssmocc, censusocc ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ssm_code_current &lt;- ssm_code %&gt;% rename(xxjob = 1, ssmocc_current = 2, censusocc_current = 3) ssm_code_first &lt;- ssm_code %&gt;% rename(xxfstjb = 1, ssmocc_first = 2, censusocc_first = 3) ssm_code_last &lt;- ssm_code %&gt;% rename(xxlstjb = 1, ssmocc_last = 2, censusocc_last = 3) # 前職が含まれていないJGSSデータの場合は削除 ssm_code_father &lt;- ssm_code %&gt;% rename(ppjbxx15 = 1, ssmocc_father = 2, censusocc_father = 3) label_ssm &lt;- c(&quot;専門&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;熟練&quot;,&quot;半熟練&quot;,&quot;非熟練&quot;,&quot;農業&quot;) label_census &lt;- c(&quot;専門・技術&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;サービス&quot;,&quot;保安&quot;,&quot;農林漁業&quot;,&quot;運輸・通信&quot;,&quot;製造・制作&quot;,&quot;定置機関運転・建設機械運転・電気作業&quot;,&quot;採掘・建設・労務&quot;) jgss &lt;- jgss %&gt;% left_join(ssm_code_current, by = &quot;xxjob&quot;) %&gt;% left_join(ssm_code_first, by = &quot;xxfstjb&quot;) %&gt;% left_join(ssm_code_last, by = &quot;xxlstjb&quot;) %&gt;% # 前職が含まれていないJGSSデータの場合は削除 left_join(ssm_code_father, by = &quot;ppjbxx15&quot;) %&gt;% mutate(ssmocc_current_name = factor(ssmocc_current, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_first_name = factor(ssmocc_first, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_last_name = factor(ssmocc_last, levels = 1:8, labels = label_ssm)) %&gt;% # 前職が含まれていないJGSSデータの場合は削除 mutate(ssmocc_father_name = factor(ssmocc_father, levels = 1:8, labels = label_ssm)) %&gt;% mutate(censusocc_current_name = factor(censusocc_current, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_first_name = factor(censusocc_first, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_last_name = factor(censusocc_last, levels = 1:11, labels = label_census)) %&gt;% # 前職が含まれていないJGSSデータの場合は削除 mutate(censusocc_father_name = factor(censusocc_father, levels = 1:11, labels = label_census)) もともとの変数と作成した変数の一覧を確認しておく。 jgss %&gt;% glimpse() ## Rows: 4 ## Columns: 20 ## $ xxjob &lt;dbl&gt; 509, 606, 554, 999 ## $ xxlstjb &lt;dbl&gt; 888, 888, 888, 556 ## $ xxfstjb &lt;dbl&gt; 573, 571, 558, 559 ## $ ppjbxx15 &lt;dbl&gt; 531, 999, 681, 588 ## $ ssmocc_current &lt;dbl&gt; 1, 6, 3, NA ## $ censusocc_current &lt;dbl&gt; 1, 8, 3, NA ## $ ssmocc_first &lt;dbl&gt; 4, 4, 3, 3 ## $ censusocc_first &lt;dbl&gt; 4, 4, 3, 3 ## $ ssmocc_last &lt;dbl&gt; NA, NA, NA, 3 ## $ censusocc_last &lt;dbl&gt; NA, NA, NA, 3 ## $ ssmocc_father &lt;dbl&gt; 1, NA, 5, 4 ## $ censusocc_father &lt;dbl&gt; 1, NA, 14, 5 ## $ ssmocc_current_name &lt;fct&gt; 専門, 半熟練, 事務, NA ## $ ssmocc_first_name &lt;fct&gt; 販売, 販売, 事務, 事務 ## $ ssmocc_last_name &lt;fct&gt; NA, NA, NA, 事務 ## $ ssmocc_father_name &lt;fct&gt; 専門, NA, 熟練, 販売 ## $ censusocc_current_name &lt;fct&gt; 専門・技術, 運輸・通信, 事務, NA ## $ censusocc_first_name &lt;fct&gt; 販売, 販売, 事務, 事務 ## $ censusocc_last_name &lt;fct&gt; NA, NA, NA, 事務 ## $ censusocc_father_name &lt;fct&gt; 専門・技術, NA, NA, サービス 11.1.2 SSMの場合 たとえばこのようなデータフレーム（ssmとする）があったとする。 ssm %&gt;% head() ## # A tibble: 4 × 4 ## q02d q07f q23_1d q23_3d ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 608 539 601 531 ## 2 597 687 655 999 ## 3 588 631 554 681 ## 4 999 665 545 588 次のようなコードを実行することで、現職、初職、前職、父職のそれぞれに対して2種類の職業大分類を付与することができる。前職に関する質問項目が含まれていない場合には、前職に関わる部分のコードを削除する必要がある。 ssm_code &lt;- read_csv(&quot;https://github.com/mugiyama/seminar_sociology_r/raw/master/data/ssm_occupation_code.csv&quot;) ## Rows: 206 Columns: 3 ## ── Column specification ────────────────────────────── ## Delimiter: &quot;,&quot; ## dbl (3): ssm1995, ssmocc, censusocc ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ssm_code_current &lt;- ssm_code %&gt;% rename(q02d = 1, ssmocc_current = 2, censusocc_current = 3) ssm_code_first &lt;- ssm_code %&gt;% rename(q07f = 1, ssmocc_first = 2, censusocc_first = 3) ssm_code_father &lt;- ssm_code %&gt;% rename(q23_1d = 1, ssmocc_father = 2, censusocc_father = 3) ssm_code_mother &lt;- ssm_code %&gt;% rename(q23_3d = 1, ssmocc_mother = 2, censusocc_mother = 3) label_ssm &lt;- c(&quot;専門&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;熟練&quot;,&quot;半熟練&quot;,&quot;非熟練&quot;,&quot;農業&quot;) label_census &lt;- c(&quot;専門・技術&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;サービス&quot;,&quot;保安&quot;,&quot;農林漁業&quot;,&quot;運輸・通信&quot;,&quot;製造・制作&quot;,&quot;定置機関運転・建設機械運転・電気作業&quot;,&quot;採掘・建設・労務&quot;) ssm &lt;- ssm %&gt;% left_join(ssm_code_current, by = &quot;q02d&quot;) %&gt;% left_join(ssm_code_first, by = &quot;q07f&quot;) %&gt;% left_join(ssm_code_father, by = &quot;q23_1d&quot;) %&gt;% left_join(ssm_code_mother, by = &quot;q23_3d&quot;) %&gt;% mutate(ssmocc_current_name = factor(ssmocc_current, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_first_name = factor(ssmocc_first, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_father_name = factor(ssmocc_father, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_mother_name = factor(ssmocc_mother, levels = 1:8, labels = label_ssm)) %&gt;% mutate(censusocc_current_name = factor(censusocc_current, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_first_name = factor(censusocc_first, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_father_name = factor(censusocc_father, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_mother_name = factor(censusocc_mother, levels = 1:11, labels = label_census)) もともとの変数と作成した変数の一覧を確認しておく。 ssm %&gt;% glimpse() ## Rows: 4 ## Columns: 20 ## $ q02d &lt;dbl&gt; 608, 597, 588, 999 ## $ q07f &lt;dbl&gt; 539, 687, 631, 665 ## $ q23_1d &lt;dbl&gt; 601, 655, 554, 545 ## $ q23_3d &lt;dbl&gt; 531, 999, 681, 588 ## $ ssmocc_current &lt;dbl&gt; 2, 3, 4, NA ## $ censusocc_current &lt;dbl&gt; 8, 6, 5, NA ## $ ssmocc_first &lt;dbl&gt; 1, 7, 5, 5 ## $ censusocc_first &lt;dbl&gt; 1, 15, 11, 12 ## $ ssmocc_father &lt;dbl&gt; 8, 5, 3, 2 ## $ censusocc_father &lt;dbl&gt; 7, 12, 3, 2 ## $ ssmocc_mother &lt;dbl&gt; 1, NA, 5, 4 ## $ censusocc_mother &lt;dbl&gt; 1, NA, 14, 5 ## $ ssmocc_current_name &lt;fct&gt; 管理, 事務, 販売, NA ## $ ssmocc_first_name &lt;fct&gt; 専門, 非熟練, 熟練, 熟練 ## $ ssmocc_father_name &lt;fct&gt; 農業, 熟練, 事務, 管理 ## $ ssmocc_mother_name &lt;fct&gt; 専門, NA, 熟練, 販売 ## $ censusocc_current_name &lt;fct&gt; 運輸・通信, 保安, サービス, NA ## $ censusocc_first_name &lt;fct&gt; 専門・技術, NA, 採掘・建設・労務, NA ## $ censusocc_father_name &lt;fct&gt; 農林漁業, NA, 事務, 管理 ## $ censusocc_mother_name &lt;fct&gt; 専門・技術, NA, NA, サービス 11.2 旧制学歴と新制学歴の対応 広い年齢層を対象にした調査であったり、親の最終学歴を尋ねているような調査では、最終学歴の選択肢に戦前に卒業した人（旧制学歴保有者）が含まれていることがあり、質問項目の選択肢にも旧制学歴が含まれていることがある。こうした旧制学歴を戦後の新制学歴に合わせたい場合には、諸説あるが、たとえばもっとも教育年数の近い学歴に割り当てるという方法がある。 このような割り当てによる統合学歴の対応表を以下の3パターンにまとめた。 旧制学歴 新制学歴 統合学歴（5分類） 統合学歴（4分類） 統合学歴（3分類） 旧制尋常小学校 新制中学校 中学 中学 初等教育 旧制高等小学校 新制中学校 中学 中学 初等教育 旧制中学校・高等女学校 新制高校 高校 高校 中等教育 旧制実業学校 新制高校 高校 高校 中等教育 - 専修学校高等課程* 高校 高校 中等教育 - 専門学校（専修学校専門課程）* 専門学校 高校 高等教育** 旧制師範学校 新制短大・高専 短大高専 短大高専 高等教育 旧制高校・専門学校・高等師範学校 新制短大・高専 短大高専 短大高専 高等教育 旧制大学 新制大学 大学大学院 大学大学院 高等教育 旧制大学 新制大学院 大学大学院 大学大学院 高等教育 *専修学校高等課程は中学卒業者を対象として職業教育を実施する機関。これに対して専修学校専門課程は高校卒業者を対象として職業教育を実施する機関で、ふつう「専門学校」というときにはこちらを指すことが多い。調査票の選択肢に「専門学校」が設けられていた場合も、対象者（たぶん調査設計者も）はおそらくこちらを想定していると思われる。 **国際標準教育分類（ISCED2011）では専門学校はレベル5（Short-cycle tertiary education）に分類され高等教育相当となっている。しかし、伝統的に（？）高等教育に含まないこともある。これに関しては込み入った議論がある。例えば多喜弘文，2018，「学歴としての専門学校に関する基礎的検討」中澤渉編『2015年SSM研究報告書5 教育II』2015年SSM調査研究会，57–80．などを参照のこと。 11.3 年収カテゴリを連続変数にする 11.3.1 年収を連続変数にする たとえば2015年SSM調査では個人、配偶者、ならびに世帯年収を以下のような選択肢を用いて聴取している。 番号 内容 1 なし 2 25万円未満 3 25〜50万円未満 … 11 300〜350万円未満 12 350〜400万円未満 … 30 2050万円以上 ssm %&gt;% head() # データは架空のものです ## # A tibble: 6 × 1 ## q48 ## &lt;dbl&gt; ## 1 3 ## 2 5 ## 3 12 ## 4 9 ## 5 10 ## 6 4 このデータに対して以下のコードを実行することで、時間あたり賃金の変数wageを計算することができる。 ssm &lt;- ssm %&gt;% mutate(income = case_when( q48 == 1 ~ 0, q48 == 2 ~ 12.5, q48 == 3 ~ 37.5, q48 == 4 ~ 62.5, q48 == 5 ~ 87.5, q48 == 6 ~ 112.5, q48 == 7 ~ 137.5, q48 == 8 ~ 175, q48 == 9 ~ 225, q48 == 10 ~ 275, q48 == 11 ~ 325, q48 == 12 ~ 375, q48 == 13 ~ 425, q48 == 14 ~ 500, q48 == 15 ~ 600, q48 == 16 ~ 700, q48 == 17 ~ 800, q48 == 18 ~ 900, q48 == 19 ~ 1000, q48 == 20 ~ 1100, q48 == 21 ~ 1200, q48 == 22 ~ 1300, q48 == 23 ~ 1400, q48 == 24 ~ 1500, q48 == 25 ~ 1600, q48 == 26 ~ 1700, q48 == 27 ~ 1800, q48 == 28 ~ 1900, q48 == 29 ~ 2000, q48 == 30 ~ 2050 * 1.4)) ssm %&gt;% head() ## # A tibble: 6 × 2 ## q48 income ## &lt;dbl&gt; &lt;dbl&gt; ## 1 3 37.5 ## 2 5 87.5 ## 3 12 375 ## 4 9 225 ## 5 10 275 ## 6 4 62.5 2015年SSM調査では年収についての質問項目の選択肢に「2050万円以上」というカテゴリがあり、このカテゴリを選んだ回答者の年収が実際にどれくらいの値であるのかはわからない。2051万円かもしれないし、1億円かもしれない。このような場合にどのような値を振るべきなのかについては諸説あり、よくわからない。下限（この場合は2050万円）の値に1.4をかけているものもあれば、1.2をかけているものもある。あるいは、そもそもわからないのだから欠損にすべきという考え方もある。ここでは一つの方法として1.4をかけている、すなわち、2050万円以上と回答した人の年収はだいたい2870万円くらいだと考えているわけなのだが、これが正しい方法であるかどうかはわからない。 11.3.2 時間あたり賃金を作成する 上述の方法で年収を連続変数にしたとしよう。労働から得られる報酬を測定する場合、個人年収というのは必ずしも適切な指標ではないかもしれない。というのも、人によって労働時間の長さは違うので、同じ年収であったとしても、労働時間が短い人のほうがよりその報酬は高いと考えられるからである。 そこで、年収を1時間あたりの年収（時間給）に直し、それを分析に用いることがある。いま、2005年SSM調査のデータを持っているとする（数値は架空例）。 変数 説明 q2_f_1 1日の労働時間 q2_f_2 週あたり労働時間。わからない場合には99、無回答の場合には999という値が入っている。 q2_f_3 月あたり労働時間（週の労働時間を回答している場合は回答しない）。わからない場合には99、無回答の場合には999という値が入っている。 ssm %&gt;% head() ## # A tibble: 6 × 2 ## q48 income ## &lt;dbl&gt; &lt;dbl&gt; ## 1 3 37.5 ## 2 5 87.5 ## 3 12 375 ## 4 9 225 ## 5 10 275 ## 6 4 62.5 時間あたり賃金は、年収 / (1日の労働時間 × 月の労働日数 × 12ヶ月)で計算できる。ここでは、月の労働日数を回答していないが週の労働日数を回答している場合は、週の労働日数×4（週）を、月の労働日数とみなすことにしよう。 ssm &lt;- ssm %&gt;% mutate(workhour = if_else(q2_f_1 &lt; 99, q2_f_1, NA_real_)) %&gt;% mutate(workmonth = case_when( q2_f_3 &lt; 99 ~ q2_f_3, (q2_f_3 == 99 | q2_f_3 == 999) &amp; q2_f_2 &lt; 99 ~ q2_f_2 * 4 )) %&gt;% mutate(wage = (income * 10000) / (workhour * workmonth * 12)) 11.4 都道府県変数の加工 たとえば居住都道府県や15歳時居住都道府県などの情報を使って、居住都道府県によって進学機会が異なるといったことを分析したいとする。データには次のように都道府県を示す変数prefが含まれているとする。 df %&gt;% head() ## # A tibble: 6 × 1 ## pref ## &lt;int&gt; ## 1 1 ## 2 2 ## 3 3 ## 4 4 ## 5 5 ## 6 6 11.4.1 都道府県にラベルをつける 上記の番号にラベルをつけるとそれぞれがどの都道府県を指すのか分かるのでより便利だろう。以下のように、ラベルをつけた変数pref_labを作成する。 df &lt;- df %&gt;% mutate(pref_lab = factor(pref, levels = 1:47, labels = c(&quot;北海道&quot;,&quot;青森&quot;,&quot;岩手&quot;,&quot;宮城&quot;,&quot;秋田&quot;,&quot;山形&quot;,&quot;福島&quot;,&quot;茨城&quot;,&quot;栃木&quot;,&quot;群馬&quot;,&quot;埼玉&quot;,&quot;千葉&quot;,&quot;東京&quot;,&quot;神奈川&quot;,&quot;新潟&quot;,&quot;富山&quot;,&quot;石川&quot;,&quot;福井&quot;,&quot;山梨&quot;,&quot;長野&quot;,&quot;岐阜&quot;,&quot;静岡&quot;,&quot;愛知&quot;,&quot;三重&quot;,&quot;滋賀&quot;,&quot;京都&quot;,&quot;大阪&quot;,&quot;兵庫&quot;,&quot;奈良&quot;,&quot;和歌山&quot;,&quot;鳥取&quot;,&quot;島根&quot;,&quot;岡山&quot;,&quot;広島&quot;,&quot;山口&quot;,&quot;徳島&quot;,&quot;香川&quot;,&quot;愛媛&quot;,&quot;高知&quot;,&quot;福岡&quot;,&quot;佐賀&quot;,&quot;長崎&quot;,&quot;熊本&quot;,&quot;大分&quot;,&quot;宮崎&quot;,&quot;鹿児島&quot;,&quot;沖縄&quot;))) 確認してみると、各値にラベルをつけた変数を作成できたことがわかる。 df %&gt;% head() ## # A tibble: 6 × 2 ## pref pref_lab ## &lt;int&gt; &lt;fct&gt; ## 1 1 北海道 ## 2 2 青森 ## 3 3 岩手 ## 4 4 宮城 ## 5 5 秋田 ## 6 6 山形 11.4.2 都道府県レベルの指標を外挿する たとえば、都道府県ごとの大学卒業者割合を用いて、大卒割合が高い都道府県ほど、大学進学率が高いという仮説を検証したいとする。このような場合には、都道府県番号ごとに大学進学率を記載したExcelファイルを別に作成して、そのファイルを読み込み、left_join()を使ってもとのデータにくっつけるとよい。たとえば、以下のような形式のExcelファイルを作るとする27。 df_indicator %&gt;% head() ## # A tibble: 6 × 2 ## pref univrate ## &lt;int&gt; &lt;dbl&gt; ## 1 1 11.3 ## 2 2 9.1 ## 3 3 9.7 ## 4 4 14.3 ## 5 5 9 ## 6 6 10.5 このデータにたとえば「df_indicator.xlsx」と名前をつけて保存し、dataフォルダに入れる。このデータを読み込む。 library(readxl) # Excelファイルを読み込むために使うパッケージ df_indicator &lt;- read_excel(&quot;data/df_indicator.xlsx&quot;) 読み込んだデータをもとのデータにくっつける。 df &lt;- df %&gt;% left_join(df_indicator, by = &quot;pref&quot;) くっつけたデータは次のようになり、たしかに作成した変数をうまく結合することができているとわかる。 df %&gt;% head() ## # A tibble: 6 × 3 ## pref pref_lab univrate ## &lt;int&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 1 北海道 11.3 ## 2 2 青森 9.1 ## 3 3 岩手 9.7 ## 4 4 宮城 14.3 ## 5 5 秋田 9 ## 6 6 山形 10.5 なおここでの都道府県ごとの大学卒業者割合は2010年国勢調査より取得した。卒業者に占める大学・大学院卒割合を意味する。↩︎ "],["writepaper.html", "Chapter 12 論文のまとめ方 12.1 全体の構成 12.2 タイトル 12.3 要約 12.4 序論 12.5 先行研究・理論枠組み・仮説 12.6 方法 12.7 結果 12.8 結論 12.9 謝辞 12.10 参考文献 12.11 そのほかの形式上の注意事項", " Chapter 12 論文のまとめ方 本章では、データ分析の結果をもとに論文をまとめる際の構成や注意事項を説明する。 もちろん、ここで紹介する形式は絶対というわけではなく、標準的な構成の一例に過ぎない。しかし、標準的な構成がどのようなものであるのかを押さえておくと、論文を書く上で何を考えればよいのか、いったい何をどのように書けばよいのか、といったことが明確になるというメリットがある。 なお、期末レポートの分量は、Microsoft Wordの左下の文字数（単語数）表記で12,000字以上〜20,000字以内とする（タイトル・名前・要約・参考文献・脚注などすべて含む）。図表内の文字は文字数に含まないが、図表1点につき400字と換算して文字数に含める。 12.1 全体の構成 おおまかにいって、実証研究論文はIMRaD（Introduction, Methods, Results, and Discussion）とよばれる形式をとる。社会学の場合は先行研究や理論を長めに検討するため、IntroductionとMethodの間にLiterature review（先行研究の検討）あるいは、Theoretical framework（理論枠組み）といった章が入り、全部で5章程度の構成を標準とすることが多い。 よくある構成は次のようなものである。 タイトル 要約 序論 先行研究・理論枠組み・仮説 方法 データと分析対象 変数 分析手法 結果 記述的分析（クロス表、平均値の比較など） 回帰分析など 結論 謝辞 参考文献 なお、論文の構成を学ぶためには、たくさんの（それなりに質の高い）論文を読んで構成を体得するのが最も近道である。あるいは、標準的な構成にしたがった論文を参考にして、その構成を真似るのもよいだろう28。 論文のまとめ方について注記しておく。上記のように論文の標準的な構成を示したが、これは上から順番に書いていくものではまったくない29。書けるところは先に書いてしまってもよい。また、結果を修正したり結論に変更が生じれば、それに対応して序論や先行研究の部分も変わることは普通である。執筆の過程で、さらに調べるべき先行研究が出てくることもある。何度も行き来しながら、少しずつ全体を完成させていくものである。 データを分析する前にあらかじめ研究計画を立てたものの、分析の過程で、研究計画の中身、たとえば取り上げる先行研究や、問い、あるいは用いる変数についての修正を行ったりしたと思われる。こうしたことは当然起こることなので、はじめに作成した研究計画に固執する必要はなく、適宜取り上げる先行研究などを変更しても構わない。タイトルなども変更して、より研究の中身を的確に表すようなものに変更しても問題ない。 ただし、分析結果を見たあとに、同じデータを用いて、当初立てていなかった仮説をあたかも最初から立てていたかのように偽装して議論を組み立てるのは、厳密に不正行為とは言えないものの、「疑わしい研究行為」（Questionable Research Practice）として懸念されている。これは避けた方が良い。「問いを立てる→仮説を立てる（予想する）→実証する」というのが社会科学研究の基本であり、「何か分析して結果を見る→結果をよく見せるように問いを立てる→結果に合うように仮説を修正する」、というのは間違った手順である30。 12.2 タイトル タイトルは、その論文が何の論文であるのかを示す最も重要な箇所となる。そのため、何をやっているのかがひと目でわかるタイトルを付けることが大事である。「期末レポート」はタイトルではない。 たとえば「XがYに与える影響」とか、「X1とX2の間にYの格差が生まれる要因」とか、そういったタイトルがつくことが多い。具体的にどのようなタイトルがついているかは、先行研究を参考にしよう。 12.3 要約 400字以内の要約をつける。要約は論文全体の内容をコンパクトにまとめたもので、要約を読めば論文の概要がわかる、というものになっている必要がある31。標準的には、次のように構成することが多い。字数がもっと長い場合には、今後の課題を加えたり、結果についてよりくわしく書く。 問題背景と先行研究の限界（1–2文） 目的・問い（1文） 方法（1文） 結果（2–3文） 結論（1文） 12.4 序論 序論は読者の関心を引きつけて自分の問いへと導く章であると同時に、論文全体の見取り図を示す章である。次の全3〜5段落程度で構成する。ちょうど、研究計画書について説明した第1章のうち、「研究背景」「研究目的・問い」で言及した内容と意識することは同じである。もちろん、データ分析を経て多かれ少なかれ研究背景や問いを修正したり発展させたり、先行研究のリサーチを進めて再検討した部分もあるだろうから、研究計画書とまったく同じに書く必要はない。 12.4.1 問題背景（1段落） 研究で扱うトピックが社会問題としてand/or社会学的に重要であることを述べる。 もちろん、「自分が関心を持った」というのは最初のモチベーションとして大事だが、「自分が関心をもった」というだけでは、他の人にとっては説得的できない。他の人にとって関心をもってもらえるような理由を述べることが大事である。 12.4.2 先行研究の検討（1–2段落） 先に述べた問題に関連して、先行研究がこれまでに何を明らかにし、何を明らかにしていないのか、あるいは先行研究に存在する限界点を提示する。 ここでは、先行研究の内容を一つひとつ詳しく述べるのではなく、調べた先行研究をまとめた全体像を示す。この全体像から、（重要であるにもかかわらず）明らかになっていないこと・解決されていない課題が何であるのかを示す。 12.4.3 研究目的と方法（1–2段落） 研究目的（問い）を提示する。「本稿では、xxxを明らかにする」「どの程度yyyなのか？」など、何をやるのかが明確になるような具体的な目的や問いを提示する。 さらに、上記の問いに答えるための方法について述べるとよい。 12.5 先行研究・理論枠組み・仮説 この章では、序論で述べた背景および研究目的に照らして、必要となる情報をよりくわしくまとめ、分析への橋渡しをする。便宜的にこれを「第2章」とよぼう。通常、章の下に2–3程度の節を設ける。論文によって分け方は様々なので、これと決まった形式はない。しかし、なんでも書けばよいということではない。ここでは、いくつか既存論文の例を紹介して、どのようにこの章が構成されているのかを見ていこう。 Mugiyama, Ryota and kohei Toyonaga. 2021. “Role of Cohort Size in Trends in Class and Occupational Returns to Education at First Job: The Case of Japan.” European Sociological Review. 論文の背景と目的：高学歴化が進むと学歴（大卒資格）の価値が低下し、大卒であったとしてもよい職業には就けなくなるとされている。しかし、実は高学歴化が進んでもあまりそうした傾向が見られない社会がある。こうした社会では、高学歴化（大卒割合の増加）と並行して少子化（若いコーホートの人数の減少）が進んだために、大卒者が就くことのできるよい職業が足りなくなるといった変化が起こらなかったのではないだろうか？そこで、高学歴化と並行して少子化が進んだ社会である日本のデータを分析して、この仮説を検証する。 この論文の「第2章」は、上記の背景と問いに対応する、次の内容から構成されている。 先行研究における学歴と職業の関係に対する説明 なぜ少子化（コホートの人数の減少）が起こると大卒は有利になるのか 日本における高学歴化と少子化のトレンド（および仮説） 麦山亮太，2017，「職業経歴と結婚への移行：雇用形態・職種・企業規模と地位変化の効果における男女差」『家族社会学研究』29(2): 129-141． 論文の背景と目的：不安定な雇用は日本をはじめ先進諸国における家族形成、とりわけ結婚の遅れの原因と目されており、これは日本でも例外ではない。しかしながら、雇用形態以外の労働市場における地位は結婚への移行とどのように関係しているのか、および、地位が変わることがどのように関係しているのかといった点については十分に明らかになっていない。そこで、雇用形態だけでなく職種・企業規模がどのような効果を持つのか、および、地位の（非）変化がそれぞれ結婚に対してどのような効果を持つのかを明らかにする。 この論文の「第2章」は次の内容から構成されている。 地位と結婚への移行の関係を説明する理論 職種と企業規模はなぜ・どのように結婚への移行と関係をもつと考えられるか 地位の（非）変化はなぜ・どのように結婚への移行と関係をもつと考えられるか 上記の論文の例のように、いずれも序論で提示した背景と目的から導かれる疑問点に合わせて、その内容を詳述するかたちで書かれるのが理想である32。一般的にいって、「第2章」には次のような内容が書かれる傾向がある（すべて書く必要はない）。 先行研究における（現象を説明する）理論 先行研究における知見 先行研究の問題点 先行研究の問題点の克服方法 仮説とその根拠 もちろん、すぐにこのような構成を導くのはとても難しいので、はじめはお手本となる論文をみつけて、その構成や書き方をまねたりしてみるのがよい。 12.6 方法 方法では、用いるデータと分析対象、分析に使用した変数、分析手法を書く。 12.6.1 データと分析対象 第1段落では、何の調査データを使用するのか、そのデータがいつ、どのような人を対象にして、どのように収集されたのかを書く。また、このデータが研究目的に照らして適切なデータであること、その理由を書く。 第2段落では、上記調査データのうち誰を分析の対象とするのかを書く（例:25–64歳の有業の男女、ひとり親世帯のみ、etc）。可能であれば、もともとの分析対象者の人数と、欠損値（NA）を除いた後の人数とを書く。 12.6.2 変数 分析に使用する変数について書く。それぞれ、変数が何を指していて、どのように定義されたのかを正確に説明する33。「他の人が読んだら自分と同じように理解できるか」というのを意識しながら書くとよい。おおむね、このような順番で変数を説明していくことが多い： まず最初に、従属変数について書く。変数の説明については、たとえばたんに「最終学歴を使う」とだけ書くのではなく、どのようなカテゴリに分けたのかといったことまで書く。いくつかの変数を組み合わせて加工する場合（例：年収と労働時間を組み合わせて時間あたり賃金の変数を作成した場合）には、その手続きについても書く。分野において一般的でない変数については、どのような質問項目でそれを尋ねているのかということについても書く。 ついで、独立変数について書く。とくに、最も主眼となる変数を一番はじめに書く。男女で賃金がどの程度異なるのかを分析するという場合であれば性別、ひとり親世帯出身者とふたり親世帯出身者で教育達成がどの程度異なるのかを分析するという場合であれば世帯構成（ひとり親か、ふたり親か）が、ここに書くべき変数ということになる。 その次に、媒介変数や交互作用の検討に使う変数について書く。男女の賃金格差が職業の違いによってどの程度説明できるのかを分析するという論文であれば、職業に関する説明がここに書くべき内容になる。このような変数がない場合には、省略してよい。 最後に、その他の統制変数について書く。 なお変数については見出しをつけて（箇条書きにして）、一つひとつ説明していくというスタイルもあるので、好きな書き方で書くと良い。もちろんその場合であっても、その変数がどのように作成されたのかを丁寧に説明する。 12.6.3 分析手法 どのように分析を行うかを書く。 一般的でない分析手法を使う場合には、その手法についての具体的な説明が必要。説明が必要かどうかは、聞く人の理解度によって異なる。この授業では、度数分布、クロス集計、相関係数、平均値の比較、回帰分析くらいであれば、説明は不要。それ以外の手法を使う場合には、説明を書く。 12.7 結果 結果では、どのような分析をしたのか、その結果について記述する。自身の提示した問いに関係するものだけを書き、そうでないものについては（たとえそれがどんなに興味深い内容であったとしても）書く必要はない。 表や図を使う場合、細かい数字を一つひとつ確認する必要はない。しかし、仮に読者が表や図を見なかったり、あるいはそれを読むことができる知識を持っていなかったとしても、どのような結果なのか本文だけを読めば理解できるような記述が望ましい。まずは、「もしこの授業を取っていない（=統計や社会学を勉強していない）大学の友だちがゼミの課題文献でこのレポートを読んだとしたら、理解できるだろうか？」というのが一つの目安になるだろう。 原則として「結果」の部分では考察や解釈には大きく踏み込まず、結果が表すことの意味については「結論」の部分で論じる。 「第2章」の部分と同じく、結果の構成は比較的自由度が高く、必ずしも以下のように分ける必要はない。ただし、基本的には単純な分析から難しい分析へと展開していくことが多く（たとえば平均値の比較→重回帰分析）、その逆はほとんどない。 結果については、図表の数を多くしすぎるのは禁物である。やったことを全部書きたいという気持ちになるかもしれないが、図表が多ければ多いほど、一つひとつの図表のメッセージは薄まると考えるとよい。最大20,000字程度の論文であれば、図表の数は全部で4〜7程度が標準的だろう。 12.7.1 記述的分析 分析結果について述べる場合、まずはじめに記述的な（2変量の）分析が置かれることが多い。次項で回帰分析など他の要因を統制した分析を行う場合には、それにつながるような分析をするに留める。 12.7.2 回帰分析 前項の記述的分析を踏まえて、回帰分析などを行う。 12.8 結論 結論は研究でわかったことをまとめたうえで、考察と議論を展開し、そのインパクトについて論じる章である。以下のような内容から構成される。 12.8.1 背景と目的の再確認（1段落） 研究の背景を再確認する。 先行研究でわかっていなかったこと・不十分な点を再確認する。 研究目的あるいは問いを再確認する。 読者は論文をさかのぼって読まない。なので、改めて「序論」で示した内容を簡潔に確認し、論文で提示した問いに対する答えを述べるための準備をする。 12.8.2 分析結果の要約と解釈（2–4段落） 分析の結果を要約する。そのうえで、その結果がどのようなことを意味しているのか、考察や議論を展開する。 事前の仮説を立てたのだとしたら、それが当てはまったか、当てはまらなかったかについて書く。当てはまったとしたら、その仮説を導いたときの根拠に照らしながら、考察や議論を述べる。当てはまらなかったとしたら、なぜ当てはまらなかったのか、その原因について考察する。 また、分析結果を受けて、さらに広い議論を展開するとよい。たとえば、次のようなものが挙げられる。 政策的示唆：本研究の分析結果を踏まえれば、論文冒頭で掲げた社会問題を解決するためには、このような政策が有効なのではないか？従来は見落とされてきた、このような層への支援が必要なのではないか？etc. 学術的示唆：先行研究は主としてこのような点に焦点を当ててきたが、それでは不十分なのではないか？先行研究が提示してきた説明というのは、必ずしも正しくないのではないか？etc. もちろん、研究目的から大きく外れた議論を展開してはいけない。あくまで、分析結果（や先行研究）をもとにした自分なりの示唆・考察を述べる。 12.8.3 課題・限界（1段落） 本論文に残る課題、限界について書く。ただし、反省文ではなく、今後の研究では、このようなことを分析すると良いのではないかというような方向性を提示する。そうすると、この論文を読んだ他の人が研究を進めやすくなる。 課題や限界は、あまり長く書き過ぎないように34。できなかったことよりもできたことに目を向けよう。 12.8.4 まとめ（1段落、任意） 最後が課題で終わるとなんだか後ろ向きの印象を残してしまう。そこで最後に、「こうした課題はあるけれど、でも本論文はとても重要な貢献をしたんだよ！」ということを書く。 12.9 謝辞 社会調査データは回答者、調査の企画・実施者を含めたくさんの人の協力があってはじめて成り立っていることを忘れてはいけない。そこで既存社会調査データを二次分析する際には、謝辞の記載が求められる。既存社会調査データを借り出して論文を書いた場合には、必ずデータを利用した旨の謝辞を書く。 JGSSの場合は、こちらのページを参照して謝辞を書く。たとえばJGSS2015を利用した場合には次のような謝辞を書くことになっている： 日本版General Social Surveys（JGSS）は、大阪商業大学JGSS研究センター（文部科学大臣認定日本版総合的社会調査共同研究拠点）が、大阪商業大学の支援を得て実施している研究プロジェクトである。JGSS-2015は、JSPS科研費JP26245060、JP15H03485、JP24243057、大阪商業大学アミューズメント産業研究所、日本経済研究センター研究奨励金2014年度（岩井紀子）、労働問題に関する調査研究助成金2015年度（岩井八郎ほか）の支援を受けた。 SSJDA経由でデータを取得した場合は、次のように書く（「2005年SSM日本調査，2005」の例）： 二次分析にあたり、東京大学社会科学研究所附属社会調査・データアーカイブ研究センターSSJデータアーカイブから「2005年SSM日本調査，2005」（2015SSM調査管理委員会）の個票データの提供を受けた。 謝辞の記載方法については、データ利用の際の規約などをよく確認すること。 12.10 参考文献 本文中で引用した参考文献を記載する。参考文献は著者名のアルファベット順に並べる。引用していないものは書かない。 参考文献の記載方法については、基本的に社会学評論スタイルにしたがうこと。ただし、社会学評論スタイルではサブタイトルは——（2倍ダッシュ）で表記しているが、この授業では、：（コロン）で構わない。『理論と方法』スタイルである。 また英語論文のスタイルは、社会学評論スタイルではなく、American Sociological Associationスタイルにしている。これはたんに自分の好みの問題なので、統一的な形式が取られていれば別のものでも構わない。 参考文献リストはアルファベット（ABC）順で記載し、書籍とウェブサイト、日本語と英語といったふうに分けることはしない。 12.10.1 書籍の場合の書き方 著者名，出版年，『書名』出版社．の形式で書く。著者が複数の場合は、ナカグロ（・）でつなぐ。 岩間暁子，2008，『女性の就業と家族のゆくえ：格差社会のなかの変容』東京大学出版会． 浅野正彦・矢内勇生，2018，『Rによる計量政治学』オーム社． 12.10.2 編著書籍中の論文の場合の書き方 著者名，出版年，「タイトル」編者名編『書名』出版社，ページ数．の形式で書く。著者が複数の場合は、ナカグロ（・）でつなぐ。 松浦司，2021，「有配偶者の出産意欲の日台比較」寺村絵理子編『日本・台湾の高学歴女性』晃洋書房，54–72． 12.10.3 日本語の雑誌論文の場合の書き方 著者名，出版年，「タイトル」『雑誌名』巻(号): ページ数．の形式で書く。著者が複数の場合は、ナカグロ（・）でつなぐ。 余田翔平，2012，「子ども期の家族構造と教育達成格差」『家族社会学研究』24(1): 60–71． 永吉希久子，2012，「日本人の排外意識に対する分断労働市場の影響：JGSS-2006の分析から」『社会学評論』19–35． 12.10.4 英語の雑誌論文の場合の書き方 Family name, First name. Year. “Title.” Journal name. Volume(Issue): page.の形式で書く。著者が2名の場合はandでつなぎ、3名以上の場合は,…, and xxx というふうに最後のみandとする。 Torche, Florencia. 2011. “Is a College Degree Still the Great Equalizer? Intergenerational Mobility across Levels of Schooling in the United States.” American Journal of Sociology 117(3):763–807. Bol, Thijs, Christina Ciocca Eller, Herman G. van de Werfhorst, and Thomas A. DiPrete. 2019. “School-to-Work Linkages, Educational Mismatches, and Labor Market Outcomes.” American Sociological Review 84(2):275–307. 12.10.5 英語の書籍の場合の書き方 Blau, Peter M. and Otis Dudley Duncan. 1967. The American Occupational Structure. Free Press. 12.10.6 翻訳書の場合の書き方 Watts, Duncan J. 2011. Everything is Obvious *Once You Know the Answer: Why Common Sense is Nonsense. Atlantic Books.（青木創訳，2014，『偶然の科学』早川書房．） 12.10.7 ウェブサイトの場合の書き方 内閣府，2021，「令和3年版 男女共同参画白書」内閣府男女共同参画局ホームページ．（2021年11月22日閲覧，https://www.gender.go.jp/about_danjo/whitepaper/r03/zentai/index.html） 12.11 そのほかの形式上の注意事項 形式上の注意事項は以下のとおり。なお、以下の形式を全体としてまとめたWordのテンプレートファイルを作成している。こちらにアップロードしているので、ダウンロードして上書きして使ってよい。 12.11.1 推奨するWordの設定 タイトルのフォントサイズは16pt, サブタイトルは14pt, 章タイトルは12pt, 節タイトルは11pt, その他本文は10.5ptを目安とする。 章タイトルや節タイトルのフォントはゴシック体（游ゴシック、ヒラギノ角ゴシックなど）、それ以外は明朝体（游明朝、ヒラギノ明朝など）とする。 本文中のアルファベットや半角数字、表中のフォントはTimes New Romanを推奨する。 余白は上下左右いずれも30mmとし、1行あたりの文字数は40、1ページあたりの行数は35とする。 フッターにはページ数を記載する。ページ数の位置は中央揃えとする。 12.11.2 引用の形式 原則としてauthor-date方式とする。つまり、脚注で引用文献などを示すのではなく、該当する記述の後に（筆者 出版年）を付け、末尾に参考文献としてその書誌情報を記載する方式。何らかの書籍、論文、新聞、雑誌、ウェブサイト、等々、何らかの先行研究や資料を引用するときには必ず引用を記載し、自分の主張や記述とは区別する。より細かい記載方法については「社会学評論スタイルガイド」におおむね準拠する。 本文中の記載例： 近年では男性と女性ともに非正規雇用者は正規雇用者と比べて結婚しにくいことが示されている（佐々木 2012; 麦山 2017）。 Blau and Duncan (1967)が提示した地位達成モデルでは… 12.11.3 図表の形式 原則として、表と図はそれぞれ別々の通し番号をつける。（図1, 図2…, 表1, 表2…） 表や図には一見してわかりやすいタイトルをつける。表や図の下には、必要に応じて出所や注をつける。 カテゴリや軸はたんにRの変数名ではなく、それが何を表しているかがわかるような名前がついている状態にする。たとえば1, 2, というふうな数値であれば「そう思う」「どちらかといえばそう思う」…などといった値が入っているほうが良いし、クロス表であれば、行と列がそれぞれ何の変数であるのかわかるようにする、といったような具合である。 表はテンプレートに示したようにWord上の表機能を使ってきれいな状態にすることが好まれることが多い。表を作成する場合、罫線はできるだけ少なくし、かつ、横の罫線のみ使う（縦の横線は使わない）というのが一般的。各章で紹介したように、gtsummary::tbl_summary()やgtsummary::tbl_cross()、modelsummary::modelsummary()を使うことである程度きれいな表を出力することができるので、活用するとよい。いろいろな論文を読んで、形式を真似してみよう。 図であれば、文字が小さくなりすぎないようにする。 以上の図表の例は先に示したテンプレート上に記載している。 12.11.4 脚注 本文の流れのうえでは不要であるが、より詳細な情報などを記載したいときには脚注を使用する35。Wordの脚注機能を使ってつける。 自分でいうのもおかしいかもしれないが、麦山はいつもこうした標準的な構成に準拠して論文を書いているので、麦山の過去に書いた論文を真似するとだいたい標準的な構成になるだろう。もちろん、文章そのものは盗用しないように。↩︎ 締切間際に書く大学の授業のレポートはまさに上から下へと順番に書いていって見直さないものの典型かもしれないが。。。↩︎ なお、事前に問いや仮説を厳格には設定せず、さまざまな分析を行うタイプの研究を「探索的研究（Exploring research）」という。こうした研究は、その後別の研究が取り組むべき課題（問い）を見つけるうえで役に立つ。このような場合には、無理やり問いや仮説を立てる必要はなく、すなおに探索的な研究であると述べるとよい。ただし、探索的研究ばかりやっていても一向に問いを立てる力がつかないので、取り組むとしてもある程度研究の経験を積んでからにするとよいだろう。↩︎ つまり、映画の予告や小説の裏表紙のあらすじみたいに「さわりだけ触れている」ようなものはよくない。↩︎ もちろんこれは理想であって、実際に実現するのはプロの研究者であっても難しい。↩︎ ただし、論文の読者にとって自明な変数の場合はわざわざその定義までくわしく説明しないことは多い。たとえば、性別など。年齢については、年齢を連続変数として使う場合もあれば、10歳区切りなどの年齢層に区切って使う場合もあるので、どのように使うかについては説明が必要。学歴も、「最後に卒業した学校」なのか「最後に通った学校」なのか、また学歴のカテゴリ分けについても研究によって異なっているため、説明が必要。↩︎ 個人的には、結論での議論や考察に比べて課題が極端に長いと、せっかく行った研究のアピールポイントが削がれてしまうように感じてしまう。ただし、これについては課題を長々書くのが科学的に誠実な態度だと言う人もいて、好みがあると思う。↩︎ たとえばこんなふうに。↩︎ "],["presentation.html", "Chapter 13 研究発表をする 13.1 発表の構成 13.2 その他発表に際して気をつけるとよいこと", " Chapter 13 研究発表をする データ分析をしたり、論文を書いている途中の段階で、現時点での研究成果や進捗状況について研究発表をすることがある。報告の際には、スライド（PowerPointなど）を使って報告する。 スライドを作る際には、次のような形式を参考にするとよい。 13.1 発表の構成 発表の構成は大きく分けて タイトル 序論（背景および問い） 方法 分析結果 結論 のブロックに分けるとよい。それぞれ順番解説する。 13.1.1 タイトル 1ページ目には論文のタイトルと発表者の名前・所属を記載する。「研究発表」というタイトルをつけてはいけない。そのほか、タイトルのスライドに載っていることの多い情報としては以下のようなものがある。 日付とイベントの名前、会場の場所（この授業であれば、2024年x月x日 社会学演習中間発表 など） 連絡先 発表者の所属のロゴ（大学ロゴの使用に際しては所属先の規定を確認すること） 謝辞 13.1.2 序論 13.1.2.1 問題背景 これから扱うテーマについて導入をする。 13.1.2.2 先行研究で明らかになっていない点 先行研究で何が明らかになっていて、何が明らかになっていないのかを提示する。 13.1.2.3 研究目的・問い 研究目的ないし問いについて述べる。 問いは、実際に検証する具体的で絞られた問いである必要がある。 13.1.2.4 仮説（任意） 問いに関連して仮説を立てた場合には、その仮説、および仮説を導くために用いた理論について説明する。 13.1.3 方法 13.1.3.1 データと分析対象 データ：どのようなデータを使用したのか、その調査データの名前、どのような人や組織などを対象とした調査なのか、いつ実施された調査なのかを記載する。 分析対象：上記の調査データから一部の対象者を選択した場合には、どのような対象者を選択したのかを説明する。 13.1.3.2 用いる変数 従属変数とする変数、独立変数とする変数、統制変数とする変数について、それぞれ説明する。 13.1.3.3 分析方法（任意） 特殊な分析方法を使う場合に限り、説明する。このウェブページに載っているような方法を使っている場合には、解説の必要はない。 13.1.4 分析結果 分析した結果を提示する。ただし、やったことを何でもかんでも提示するのではなく、最初に立てた問いに関係するものを主として取り上げるのが原則。 13.1.4.1 2変数の分析 クロス集計表、平均値の比較などといった2変数単位の分析を中心にする。 13.1.4.2 回帰分析など 他の要因を統制したうえでも関連が見られるかどうか、他の変数と組み合わせた場合の結果などについて、回帰分析を行った際の結果を提示する。 13.1.5 結論 13.1.5.1 分析結果のまとめ 得られた分析結果を要約する。10分程度の短い報告の場合には不要。 13.1.5.2 考察・課題 得られた分析結果の考察や、仮説が支持された（されなかった）としたらそれはなぜかを記載する。 また、研究内容に関して現在悩んでいる点、今後の課題を記載する。 13.2 その他発表に際して気をつけるとよいこと 13.2.1 事前に発表練習をする 一度発表に用いるスライドを作り終えたら、実際に話して発表練習をするとよい。実際に発表練習をしてみることの最大の利点は、発表内容が決められた時間内に収まるかを確認できるということである。 決められた発表時間内に報告を終えることは何より重要である。学会などでは報告者ごとに決められた時間があり、報告時間が伸びると他の報告者の時間を圧迫してしまったり、自身の報告に対してコメントをもらう時間がなくなってしまったりして、望ましくない。また聴衆も、決められた時間を超えた発表は聞く気力がなくなってしまう。発表練習をすることで、時間が長すぎるかどうかを実際に確かめることができるし、どの箇所が不要なのかを見極めることができる。 上記に述べたように、報告のブロックは大きく分けて序論、方法、結果、結論の順にまとまっていることが多い。そのため、たとえば 発表時間が10分：序論4分→方法2分→結果3分→結論1分 発表時間が15分：序論7分→方法2分→結果5分→結論1分 発表時間が20分：序論10分→方法3分→結果6分→結論1分 というように、各ブロックを何分間で終えるかを決めておくとよい。そうすることで、発表中にここのブロックは長すぎると思えば、あとのブロックを省略して発表することができる。 もちろん、上記の時間の割り当てはたんなる一例であり、実際には内容の組み立てやどのような人が聞くのかによって内訳は変わってくる。 13.2.2 文字は大きく少なく 左上から右下まで文字が詰まったスライドはとても見にくい。聴衆の側から見ると、文字を読みながら話を聞くことは難しく、また目の前に文字があるとつい文字を読むことに注意が割かれる。そのため、スライドが文字で埋め尽くされていると、聴衆は発表者の話を聞くことではなく、スライドの文字を目で追うことに集中してしまい、話を聞いてくれなくなる。 また、スライドの文字が小さいと後ろのほうに座っている人からは見えない。 以上の理由から、スライドの文字は可能な限り少なめに、かつ大きくするとよい。 13.2.3 スライドにはページ数を書く 質疑応答の際に、スライドのページ数に言及することがある。その際にページ数があると便利なので、つけておくとよい。 13.2.4 スライドつくりの参考資料 麦山のResearchmapにスライドをアップロードしているので、みてみると参考になるかもしれない。 ただし、報告時間が15分程度ある場合を念頭に置いており、先行研究や背景についての説明がもう少し多くなっていることに注意すること。 ほかにも、みやすいスライドの作り方を解説した資料はたくさんある。たとえば以下のような書籍や資料を参考にするとよい。 伝わるデザイン：研究発表のユニバーサルデザイン：たいへんよくまとまっているウェブサイト。筆者らのアイデアをまとめて、さらに詳しく解説したものとして以下の書籍がある。 高橋佑磨・片山なつ，2021，『伝わるデザインの基本 増補改訂3版 良い資料を作るためのレイアウトのルール』 技術評論社． また、よりやさしく説明した資料として以下がある。「高校生の」とあるが、大学生はもちろん、研究者にとっても大変有益。 伝わるデザイン：高校生のための研究発表の手引き "],["reference.html", "Chapter 14 さらなる学習のための参考文献等 14.1 実証研究の基礎スキル 14.2 Rの使い方 14.3 ggplotの解説 14.4 統計学・計量分析を学ぶ 14.5 簡単に利用できる個票データ", " Chapter 14 さらなる学習のための参考文献等 学部レベルを念頭において、学習のために役立つだろう参考文献をリストする。 14.1 実証研究の基礎スキル 社会学（あるいは社会科学）の実証研究論文とはどのようなものか、ということについては、以下の書籍が参考になる。 明石芳彦，2018，『社会科学系論文の書き方』ミネルヴァ書房． 小熊英二，2022，『基礎からわかる論文の書き方』講談社現代新書． 経済セミナー編集部編，2022，『経済論文の書き方』日本評論社． 14.2 Rの使い方 Rはtidyverseパッケージの普及以前と以後で望ましいとされる文法が大きく変わっているため、tidyverseの使用を前提としたものを使うことを強くおすすめする。また、良書ではあるのだけれど、機械学習など社会学の関心とはやや離れた内容を念頭に置いたものも多く、ぴったりの書籍は少ない。こうしたなかで、日本語で読める書籍としては、以下の書籍がおすすめできる。 藤井亮輔，2021，『超入門！Rでできるビジュアル統計学：学会・論文発表に役立つデータ可視化マニュアル』金芳堂． 浅野正彦・矢内勇生，2018，『Rによる計量政治学入門』オーム社． 星野匡郎・田中久稔・北川利津，2023，『Rによる実証分析［第2版］』オーム社． そのほか、ウェブページでRの使い方を紹介してくれている方も多い。以下に挙げたウェブページはいずれも参考になる。 RとRStudioのインストール方法の解説 卒業論文のためのR入門 私たちのR：ベストプラクティスの探求 14.3 ggplotの解説 本資料では基本的にすべてggplot2を使って図（グラフ）を作成しているが、ggplot2による可視化は非常に優れており、さまざまな図を作ることができる。本資料で扱ったものにさらに工夫を重ねれば、より見やすい図を作ることができる。ggplot2の使い方に特化した参考文献としては以下のものが挙げられる（下に行くほどむずかしい）： 藤井亮輔，2021，『超入門！Rでできるビジュアル統計学：学会・論文発表に役立つデータ可視化マニュアル』金芳堂． Chang, Winston. 2019. R Graphics Cookbook: Practical Recipes for Visualizing Data. Second Edition. O’Reilly（石井弓美子・川内崇・瀬戸山雅人訳，『Rグラフィックスクックブック：ggplot2によるグラフ作成のレシピ集』オライリー・ジャパン）． Healy, Kieran. 2019. Data Visualization: A Practical Introduction. Princeton University Press.（瓜生真也・江口哲史・三村喬生訳，『データ分析のためのデータ可視化入門』講談社．）（著者により原著のドラフトが公開されている） 14.4 統計学・計量分析を学ぶ 統計ソフトの使い方を学ぶだけではなくて、統計学や計量分析の方法についての理論的な側面も学ぶと、より適切な分析をすることにつながるだろう。データ分析とはいったい何をするのかということについての入門書としては、（英語だが）以下の本が最もよく書かれている。 Llaudet, Elena and Kosuke Imai. 2022. Data Analysis for Social Science: A Friendly and Practical Introduction. Princeton University Press. 社会学の実証分析でもっともよく分析される社会調査データというのがどのような性質をもち、どのような方法で収集されているのかを知っておくと、その意味をより理解できるようになるだろう。最近だと以下の書籍はよい教科書だと思う。 轟亮・杉野勇・平澤和司編，2021，『入門・社会調査法［第4版］：2ステップで基礎から学ぶ』法律文化社． 毛塚和宏，2022，『社会科学のための統計学入門：実例からていねいに学ぶ』講談社． 計量分析にはさまざまな方法があるが、そのほとんどで基礎になっているのが回帰分析であり、回帰分析をもっともきちんと説明しているのが計量経済学の教科書である。なので、計量経済学の入門書を読むのがいろいろな計量分析の方法を学ぶ上で有益だろう。 田中隆一，2015，『計量経済学の第一歩：実証分析のススメ』有斐閣． 西山慶彦・新谷元嗣・川口大司・奥井亮，2019，『計量経済学』有斐閣．（注：すばらしい教科書ですが、数学をやるぞという覚悟が必要です） Wooldridge, Jeffrey M. 2019. Introductory Econometrics: A Modern Approach, 7th Edition. Cengage Learning.（注：すばらしい教科書ですが、数学をやるぞという覚悟が必要です） また、最近は研究の世界でもそうでない世界でも因果推論が重要だといわれはじめて久しい。因果推論について勉強することは、仮に因果推論を使わないとしても自分が何を行っているのか、分析する際に何を考える必要があるのかを明確にする上で役に立つ。以下の書籍は内容もそこまで難しすぎないのでおすすめできる（下に行くほどむずかしい）。 中室牧子・津川友介，2017，『原因と結果の経済学』ダイヤモンド社． 松林哲也，2021，『政治学と因果推論：比較から見える政治と社会』岩波書店． 安井翔太・株式会社ホクソエム，2020，『効果検証入門：正しい比較のための因果推論／計量経済学の基礎』技術評論社． 14.5 簡単に利用できる個票データ 本ウェブサイトでは誰でも無料・登録なしでダウンロードできるPIAACの個票データを用いたが、その他にも利用可能な個票データはさまざまあり、これらを使って分析してみることで、さらに社会調査のデータ分析に親しむことができるだろう。無料・登録なしで利用できる社会調査データを公開しているページをいくつか例として挙げる。 NIRA総合研究開発機構，NIRA総研が個票データを提供している社会調査一覧 谷口将紀，東京大学谷口研究室・朝日新聞社共同調査 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
